searchState.loadedDescShard("cosmic", 13, "A pointer to the <code>JsValue</code> of an <code>HtmlCanvasElement</code>.\nA pointer to the <code>JsValue</code> of an <code>OffscreenCanvas</code>.\nCreate an OpenHarmony-based display handle.\nCreate an Orbital-based display handle.\nThe primary drm plane handle.\nAn X11 screen to use with this display handle.\nAn X11 screen to use with this display handle.\nA pointer to a <code>wl_surface</code>.\nA pointer to an <code>UIView</code> object.\nA pointer to an <code>UIViewController</code> object, if the view has …\nCreate a UiKit-based display handle.\nAn Xlib visual ID, or 0 if unknown.\nAn X11 <code>xcb_visualid_t</code>.\nCreate a Web-based display handle.\nA pointer to an orbclient window.\nAn Xlib <code>Window</code>.\nAn X11 <code>xcb_window_t</code>.\nGet a handle to the window.\nCreate a Windows-based display handle.\nErrors that can occur when cropping a <code>Screenshot</code>.\nThe cropped region’s size is out of bounds.\nData of a screenshot, captured with <code>window::screenshot()</code>.\nThe cropped region’s size is zero.\nThe bytes of the <code>Screenshot</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe scale factor of the <code>Screenshot</code>. This can be useful …\nThe size of the <code>Screenshot</code> in physical pixels.\nThe settings of an application.\nThe fonts to load on boot.\nThe identifier of the application.\nWhether the application should exit when no windows are …\nEnd user application handling.\nThe event enums and assorted supporting types.\nThe <code>EventLoop</code> struct and assorted supporting types, …\nTypes related to the keyboard.\nTypes useful for interacting with a user’s monitors.\nContains traits with platform-specific methods in them.\nThe <code>Window</code> struct and associated types.\nThe handler of the application events.\nEmitted when the event loop is about to block and wait for …\nEmitted from the point onwards the application should …\nEmitted when the application must destroy its render …\nEmitted when the OS sends an event to a device.\nEmitted when the event loop is being shut down.\nEmitted when the application has received a memory warning.\nEmitted when new events arrive from the OS to be processed.\nCalled after a wake up is requested using …\nEmitted when the application has been resumed.\nEmitted when the application has been suspended.\nEmitted when the OS sends an event to a winit window.\nA position represented in logical pixels.\nA size represented in logical pixels.\nA logical pixel unit.\nRepresents a maximum logical unit that is equal to <code>f64::MAX</code>…\nRepresents a maximum physical unit that is equal to …\nRepresents a maximum logical unit that is equal to <code>f64::MAX</code>…\nRepresents a minimum logical unit of <code>f64::MAX</code>.\nRepresents a minimum physical unit of <code>f64::MAX</code>.\nRepresents a minimum logical unit of <code>f64::MAX</code>.\nA position represented in physical pixels.\nA size represented in physical pixels.\nA physical pixel unit.\nA pixel unit that’s either physical or logical.\nA position that’s either physical or logical.\nA size that’s either physical or logical.\nRepresents a logical unit of <code>0_f64</code>.\nRepresents a physical unit of <code>0_f64</code>.\nRepresents a logical unit of <code>0_f64</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks that the scale factor is a normal positive <code>f64</code>.\nA general error that may occur while running or creating …\nApplication has exit with an error status.\nThe request was ignored by the operating system.\nCreating the event loop with the requested configuration …\nThe request is not supported.\nThe requested operation is not supported.\nGot unspecified OS-specific error during the request.\nGot unspecified OS specific error during the request.\nUnclassified error from the OS.\nThe event loop can’t be re-created.\nA general error that may occur during a request to the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSee <code>ApplicationHandler::about_to_wait</code> for details.\nThe activation token was delivered back and now could be …\nIdentifier for a specific analog axis on some device.\nIdentifier for a specific button on some device.\nOn iOS, the force is calibrated so that the same number …\nThe window has been requested to close.\nNotifies when text should be inserted into the editor …\nSee <code>ApplicationHandler::can_create_surfaces</code> for details.\nThe cursor has entered the window.\nThe cursor has left the window.\nThe cursor has moved on the window.\nThe window has been destroyed.\nRepresents raw hardware events that are not associated …\nSee <code>ApplicationHandler::device_event</code> for details.\nIdentifier of an input device.\nNotifies when the IME was disabled.\nDouble tap gesture.\nA file has been dropped into the window.\nDescribes the input state of a key.\nNotifies when the IME was enabled.\nDescribes a generic event.\nIdentifier of a finger in a touch event.\nThe window gained or lost focus.\nDescribes the force of a touch event\nA file is being hovered over the window.\nA file was hovered, but has exited the window.\nDescribes input method events.\nAn event from an input method.\nSent once, immediately after <code>run</code> is called. Indicates that …\nDescribes a keyboard input targeting a window.\nAn event from the keyboard has been received.\nAmount in lines or rows to scroll in the horizontal and …\nSee <code>ApplicationHandler::exiting</code> for details.\nSee <code>ApplicationHandler::memory_warning</code> for details.\nDescribes keyboard modifiers event.\nThe keyboard modifiers have changed.\nDescribes a button of a mouse controller.\nAn mouse button press has been received.\nChange in physical position of a pointing device.\nDescribes a difference in the mouse scroll wheel state.\nA mouse wheel movement or touchpad scroll occurred.\nPhysical scroll event\nThe position of the window has changed. Contains the window…\nSee <code>ApplicationHandler::new_events</code> for details.\nIf the platform reports the force as normalized, we have …\nThe window has been occluded (completely hidden from view).\nN-finger pan gesture\nTwo-finger pinch gesture, often used for magnification.\nAmount in pixels to scroll in the horizontal and vertical …\nSent if the event loop is being resumed after the loop’s …\nNotifies when a new composing text should be set at the …\nDescribes a keyboard input as a raw device event.\nEmitted when a window should be redrawn.\nSent if the time specified by <code>ControlFlow::WaitUntil</code> has …\nSee <code>ApplicationHandler::resumed</code> for details.\nTwo-finger rotation gesture.\nThe window’s scale factor has changed.\nDescribes the reason the event loop is resuming.\nThe suggested bounds of the window’s surface has changed.\nThe size of the window’s surface has changed.\nHandle to synchronously change the size of the window from …\nSee <code>ApplicationHandler::suspended</code> for details.\nThe system window theme has changed.\nRepresents a touch event\nTouch event has been received\nDescribes touch-screen input state.\nTouchpad pressure event.\nUser requested a wake up.\nSent if the OS has new events to send to the window, after …\nDescribes an event from a [<code>Window</code>].\nSee <code>ApplicationHandler::window_event</code> for details.\nReturns a dummy id, useful for unit testing.\nReturns a dummy id, useful for unit testing.\nUnique identifier of a finger.\nDescribes how hard the screen was pressed. May be <code>None</code> if …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTrue if <code>self == Pressed</code>.\nThe state of the left alt key.\nThe state of the left control key.\nContains the location of this key on the keyboard.\nThis value is affected by all modifiers except Ctrl.\nThe state of the left shift key.\nThe state of the left super key.\nReturns the force normalized to the range between 0.0 and …\nRepresents the position of a key independent of the …\nThe state of the right alt key.\nThe state of the right control key.\nWhether or not this key is a key repeat event.\nTry to request surface size which will be set …\nThe state of the right shift key.\nThe state of the right super key.\nThe state of the modifiers.\nWhether the key is being pressed or released.\nContains the text produced by this keypress.\n(x, y) change in position in unspecified units.\nThe altitude (in radians) of the stylus.\nThe force of the touch, where a value of 1.0 represents …\nThe maximum possible force for a touch.\nPositive values indicate magnification (zooming in) and  …\nChange in pixels of pan gesture from last update.\nchange in rotation in degrees\nIf <code>true</code>, the event was generated synthetically by winit in …\n(x,y) coords in pixels relative to the top-left corner of …\nHandle to update surface size during scale changes.\nReport device events regardless of window focus.\nA unique identifier of the winit’s async request.\nSet through <code>ActiveEventLoop::set_control_flow()</code>.\nControl when device events are captured.\nProvides a way to retrieve events from the system and from …\nObject that allows building the event loop.\nControl the <code>EventLoop</code>, possibly from a different thread, …\nNever capture device events.\nA proxy for the underlying display handle.\nWhen the current loop iteration finishes, immediately …\nWhen the current loop iteration finishes, suspend the …\nWhen the current loop iteration finishes, suspend the …\nOnly capture device events while the window is focused.\nGet the underlying EventLoop’s <code>fd</code> which you can register …\nGet the underlying EventLoop’s raw <code>fd</code> which you can …\nReturns the list of all the monitors available on the …\nBuilds a new event loop.\nStart building a new event loop.\nGets the current <code>ControlFlow</code>.\nCreate custom cursor.\nCreate custom cursor.\nCreates an <code>EventLoopProxy</code> that can be used to dispatch …\nCreates an <code>EventLoopProxy</code> that can be used to dispatch …\nCreate the window.\nThis exits the event loop.\nReturns if the <code>EventLoop</code> is about to stop.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChange if or when <code>DeviceEvent</code>s are captured.\nChange if or when <code>DeviceEvent</code>s are captured.\nCreate the event loop.\nGets a persistent reference to the underlying platform …\nGets a persistent reference to the underlying platform …\nReturns the primary monitor of the system.\nRun the application with the event loop on the calling …\nGet the raw-window-handle handle.\nSets the <code>ControlFlow</code>.\nSets the <code>ControlFlow</code>.\nReturns the current system theme.\nCreates a <code>ControlFlow</code> that waits until a timeout has …\nWake up the <code>EventLoop</code>, resulting in …\nThe “alt” key.\nSwitch the input mode on an external AVR (audio/video …\nToggle the power on an external AVR (audio/video …\nThe Accept (Commit, OK) key. Accept current option or …\nFound on Sun’s USB keyboard.\nRedo or repeat an action.\nInitiate the multi-candidate mode.\nThe <code>Alt</code> (Alternative) key.\nThe Alternate Graphics (AltGr or AltGraph) key.\nAlt, Option, or ⌥.\nAlt, Option, or ⌥. This is labeled AltGr on many …\nAn Android “scancode”.\nAn Android “keycode”, which is similar to a “…\nThe Application switch key, which provides a list of …\n↓\nNavigate or traverse downward. (<code>KEYCODE_DPAD_DOWN</code>)\n←\nNavigate or traverse leftward. (<code>KEYCODE_DPAD_LEFT</code>)\n→\nNavigate or traverse rightward. (<code>KEYCODE_DPAD_RIGHT</code>)\n↑\nNavigate or traverse upward. (<code>KEYCODE_DPAD_UP</code>)\nThe Attention (Attn) key.\nAdjust audio balance leftward. (<code>VK_AUDIO_BALANCE_LEFT</code>)\nAdjust audio balance rightward. (<code>VK_AUDIO_BALANCE_RIGHT</code>)\nDecrease audio bass boost or cycle down through bass boost …\nToggle bass boost on/off. (<code>APPCOMMAND_BASS_BOOST</code>)\nIncrease audio bass boost or cycle up through bass boost …\nAdjust audio fader towards front. (<code>VK_FADER_FRONT</code>)\nAdjust audio fader towards rear. (<code>VK_FADER_REAR</code>)\nAdvance surround audio mode to next available mode. (…\nDecrease treble. (<code>APPCOMMAND_TREBLE_DOWN</code>)\nIncrease treble. (<code>APPCOMMAND_TREBLE_UP</code>)\nDecrease audio volume. (<code>APPCOMMAND_VOLUME_DOWN</code>, …\nToggle between muted state and prior volume level. (…\nIncrease audio volume. (<code>APPCOMMAND_VOLUME_UP</code>, …\n` on a US keyboard. This is also called a backtick or …\nUsed for both the US \\ (on the 101-key layout) and also …\nBackspace or ⌫. Labeled Delete on Apple keyboards.\nUsed to remove the character to the left of the cursor. …\n[ on a US keyboard.\n] on a US keyboard.\nThe Brightness Down key. Typically controls the display …\nThe Brightness Up key. Typically controls the display …\nSome laptops place this key to the left of the ↑ key.\nNavigate to previous content or page in current history. (…\nOpen the list of browser favorites. (…\nSome laptops place this key to the right of the ↑ key.\nNavigate to next content or page in current history. (…\nThe “home” button on Android.\nGo to the user’s preferred home page. (…\nRefresh the current page or content. (…\nCall up the user’s preferred search page. (…\nStop loading the current page or content. (…\nThe “control” key.\nThe Call key. (<code>KEYCODE_CALL</code>)\nThe Camera key. (<code>KEYCODE_CAMERA</code>)\nThe Camera focus key. (<code>KEYCODE_FOCUS</code>)\nCapsLock or ⇪\nThe <code>Caps Lock</code> (Capital) key.\nSelect next (numerically or logically) lower channel. (…\nSelect next (numerically or logically) higher channel. (…\nA key string that corresponds to the character typed by …\nRemove the currently selected input.\nClose the current document or message (Note: This …\nToggle the display of Closed Captions. (<code>VK_CC</code>, …\nA known key code\nInitiate the Code Input mode to allow characters to be …\nGeneral purpose color-coded media function key, as index 0 …\nGeneral purpose color-coded media function key, as index 1 …\nGeneral purpose color-coded media function key, as index 2 …\nGeneral purpose color-coded media function key, as index 3 …\nGeneral purpose color-coded media function key, as index 4 …\nGeneral purpose color-coded media function key, as index 5 …\n, on a US keyboard.\nThe Compose key, also known as “Multi_key” on the X …\nThe application context menu key, which is typically found …\nShow the application’s context menu. This key is …\nThe <code>Control</code> or <code>Ctrl</code> key.\nControl or ⌃\nControl or ⌃\nJapanese: 変 (henkan)\nConvert the current input method sequence.\nFound on Sun’s USB keyboard.\nCopy the current selection. (<code>APPCOMMAND_COPY</code>)\nThe Cursor Select key.\nFound on Sun’s USB keyboard.\nCut the current selection. (<code>APPCOMMAND_CUT</code>)\nSelect Digital Video Rrecorder. (<code>KEYCODE_DVR</code>)\nContains the text representation of the dead-key when …\n⌦. The forward delete key. Note that on Apple keyboards, …\nUsed to delete the character to the right of the cursor. …\n0 on a US keyboard.\n1 on a US keyboard.\n2 on a US keyboard.\n3 on a US keyboard.\n4 on a US keyboard.\n5 on a US keyboard.\n6 on a US keyboard.\n7 on a US keyboard.\n8 on a US keyboard.\n9 on a US keyboard.\nAdjust brightness of device, by toggling between or …\nSwap video sources. (<code>VK_DISPLAY_SWAP</code>)\nThe Eisu key. This key may close the IME, but its purpose …\nEject or ⏏. This key is placed in the function section …\nToggle removable media to eject (open) and insert (close) …\nPage Down, End, or ↘\nThe End key, used with keyboard entry to go to the end of …\nThe End Call key. (<code>KEYCODE_ENDCALL</code>)\nEnter or ↵. Labeled Return on Apple keyboards.\nThe <code>Enter</code> or <code>↵</code> key. Used to activate current selection …\n= on a US keyboard.\nThe Erase to End of Field key. This key deletes all …\nEsc or ⎋\nThe <code>Esc</code> key. This key was originally used to initiate an …\nThe Extend Selection (Exsel) key.\nExit the current application. (<code>VK_EXIT</code>)\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nClear program or content stored as favorite 0. (…\nClear program or content stored as favorite 1. (…\nClear program or content stored as favorite 2. (…\nClear program or content stored as favorite 3. (…\nSelect (recall) program or content stored as favorite 0. (…\nSelect (recall) program or content stored as favorite 1. (…\nSelect (recall) program or content stored as favorite 2. (…\nSelect (recall) program or content stored as favorite 3. (…\nStore current program or content as favorite 0. (…\nStore current program or content as favorite 1. (…\nStore current program or content as favorite 2. (…\nStore current program or content as favorite 3. (…\nThe Final Mode <code>Final</code> key used on some Asian keyboards, to …\nFound on Sun’s USB keyboard.\nOpen the Find dialog. (<code>APPCOMMAND_FIND</code>)\nFn This is typically a hardware key that does not generate …\nThe Function switch <code>Fn</code> key. Activating this key …\nFLock or FnLock. Function Lock key. Found on the Microsoft …\nThe Function-Lock (<code>FnLock</code> or <code>F-Lock</code>) key. Activating this …\nThe Back key. (<code>KEYCODE_BACK</code>)\nThe Home key, which goes to the phone’s main screen. (…\nSwitch to the first character group. (ISO/IEC 9995)\nSwitch to the last character group. (ISO/IEC 9995)\nSwitch to the next character group. (ISO/IEC 9995)\nSwitch to the previous character group. (ISO/IEC 9995)\nToggle display of program or content guide. (<code>VK_GUIDE</code>, …\nIf guide is active and displayed, then display next …\nIf guide is active and displayed, then display previous …\nToggle between Hangul and English modes.\nThe (Half-Width) Characters key.\nThe Headset Hook key. (<code>KEYCODE_HEADSETHOOK</code>)\nHelp. Not present on standard PC keyboards.\nOpen a help dialog or toggle display of help information. (…\nThe Hibernate key. This key saves the current state of the …\nUse for dedicated ひらがな key found on some Japanese …\nThe Hiragana (Japanese Kana characters) key.\nThe Hiragana/Katakana toggle key. (…\nHome or ↖\nThe Home key, used with keyboard entry, to go to start of …\nToggle display of information about currently selected …\nInsert or Ins. Not present on Apple keyboards.\nToggle between text modes for insertion or overtyping. (…\nToggle instant replay. (<code>VK_INSTANT_REPLAY</code>)\nLocated between the left Shift and Z keys. Labeled \\ on a …\nLocated between the / and right Shift keys. Labeled \\ (ro) …\nLocated between the = and Backspace keys. Labeled ¥ (yen) …\nJapanese: カタカナ/ひらがな/ローマ字 …\nThe Kana Mode (Kana Lock) key. This key is used to enter …\nThe Kanji (Japanese name for ideographic characters of …\nUse for dedicated カタカナ key found on some Japanese …\nThe Katakana (Japanese Kana characters) key.\nKey represents the meaning of a keypress.\nThe <code>11</code> key found on media numpads that have buttons from <code>1</code> …\nThe <code>12</code> key found on media numpads that have buttons from <code>1</code> …\na on a US keyboard. Labeled q on an AZERTY (e.g., French) …\nb on a US keyboard.\nc on a US keyboard.\nCode representing the location of a physical key\nd on a US keyboard.\ne on a US keyboard.\nf on a US keyboard.\ng on a US keyboard.\nh on a US keyboard.\ni on a US keyboard.\nj on a US keyboard.\nk on a US keyboard.\nl on a US keyboard.\nThe location of the key on the keyboard.\nm on a US keyboard.\nn on a US keyboard.\no on a US keyboard.\np on a US keyboard.\nq on a US keyboard. Labeled a on an AZERTY (e.g., French) …\nr on a US keyboard.\ns on a US keyboard.\nt on a US keyboard.\nu on a US keyboard.\nv on a US keyboard.\nw on a US keyboard. Labeled z on an AZERTY (e.g., French) …\nx on a US keyboard.\ny on a US keyboard. Labeled z on a QWERTZ (e.g., German) …\nz on a US keyboard. Labeled w on an AZERTY (e.g., French) …\nKorean: HangulMode 한/영 (han/yeong)\nKorean: Hanja 한 (hanja)\nJapanese (word-processing keyboard): Katakana\nJapanese (word-processing keyboard): Hiragana\nJapanese (word-processing keyboard): Zenkaku/Hankaku\nSometimes labelled My Computer on the keyboard\nSometimes labelled Calculator on the keyboard\nThe first generic “LaunchApplication” key. This is …\nThe second generic “LaunchApplication” key. This is …\nThe “Calendar” key. (<code>KEYCODE_CALENDAR</code>)\nThe “Contacts” key. (<code>KEYCODE_CONTACTS</code>)\nThe “Mail” key. (<code>APPCOMMAND_LAUNCH_MAIL</code>)\nThe “Media Player” key. (<code>APPCOMMAND_LAUNCH_MEDIA_SELECT</code>…\nThe key is on the left side of the keyboard.\nLaunch linked content, if available and appropriate. (…\nList the current program. (<code>VK_LIST</code>)\nToggle display listing of currently available live content …\nLock or unlock current content or program. (<code>VK_LOCK</code>)\nA macOS “scancode”.\nA macOS “scancode”. There does not appear to be any …\nOpen an editor to forward the current message. (…\nOpen an editor to reply to the current message. (…\nSend the current message. (<code>APPCOMMAND_SEND_MAIL</code>)\nToggle between manner mode state: silent, vibrate, ring, …\nShow a list of media applications: audio/video players and …\nAudio track key. (<code>KEYCODE_MEDIA_AUDIO_TRACK</code>)\nClose the current media, for example to close a CD or DVD …\nInitiate or continue forward playback at faster than …\nSelect previously selected channel or media. (<code>VK_LAST</code>, …\nPause the currently playing media. (<code>APPCOMMAND_MEDIA_PAUSE</code>…\nInitiate or continue media playback at normal speed, if …\nToggle media between play and pause states. (…\nInitiate or resume recording of currently selected media. (…\nInitiate or continue reverse playback at faster than …\nSkip backward to next content or program. (…\nSkip forward to next content or program. (<code>VK_SKIP</code>, …\nStep backward to next content or program. (…\nStep forward to next content or program. (…\nStop media playing, pausing, forwarding, rewinding, or …\nMedia top menu. (<code>KEYCODE_MEDIA_TOP_MENU</code>)\nSeek to next media or program track. (…\nSeek to previous media or program track. (…\nToggle the microphone on/off. (<code>APPCOMMAND_MIC_ON_OFF_TOGGLE</code>…\nDecrease microphone volume. (…\nMute the microphone. (<code>APPCOMMAND_MICROPHONE_VOLUME_MUTE</code>, …\nIncrease microphone volume. (…\n- on a US keyboard.\nToggle between or cycle through input modes of IMEs.\nThe state of the particular modifiers key.\nRepresents the current state of the keyboard modifiers\nA simple (unparameterised) action\nA <code>Key::Named</code> value\nContains the platform-native logical key identifier\nContains the platform-native physical key identifier\nNavigate in. (<code>KEYCODE_NAVIGATE_IN</code>)\nNavigate to next key. (<code>KEYCODE_NAVIGATE_NEXT</code>)\nNavigate out. (<code>KEYCODE_NAVIGATE_OUT</code>)\nNavigate to previous key. (<code>KEYCODE_NAVIGATE_PREVIOUS</code>)\nOpen a new document or message. (<code>APPCOMMAND_NEW</code>)\nCycle to next favorite channel (in favorites list). (…\nCycle to next user profile (if there are multiple user …\nJapanese: 無変換 (muhenkan)\nAccept current input method sequence without conversion in …\nThe Notification key. (<code>KEYCODE_NOTIFICATION</code>)\nOn the Mac, this is used for the numpad Clear key.\nThe <code>NumLock</code> or Number Lock key. Used to toggle numpad mode …\nThe key is on the numpad.\n0 Ins on a keyboard. 0 on a phone or remote control\n1 End on a keyboard. 1 or 1 QZ on a phone or remote control\n2 ↓ on a keyboard. 2 ABC on a phone or remote control\n3 PgDn on a keyboard. 3 DEF on a phone or remote control\n4 ← on a keyboard. 4 GHI on a phone or remote control\n5 on a keyboard. 5 JKL on a phone or remote control\n6 → on a keyboard. 6 MNO on a phone or remote control\n7 Home on a keyboard. 7 PQRS or 7 PRS on a phone or remote …\n8 ↑ on a keyboard. 8 TUV on a phone or remote control\n9 PgUp on a keyboard. 9 WXYZ or 9 WXY on a phone or remote …\n+\nFound on the Microsoft Natural Keyboard.\nC or A (All Clear). Also for use with numpads that have a …\nC (Clear Entry)\n, (thousands separator). For locales where the thousands …\n. Del. For locales where the decimal separator is “,” …\n/\n=\n# on a phone or remote control device. This key is …\nM Add current entry to the value stored in memory.\nM Clear the value stored in memory.\nM Replace the current entry with the value stored in …\nM Replace the value stored in memory with the current …\nM Subtract current entry from the value stored in memory.\n<em> on a keyboard. For use with numpads that provide </em>…\n( Found on the Microsoft Natural Keyboard.\n) Found on the Microsoft Natural Keyboard.\n* on a phone or remote control device.\n-\nAccess on-demand content or programs. (<code>VK_ON_DEMAND</code>)\nFound on Sun’s USB keyboard.\nOpen an existing document or message. (<code>APPCOMMAND_OPEN</code>)\nPage Down, PgDn, or ⇟\nScroll down or display next page of content.\nPage Up, PgUp, or ⇞\nScroll up or display previous page of content.\nPairing key to pair devices. (<code>KEYCODE_PAIRING</code>)\nFound on Sun’s USB keyboard.\nThe Paste key. (<code>APPCOMMAND_PASTE</code>)\nPause Break\nPause the current state or application (as appropriate).\n. on a US keyboard.\nRepresents the location of a physical key.\nMove picture-in-picture window down. (<code>VK_PINP_DOWN</code>)\nMove picture-in-picture window. (<code>VK_PINP_MOVE</code>)\nToggle display of picture-in-picture window. (…\nMove picture-in-picture window up. (<code>VK_PINP_UP</code>)\nPlay or resume the current state or application (as …\nDecrease media playback speed. (<code>VK_PLAY_SPEED_DOWN</code>)\nReset playback to normal speed. (<code>VK_PLAY_SPEED_RESET</code>)\nIncrease media playback speed. (<code>VK_PLAY_SPEED_UP</code>)\nThis key is placed in the function section on some Apple …\nToggle power state. (<code>KEYCODE_POWER</code>) Note: Note: Some …\nThe <code>PowerOff</code> key. Sometime called <code>PowerDown</code>.\nThe particular key is pressed.\nPrint the current document or message. (<code>APPCOMMAND_PRINT</code>)\nPrtScr SysRq or Print Screen\nInitiate print-screen function.\nFound on Sun’s USB keyboard.\nThe properties (Props) key.\n’ on a US keyboard.\nToggle random media or content shuffle mode. (…\nNot a physical key, but this key code is sent when the …\nToggle or cycle between media recording speeds. (…\nRedo the last action. (<code>APPCOMMAND_REDO</code>)\nToggle RF (radio frequency) input bypass mode (pass RF …\nThe key is on the right side of the keyboard.\nThe Roman characters function key.\nThe “shift” key.\nSwitch the input mode on an external STB (set top box). (…\nToggle the power on an external STB (set top box). (…\nThis is the “windows” key on PC and “command” key …\nSave the current document or message. (<code>APPCOMMAND_SAVE</code>)\nToggle scan channels mode. (<code>VK_SCAN_CHANNELS_TOGGLE</code>)\nAdvance display screen mode to next available mode. (…\nScroll Lock\nToggle between scrolling and cursor movement modes.\nFound on Sun’s USB keyboard.\n; on a US keyboard.\nToggle display of device settings screen. (<code>VK_SETTINGS</code>, …\nUsed to enable shift modifier function for interpreting …\nShift or ⇧\nShift or ⇧\n/ on a US keyboard.\nA <code>SmolStr</code> is a string type that has the following …\nGeneral purpose virtual function key, as index 1.\nGeneral purpose virtual function key, as index 2.\nGeneral purpose virtual function key, as index 3.\nGeneral purpose virtual function key, as index 4.\n  (space)\nUsed in text to insert a space between words. Usually …\nShow correction list when a word is incorrectly …\nToggle between dictation mode and command/control mode. (…\nSpellcheck the current document or selection. (…\nToggle split screen mode. (<code>VK_SPLIT_SCREEN_TOGGLE</code>)\nThe key is in its “normal” location on the keyboard.\nThe Standby key. This key turns off the display and places …\nToggle display of subtitles, if available. (<code>VK_SUBTITLE</code>)\nUsed to enable “super” modifier function for …\nThe Windows, ⌘, Command, or other OS symbol key.\nThe Windows, ⌘, Command, or other OS symbol key.\nThe Symbol modifier key (used on some virtual keyboards).\nSwitch to viewing TV. (<code>KEYCODE_TV</code>)\nTV 3D Mode. (<code>KEYCODE_3D_MODE</code>)\nToggle between antenna and cable input. (…\nAudio description. (<code>KEYCODE_TV_AUDIO_DESCRIPTION</code>)\nAudio description mixing volume down. (…\nAudio description mixing volume up. (…\nContents menu. (<code>KEYCODE_TV_CONTENTS_MENU</code>)\nContents menu. (<code>KEYCODE_TV_DATA_SERVICE</code>)\nSwitch the input mode on an external TV. (<code>KEYCODE_TV_INPUT</code>)\nSwitch to component input #1. (<code>KEYCODE_TV_INPUT_COMPONENT_1</code>…\nSwitch to component input #2. (<code>KEYCODE_TV_INPUT_COMPONENT_2</code>…\nSwitch to composite input #1. (<code>KEYCODE_TV_INPUT_COMPOSITE_1</code>…\nSwitch to composite input #2. (<code>KEYCODE_TV_INPUT_COMPOSITE_2</code>…\nSwitch to HDMI input #1. (<code>KEYCODE_TV_INPUT_HDMI_1</code>)\nSwitch to HDMI input #2. (<code>KEYCODE_TV_INPUT_HDMI_2</code>)\nSwitch to HDMI input #3. (<code>KEYCODE_TV_INPUT_HDMI_3</code>)\nSwitch to HDMI input #4. (<code>KEYCODE_TV_INPUT_HDMI_4</code>)\nSwitch to VGA input #1. (<code>KEYCODE_TV_INPUT_VGA_1</code>)\nMedia context menu. (<code>KEYCODE_TV_MEDIA_CONTEXT_MENU</code>)\nToggle network. (<code>KEYCODE_TV_NETWORK</code>)\nNumber entry. (<code>KEYCODE_TV_NUMBER_ENTRY</code>)\nToggle the power on an external TV. (<code>KEYCODE_TV_POWER</code>)\nRadio. (<code>KEYCODE_TV_RADIO_SERVICE</code>)\nSatellite. (<code>KEYCODE_TV_SATELLITE</code>)\nBroadcast Satellite. (<code>KEYCODE_TV_SATELLITE_BS</code>)\nCommunication Satellite. (<code>KEYCODE_TV_SATELLITE_CS</code>)\nToggle between available satellites. (…\nAnalog Terrestrial. (<code>KEYCODE_TV_TERRESTRIAL_ANALOG</code>)\nDigital Terrestrial. (<code>KEYCODE_TV_TERRESTRIAL_DIGITAL</code>)\nTimer programming. (<code>KEYCODE_TV_TIMER_PROGRAMMING</code>)\nTab or ⇥\nThe Horizontal Tabulation <code>Tab</code> key.\nToggle display of teletext, if available (<code>VK_TELETEXT</code>, …\nFound on Sun’s USB keyboard.\nUndo the last action. (<code>APPCOMMAND_UNDO</code>)\nThis variant is used when the key cannot be translated to …\nThis variant is used when the key cannot be translated to …\nThe state of the key is unknown.\nAdvance video mode to next available mode. (…\nThe WakeUp key. (<code>KEYCODE_WAKEUP</code>)\nA “key value string”.\nA Windows “scancode”.\nA Windows “virtual-key code”.\nCause device to identify itself in some manner, e.g., …\nAn XKB “keycode”.\nAn XKB “keysym”.\nThe Zenkaku (Full-Width) Characters key.\nThe Zenkaku/Hankaku (full-width/half-width) toggle key. (…\nThe ZoomIn key. (<code>KEYCODE_ZOOM_IN</code>)\nThe ZoomOut key. (<code>KEYCODE_ZOOM_OUT</code>)\nToggle between full-screen and scaled content, or alter …\nGet a flags value with all known bits set.\nReturns <code>true</code> if the alt key is pressed.\nConvert <code>Key::Character(SmolStr)</code> to <code>Key::Character(&amp;str)</code> so …\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nReturns <code>true</code> if the control key is pressed.\nThe intersection of a source flags value with the …\nGet a flags value with all bits unset.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nConstructs inline variant of <code>SmolStr</code>.\nConstructs a <code>SmolStr</code> from a statically allocated string.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe intersection of a source flags value with the …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nReturns <code>true</code> if the shift key is pressed.\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nReturns <code>true</code> if the super key is pressed.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nConvert an action to its approximate textual equivalent.\nConvert a key to its approximate textual equivalent.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nHandle to a monitor.\nDescribes a fullscreen video mode of a monitor.\nReturns the bit depth of this video mode, as in how many …\nReturns the currently active video mode of this monitor.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the monitor that this video mode is valid for. …\nReturns a human-readable name of the monitor.\nReturns the top-left corner position of the monitor …\nReturns the refresh rate of this video mode in mHz.\nReturns the scale factor of the underlying monitor. To map …\nReturns the resolution of this video mode. This <strong>must not</strong> …\nReturns all fullscreen video modes supported by this …\nWindow startup notification to handle window raising.\nWayland\nX11\nAdditional methods for the <code>KeyEvent</code> which cannot be …\nThis value ignores all modifiers including, but not …\nIdentical to <code>KeyEvent::text</code> but this is affected by Ctrl.\nContinue running external loop.\nAdditional methods on <code>EventLoop</code> for pumping events within …\nExit external loop.\nThe return status for <code>pump_events</code>\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nPump the <code>EventLoop</code> to check for and dispatch pending …\nAdditional methods on <code>EventLoop</code> to return control flow to …\nRun the application with the event loop on the calling …\nAdditional methods for the <code>PhysicalKey</code> type that allow the …\nConstructs a <code>PhysicalKey</code> from a platform-specific physical …\nThe raw value of the platform-specific physical key …\nRead the token from the environment.\nRequest a new activation token.\nRemove the activation environment variables from the …\nSet environment variables responsible for activation token.\nUse this <code>ActivationToken</code> during window creation.\nAdditional methods on <code>ActiveEventLoop</code> that are specific to …\nUse the dark variant.\nAdditional methods on <code>EventLoopBuilder</code> that are specific …\nAdditional methods on <code>EventLoop</code> that are specific to …\nUse the light variant.\nAdditional methods on <code>MonitorHandle</code> that are specific to …\nThe theme variant to use.\nAdditional methods on <code>WindowAttributes</code> that are specific …\nAdditional methods on <code>Window</code> that are specific to Wayland.\nGet the underlying raw xdg_surface handle.\nCreate a <code>XdgSurfaceHandle</code> from a <code>NonNull&lt;c_void&gt;</code>\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTrue if the <code>ActiveEventLoop</code> uses Wayland.\nTrue if the <code>EventLoop</code> uses Wayland.\nReturns the inner identifier of the monitor.\nWhether to allow the event loop to be created off of the …\nBuild window with the given name.\nForce using Wayland.\nAdditional methods on <code>ActiveEventLoop</code> that are specific to …\nThis should be used on the windows that are popped up by …\nA desktop feature. This can include a single window …\nThis is a dialog window.\nThis indicates the window is being dragged. This property …\nA dock or panel feature. Typically a Window Manager would …\nA dropdown menu that usually appears when the user clicks …\nAdditional methods on <code>EventLoopBuilder</code> that are specific …\nAdditional methods on <code>EventLoop</code> that are specific to X11.\nPinnable menu windows. “Torn off” from the main …\nAdditional methods on <code>MonitorHandle</code> that are specific to …\nThis is a normal, top-level window.\nThe window is a notification. This property is typically …\nA popup menu that usually appears when the user right …\nThe window is a splash screen displayed as an application …\nToolbar windows. “Torn off” from the main application.\nA tooltip window. Usually used to show additional …\nA small persistent utility window, such as a palette or …\nAdditional methods on <code>WindowAttributes</code> that are specific …\nAdditional methods on <code>Window</code> that are specific to X11.\nX window type. Maps directly to <code>_NET_WM_WINDOW_TYPE</code>.\nA unique identifier for an X11 visual.\nA unique identifier for an X11 window.\nThe first argument in the provided hook will be the …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nTrue if the <code>ActiveEventLoop</code> uses X11.\nTrue if the <code>EventLoop</code> uses X11.\nReturns the inner identifier of the monitor.\nHook to winit’s xlib error handling callback.\nWhether to allow the event loop to be created off of the …\nBuild window with base size hint.\nEmbed this window into another parent window.\nBuild window with the given <code>general</code> and <code>instance</code> names.\nBuild window with override-redirect flag; defaults to …\nForce using X11.\nCreate this window with a specific X11 visual.\nBuild window with <code>_NET_WM_WINDOW_TYPE</code> hints; defaults to …\nAn opaque token used to activate the <code>Window</code>.\nIndicates an alias of/shortcut to something is to be …\nIndicates that the something can be scrolled in any …\nThe window will always be below normal windows.\nThe window will always be on top of normal windows.\nAn error produced when using <code>Icon::from_rgba</code> with invalid …\nAn error produced when using <code>CustomCursor::from_rgba</code> with …\nProviding <code>None</code> to <code>Borderless</code> will fullscreen on the …\nProduced when the length of the <code>rgba</code> argument isn’t …\nProduced when the length of the <code>rgba</code> argument isn’t …\nIndicates that a cell or set of cells may be selected. …\nIndicates that the item/column can be resized …\nThe cursor is confined to the window area.\nA context menu is available for the object under the …\nIndicates something is to be copied. Often rendered as an …\nPlatform-specific\nA simple crosshair (e.g., short line segments resembling a …\nSee <code>Window::set_cursor()</code> for more details.\nThe behavior of cursor grabbing.\nDescribes the appearance of the (usually mouse) cursor …\nAn error which could be returned when parsing <code>CursorIcon</code>.\nUse a custom image as a cursor (mouse pointer).\nSource for <code>CustomCursor</code>.\nUse the dark variant.\nThe platform-dependent default cursor. Often rendered as …\nProduced when the number of pixels (<code>rgba.len() / 4</code>) isn’…\nProduced when the number of pixels (<code>rgba.len() / 4</code>) isn’…\nThe east border to be moved.\nThe east and west borders to be moved.\nFullscreen modes.\nIndicates that something can be grabbed (dragged to be …\nIndicates that something is being grabbed (dragged to be …\nHelp is available for the object under the cursor. Often …\nProduced when the hotspot is outside the image bounds\nAn icon used for the window titlebar, taskbar, etc.\nGeneric IME purposes for use in <code>Window::set_ime_purpose</code>.\nPlatform-specific\nUse the light variant.\nThe cursor is locked inside the window area to the certain …\nThe maximum width and height for a cursor when using …\nIndicates something is to be moved.\nThe north border to be moved.\nThe north-east corner to be moved.\nThe north-east and south-west corners to be moved.\nIndicates that the dragged item cannot be dropped at the …\nNo grabbing of the cursor is performed.\nThe default.\nNo special hints for the IME (default).\nIndicates that the requested action will not be carried …\nThe south and north borders to be moved.\nThe north-west corner to be moved.\nThe north-west and south-east corners to be moved.\nProduced when underlying OS functionality failed to create …\nThe IME is used for password input.\nThe cursor is a pointer that indicates a link. Often …\nA progress indicator. The program is performing some …\nDefines the orientation that a window resize will be …\nIndicates that the item/row can be resized vertically. …\nThe south border to be moved.\nThe south-east corner to be moved.\nThe south-west corner to be moved.\nThe IME is used to input into a terminal.\nIndicates text that may be selected. Often rendered as an …\nThe theme variant to use.\nProduced when the image dimensions are larger than …\nPlatform-specific\nIndicates vertical-text that may be selected. Often …\nThe west border to be moved.\nIndicates that the program is busy and the user should …\nRepresents a window.\nAttributes used when creating a window.\nIdentifier of a window. Unique for each window.\nA window level groups windows with respect to their …\nIndicates that something can be zoomed in. Often rendered …\nIndicates that something can be zoomed in. Often rendered …\nGet a flags value with all known bits set.\nA list of alternative names for the cursor icon as …\nReturns the list of all the monitors available on the …\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nReturns the monitor on which the window currently resides.\nCreate a new <code>WindowAttributes</code> which allows modifying the …\nThe intersection of a source flags value with the …\nResizes the window with the left mouse button until the …\nMoves the window with the left mouse button until the …\nReturns a dummy id, useful for unit testing.\nGet a flags value with all bits unset.\nGets the enabled window buttons.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nBrings the window to the front and sets input focus. Has …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nCreates a new cursor from an rgba buffer.\nCreates an icon from 32bpp RGBA data.\nParse a string slice into <code>CursorIcon</code>.\nGets the window’s current fullscreen state.\nGets whether the window has keyboard focus.\nReturns an identifier unique to the window.\nReturns the position of the top-left hand corner of the …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nGets the window’s current decorations state.\nWhether all bits in this flags value are unset.\nGets the window’s current maximized state.\nGets the window’s current minimized state.\nGets the window’s current resizable state.\nGets the window’s current visibility state.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nThe name of the cursor icon as defined in w3c standard.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nReturns the position of the top-left hand corner of the …\nReturns the size of the entire window.\nGet the parent window stored on the attributes.\nNotify the windowing system before presenting to the …\nReturns the primary monitor of the system.\nThe intersection of a source flags value with the …\nQueues a <code>WindowEvent::RedrawRequested</code> event to be emitted …\nRequest the new size for the surface.\nRequests user attention to the window, this has no effect …\nReset the dead key state of the keyboard.\nGet the raw-window-handle v0.6 display handle.\nGet the raw-window-handle v0.6 window handle.\nReturns the scale factor that can be used to map logical …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nChange the window blur state.\nPrevents the window contents from being captured by other …\nModifies the cursor icon of the window.\nSet grabbing mode on the cursor preventing it from leaving …\nModifies whether the window catches cursor events.\nChanges the position of the cursor in window coordinates.\nModifies the cursor’s visibility.\nTurn window decorations on or off.\nSets the enabled window buttons.\nSets the window to fullscreen or back.\nSets whether the window should get IME events\nSet the IME cursor editing area, where the <code>position</code> is the …\nSets the IME purpose for the window using <code>ImePurpose</code>.\nSets a maximum dimensions of the window’s surface.\nSets the window to maximized or back.\nSets a minimum dimensions of the window’s surface.\nSets the window to minimized or back\nModifies the position of the window.\nSets whether the window is resizable or not.\nSets resize increments of the surface.\nSet or override the window theme.\nModifies the title of the window.\nChange the window transparency state.\nModifies the window’s visibility.\nSets the window icon.\nChange the window level.\nShow window menu at a specified position .\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nReturns surface resize increments if any were set.\nReturns the size of the window’s render-able surface.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nReturns the current window theme.\nGets the current title of the window.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nGet whether the window will support transparency.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nWhether the window will be initially focused or not.\nSets whether the background of the window should be …\nPrevents the window contents from being captured by other …\nModifies the cursor icon of the window.\nSets whether the window should have a border, a title bar, …\nSets the enabled window buttons.\nSets whether the window should be put into fullscreen upon …\nSets the maximum dimensions the surface can have.\nRequest that the window is maximized upon creation.\nSets the minimum dimensions the surface can have.\nBuild window with parent window.\nSets a desired initial position for the window.\nSets whether the window is resizable or not.\nBuild window with resize increments hint.\nRequests the surface to be of specific dimensions.\nSets a specific theme for the window.\nSets the initial title of the window in the title bar.\nSets whether the background of the window should be …\nSets whether the window will be initially visible or …\nSets the window icon.\nSets the window level.\nThe fallback icon theme to search if no icon theme was …\nSet the fallback icon theme to search when loading system …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nRepresents a type that you can apply arbitrary functions …\nRepresents a type which can have functions applied to it …\nAdditional methods for the [<code>Column</code>] and [<code>Row</code>] widgets.\nApply a function to this value and return the (possibly) …\nMoves all the elements of <code>other</code> into <code>self</code>, leaving <code>other</code> …\nApply a function which takes the parameter by value.\nApply a function which takes the parameter by mutable …\nApply a function which takes the parameter by reference.\nCombines color with background to create appearance of …\nAppends all elements in an iterator to the widget.\nAppends all elements in an iterator to the widget.\nPushes an element into the widget.\nConditionally pushes an element to the widget.\nConditionally pushes an element to the widget.\nA widget for multiple choice selection.\nApply a custom appearance filter\nOr implement any custom theme of your liking.\nNo filtering is applied\nA tabbed widget for switching between views in an …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nContains stylesheet implementations for widgets native to …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChange the appearance of menu bars and their menus.\nStyles for the button widget from iced-rs.\nApply a custom appearance filter\nNo filtering is applied\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe appearance of a menu bar and its menus.\nA <code>Theme</code> that uses a <code>Custom</code> palette.\nThe default style.\nThe style of a menu bar and its menus\nThe supported style of the <code>StyleSheet</code>.\nThe style sheet of a menu bar and its menus.\nProduces the <code>Appearance</code> of a menu bar and its menus.\nThe background color of the menu bar and its menus.\nThe expand value of the menus’ background\nThe border radius of the menu bar.\nThe border <code>Color</code> of the menu bar and its menus.\nThe border width of the menu bar and its menus.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe border radius of the menus.\nYields a task which contains a batch of tasks.\nInitiates a window drag.\nYields a task which will run the future on the runtime …\nMaximizes the window.\nYields a task which will return a message.\nMinimizes the window.\nSets the title of a window.\nSets the window mode to windowed.\nToggles the windows’ maximize state.\naccent element colors\naccent button element colors\nCurrently-defined theme.\ncosmic-comp active hint window outline width\nCurrently-defined theme type.\nThe transparency component. 0.0 (or 0u8) is fully …\nbackground element colors\nThe base color of the widget\nthe color of the border for the widget\nbutton component styling\nThe color.\ncorner radii\nget current container can be used in a component that is …\ndestructive element colors\ndestructive button element colors\nthe color of the widget when it is disabled\nthe color of the border for the widget when it is disabled\nthe color of dividers for this widget\nthe color of the widget when it is focused\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\ncosmic-comp window gaps size (outer, inner)\nThe color of the widget when it is hovered\nicon button element colors\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether the active theme has a dark preference.\nWhether the theme has a dark preference.\nis dark\nenables blurred transparency\nWhether the active theme is high contrast.\nWhether the theme has a high contrast.\nis high contrast\nlink button element colors\nname of the theme\nthe color of text for this widget\nthe color of text in the widget when it is disabled\npalette\nPrefer dark or light theme. If <code>None</code>, the system preference …\nthe color of the widget when it is pressed\nprimary element colors\nsecondary element colors\nthe color of the widget when it is selected\nthe color of the widget when it is selected\nset the theme\nshade color for dialogs\nspacing\nStylesheet implements for <code>crate::Theme</code>\nWatches for changes to the system’s theme preference.\nsuggested element colors\nsuggested button element colors\nLoads the preferred system theme from <code>cosmic-config</code>.\ntext button element colors\nwarning element colors\nwarning button element colors\ncosmic-comp custom window hint color\nA widget for multiple choice selection.\nApply a custom appearance filter\nOr implement any custom theme of your liking.\nNo filtering is applied\nA tabbed widget for switching between views in an …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nContains stylesheet implementations for widgets native to …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChange the appearance of menu bars and their menus.\nStyles for the button widget from iced-rs.\nApply a custom appearance filter\nNo filtering is applied\nThe appearance of a menu bar and its menus.\nA <code>Theme</code> that uses a <code>Custom</code> palette.\nThe default style.\nThe style of a menu bar and its menus\nThe supported style of the <code>StyleSheet</code>.\nThe style sheet of a menu bar and its menus.\nProduces the <code>Appearance</code> of a menu bar and its menus.\nThe background color of the menu bar and its menus.\nThe expand value of the menus’ background\nThe border radius of the menu bar.\nThe border <code>Color</code> of the menu bar and its menus.\nThe border width of the menu bar and its menus.\nThe border radius of the menus.\nA generic button which emits a message when pressed.\nA widget capable of drawing 2D graphics.\nItems are centered around the middle of the axis\nA box that can be checked.\nA widget for searching and selecting a single value from a …\nA widget that aligns its contents inside of its boundaries.\nA context menu is a menu in a graphical user interface …\nA widget for selecting a single value from a list of …\nItems are packed toward the end of the axis\nItems are packed towards the flex-relative end of the axis.\nResponsively generates rows and columns of widgets based …\nItems are packed towards the flex-relative start of the …\nResponsively generates rows and columns of widgets based …\nAn image which may be an SVG or PNG.\nThe identifier of a generic widget.\nAn element decorating some content.\nA frame that displays an image while keeping aspect ratio.\nSets the distribution of space between and around content …\nAn element decorating some content.\nA widget that only rebuilds its contents when necessary.\nEmit messages on mouse events.\nA piece of logic that can traverse the widget tree of an …\nA collection of panes distributed using either vertical or …\nA bar that displays progress.\nA circular button representing a choice.\nA widget that is aware of its dimensions.\nAn horizontal bar and a handle that selects a single value …\nAn amount of empty space.\nThe gap between the first and last items is exactly HALF …\nThe first and last items are aligned flush with the edges …\nThe gap between the first and last items is exactly THE …\nItems are packed toward the start of the axis\nItems are stretched to fill the container\nA vector graphics image.\nA bunch of text.\nA multi-line text input.\nA field that can be filled with text.\nRepresent the data used to display a <code>Toast</code>\nAn vertical bar and a handle that selects a single value …\nA component that displays information and allows …\nget the a11y nodes for the widget and its children\nget the a11y nodes for the widget\nget the a11y nodes for the widget\nget the a11y nodes for the widget\nget the a11y nodes for the widget\nget the a11y nodes for the widget\nget the a11y nodes for the widget\nget the a11y nodes for the widget\nget the a11y nodes for the widget\nA container which constraints itself to a specific aspect …\nBuild the widget\nButton widgets for COSMIC applications.\nA widget that displays an interactive calendar.\nA widget that displays an interactive calendar.\nCanvases can be leveraged to draw interactive 2D graphics.\nCreates a new <code>Canvas</code>.\nPushes an element to the center region.\nCheckboxes can be used to let users make binary choices.\nCreates a new <code>Checkbox</code>.\nReturns the state <code>Tree</code> of the children of the <code>Widget</code>.\nWidgets for selecting colors with a color picker.\nA container which aligns its children in a column.\nA container which aligns its children in a column.\nCombo boxes display a dropdown list of searchable and …\nCreates a new <code>ComboBox</code>.\nContainers let you align a widget inside their boundaries.\nCreates a new <code>Container</code> with the provided content.\nOperates on a widget that contains other widgets.\nAn overlayed widget that attaches a toggleable context …\nAn overlayed widget that attaches a toggleable context …\nA context menu is a menu in a graphical user interface …\nA context menu is a menu in a graphical user interface …\nOperates on a custom widget.\nControls the density of the headerbar.\nReconciliates the <code>Widget</code> with the provided <code>Tree</code>.\nAn element to distinguish a boundary between two elements.\nAdds the drag destination rectangles of the widget. Runs …\nDraws the <code>Widget</code> using the associated <code>Renderer</code>.\nDisplays a list of options in a popover menu on select.\nDisplays a list of options in a popover menu on select.\nA text label whiich can transform into a text input on …\nPushes an element to the end region.\nFinishes the <code>Operation</code> and returns its <code>Outcome</code>.\nResponsively generates rows of widgets based on the …\nResponsively generates rows of widgets based on the …\nOperates on a widget that can be focused.\nFocused state of the window\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nArrange widgets with a grid layout.\nArrange widgets with a grid layout.\nCreates a new <code>Space</code> widget that fills the available …\nLazily-generated SVG icon widget for Iced.\nCreate an <code>Icon</code> from a pre-existing <code>Handle</code>\nReturns the id of the widget\nImages display raster graphics in different formats (PNG, …\nCreates a new <code>Image</code>.\nCreates a new inline <code>TextInput</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the <code>layout::Node</code> of the <code>Widget</code>.\nCreates a new <code>Lazy</code> widget with the given data <code>Dependency</code> …\nA <code>MenuBar</code> widget for displaying [<code>MenuTree</code>]s\nA container intercepting mouse events.\nReturns the current <code>mouse::Interaction</code> of the <code>Widget</code>.\nNavigation side panel for switching between views.\nNavigation side panel for switching between views.\nNavigation side panel for switching between views. Can …\nA button for toggling the navigation side panel.\nA message emitted when the close button is pressed.\nA message emitted when the header is double clicked, …\nA message emitted when dragged.\nProcesses a runtime <code>Event</code>.\nA message emitted when the maximize button is pressed.\nA message emitted when the minimize button is pressed.\nA message emitted when the header is right clicked.\nApplies an <code>Operation</code> to the <code>Widget</code>.\nReturns the overlay of the <code>Widget</code>, if there is any.\nPane grids let your users split regions of your …\nCreates a <code>PaneGrid</code> with the given <code>pane_grid::State</code> and …\nA widget showing a popup in an overlay positioned relative …\nProgress bars visualize the progression of an extended …\nCreates a new <code>ProgressBar</code>.\nCreate choices using radio buttons.\nCreates a new <code>Responsive</code> widget with a closure that …\nA container which aligns its children in a row.\nA container which aligns its children in a row.\nOperates on a widget that can be scrolled.\nCreates a new search <code>TextInput</code>.\nCreates a new secure <code>TextInput</code>.\nA widget providing a conjoined set of linear items that …\nA selection of multiple choices appearing as a conjoined …\nSets the id of the widget This may be called while diffing …\nReturns the <code>Size</code> of the <code>Widget</code> in lengths.\nReturns a <code>Size</code> hint for laying out the <code>Widget</code>.\nSliders let users set a value by moving an indicator.\nCreates a new <code>Slider</code>.\nA control for incremental adjustments of a value.\nHorizontal spin button widget.\nPushes an element to the start region.\nReturns the <code>State</code> of the <code>Widget</code>.\nSvg widgets display vector graphics in your application.\nCreates a new <code>Svg</code> widget from the given <code>Handle</code>.\nA collection of tabs for developing a tabbed interface.\nReturns the <code>Tag</code> of the <code>Widget</code>.\nCreates a new <code>Text</code> widget with the provided content.\nText editors display a multi-line text input for text …\nCreates a new <code>TextEditor</code>.\nA text input widget from iced widgets plus some added …\nCreates a new <code>TextInput</code>.\nOperates on a widget that has text input.\nDefines the title of the window\nA widget that displays toasts.\nCreate a new Toaster widget.\nSliders let users set a value by moving an indicator.\nCreates a new <code>VerticalSlider</code>.\nCreates a new <code>Space</code> widget that fills the available …\nVertical spin button widget.\nConverts the headerbar builder into an Iced element.\nA container which constraints itself to a specific aspect …\nThe theme catalog of a <code>Container</code>.\nThe item class of the <code>Catalog</code>.\nThe appearance of a container.\nget the a11y nodes for the widget\nSets the content alignment for the horizontal axis of the …\nSets the content alignment for the vertical axis of the …\nThe <code>Background</code> of the container.\nThe <code>Border</code> of the container.\nCenters the contents in the horizontal and vertical axis …\nCenters the contents in the horizontal axis of the …\nCenters the contents in the vertical axis of the <code>Container</code>.\nSets the style of the <code>Container</code>.\nThe default class produced by the <code>Catalog</code>.\nReturns the argument unchanged.\nSets the height of the <code>Container</code>.\nThe icon <code>Color</code> of the container.\nCalls <code>U::from(self)</code>.\nSets the maximum height of the <code>Container</code> in pixels.\nSets the maximum width of the <code>Container</code>.\nSets the <code>Padding</code> of the <code>Container</code>.\nThe <code>Shadow</code> of the container.\nThe <code>Style</code> of a class with the given status.\nThe text <code>Color</code> of the container.\nSets the width of the [<code>self.</code>].\nA builder for constructing a custom <code>Button</code>.\nA generic button which emits a message when pressed.\nA set of rules that dictate the style of a button.\nThe supported style of the [<code>StyleSheet</code>].\nThe appearance of a button.\nget the a11y nodes for the widget\nProduces the active [<code>Appearance</code>] of a button.\nThe <code>Background</code> of the button.\nThe border <code>Color</code> of the button.\nThe border radius of the button.\nThe border width of the button.\nSets the style variant of this <code>Button</code>.\nThe preferred style of the button.\nA button with a custom element for its content.\nAn image button which may contain any widget as its …\nSets the description of the <code>Button</code>.\nSets the description of the <code>Button</code>.\nA text button with the destructive style\nProduces the disabled [<code>Appearance</code>] of a button.\n[<code>Appearance</code>] when the button is the target of a DND …\n[<code>Appearance</code>] when the button is the target of a DND …\nApplies the <strong>Extra Large</strong> button size preset.\nApplies the <strong>Extra Large</strong> button size preset.\nApplies the <strong>Extra Small</strong> button size preset.\nApplies the <strong>Extra Small</strong> button size preset.\nProduces a <code>Task</code> that focuses the <code>Button</code> with the given <code>Id</code>.\nSets the preferred font size.\nSets the preferred font weight.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nSets the height of the <code>Button</code>.\nSets the preferred height of the button.\nProduces the hovered [<code>Appearance</code>] of a button.\nA button constructed from an icon handle, using icon …\nThe icon <code>Color</code> of the button.\nSets the preferred size of icons.\nSets the <code>Id</code> of the <code>Button</code>.\nSets the <code>Id</code> of the button.\nA button constructed from an image handle, using image …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSets the label of the <code>Button</code>.\nThe label to display within the button.\nApplies the <strong>Large</strong> button size preset.\nApplies the <strong>Large</strong> button size preset.\nComputes the layout of a <code>Button</code>.\nSets the prefered font line height.\nHyperlink button widget\nA hyperlink button.\nApplies the <strong>Medium</strong> button size preset.\nApplies the <strong>Medium</strong> button size preset.\nReturns the <code>mouse::Interaction</code> of a <code>Button</code>.\nSets the name of the <code>Button</code>.\nSets the message that will be produced when the <code>Button</code> is …\nSets the message that will be produced when the button is …\nSets the message that will be produced when the <code>Button</code> is …\nSets the message that will be produced when the <code>Button</code> is …\nSet the value of [<code>on_press</code>] as either <code>Some</code> or <code>None</code>.\nThe <code>Color</code> of the outline.\nAn outline placed around the border.\nThe <code>Background</code> overlay of the button.\nSets the <code>Padding</code> of the <code>Button</code>.\nSets the preferred padding of the button.\nProduces the pressed [<code>Appearance</code>] of a button.\nSets the widget to a selected state.\nBackground color of the selection indicator\nThe amount of offset to apply to the shadow of the button.\nSets the preferred spacing between elements in the button.\nA text button with the standard style\nA text button with the suggested style\nA text button with the text style\nThe text <code>Color</code> of the button.\nSets the width of the <code>Button</code>.\nSets the preferred width of the button.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nA hyperlink button.\nA widget that displays an interactive calendar.\nReturns the argument unchanged.\nGets the first date that will be visible on the calender\nCalls <code>U::from(self)</code>.\nA bevelled corner.\nThe stroke for each sub-path does not extend beyond its …\nA simple cache that stores generated <code>Geometry</code> to avoid …\nA widget capable of drawing 2D graphics.\nA <code>Canvas</code> event.\nThe style used to fill geometry.\nThe frame supported by a renderer.\nThe geometry supported by a renderer.\nA fill which linearly interpolates colors along a …\nA <code>Gradient</code> color.\nA cache group.\nA raster image that can be drawn.\nA keyboard event.\nThe shape used at the end of open subpaths when they are …\nThe dash pattern used when stroking the line.\nThe shape used at the corners of paths or basic shapes …\nA linear gradient interpolates colors along a direction …\nA sharp corner.\nA mouse event.\nAn immutable set of points that may or may not be …\nThe state and logic of a <code>Canvas</code>.\nAt the end of each sub-path, the shape representing the …\nA round corner.\nA solid <code>Color</code>.\nAt the end of each sub-path, the shape representing the …\nThe internal state mutated by the <code>Program</code>.\nThe style of a stroke.\nThe coloring style of some drawing.\nA bunch of text that can be drawn to a canvas\nA touch event.\nThe border radii of the image\nThe color of the text\nThe contents of the text\nDraws the state of the <code>Program</code>, producing a bunch of …\nHandle events of a canvas.\nFill <code>Geometry</code> with a certain style.\nThe filter method of the image.\nThe font of the text\nA gradient that can be used as a fill for some geometry.\nThe handle of the image.\nThe horizontal alignment of the text\nThe shape to be used at the end of open subpaths when they …\nThe dash pattern used when stroking the line.\nThe line height of the text.\nThe shape to be used at the corners of paths or basic …\nReturns the current mouse interaction of the <code>Program</code>.\nThe offset of <code>LineDash::segments</code> to start the pattern.\nThe opacity of the image.\nBuild different kinds of 2D shapes.\nThe position of the text relative to the alignment …\nThe rotation to be applied to the image; on its center.\nThe fill rule defines how to determine what is inside and …\nThe alternating lengths of lines and gaps which describe …\nThe shaping strategy of the text.\nThe size of the text\nIf set to <code>true</code>, the image will be snapped to the pixel …\nCreate lines from a <code>Path</code> and assigns them various …\nThe color or gradient of the fill.\nThe color or gradient of the stroke.\nUpdates the <code>State</code> of the <code>Program</code>.\nThe vertical alignment of the text\nThe distance between the two edges of the stroke.\nThe <code>Event</code> was handled and processed by a widget.\nA <code>Canvas</code> event.\nThe <code>Event</code> was <strong>NOT</strong> handled by any widget.\nA keyboard event.\nA mouse event.\nThe status of an <code>Event</code> after being processed.\nA touch event.\nThe style used to fill geometry.\nA <code>Gradient</code> color.\nThe fill rule defines how to determine what is inside and …\nA solid <code>Color</code>.\nThe coloring style of some drawing.\nThe fill rule defines how to determine what is inside and …\nThe color or gradient of the fill.\nA fill which linearly interpolates colors along a …\nA linear gradient.\nA linear gradient interpolates colors along a direction …\nPacked <code>Gradient</code> data for use in shader code.\nThe absolute ending position of the gradient.\nCreates a new <code>Packed</code> gradient for use in shader code.\nThe absolute starting position of the gradient.\n<code>ColorStop</code>s along the linear gradient direction.\nA segment of a differentiable curve.\nA <code>Path</code> builder.\nAn immutable set of points that may or may not be …\nBuild and draw curves.\nThe center of the arc.\nThe end of the segment’s angle, clockwise rotation from …\nThe radius of the arc.\nThe start of the segment’s angle, clockwise rotation …\nA segment of a differentiable curve.\nAn elliptical <code>Arc</code>.\nThe center of the arc.\nThe center of the arc.\nThe end of the segment’s angle, clockwise rotation from …\nThe end of the segment’s angle, clockwise rotation from …\nThe radii of the arc’s ellipse. The horizontal and …\nThe radius of the arc.\nThe clockwise rotation of the arc’s ellipse.\nThe start of the segment’s angle, clockwise rotation …\nThe start of the segment’s angle, clockwise rotation …\nFlag parameters for arcs as described by the SVG …\nAn alias for <code>usize</code>.\nA view over a contiguous storage of custom attributes.\nInterface for objects storing custom attributes associated …\nAn alias for a slice of <code>f32</code> values.\nA beveled corner is to be used to join path segments. The …\nThe default builder for <code>Path</code>.\nA builder for <code>Path</code> with custom attributes.\nThe stroke for each sub-path does not extend beyond its …\nID of a control point in a path.\nID of an endpoint point in a path.\nRepresents an event or edge of path.\nRefers to an event in a path.\nThe fill rule defines how to determine what is inside and …\nA path event representing endpoints and control points as …\nAn iterator of endpoint and control point ids for <code>Path</code> and …\nA view over a sequence of endpoint IDs forming a polygon.\nAn iterator for <code>Path</code> and <code>PathSlice</code>.\nAn iterator for <code>Path</code> and <code>PathSlice</code>.\nLine cap as defined by the SVG specification.\nLine join as defined by the SVG specification.\nA sharp corner is to be used to join path segments.\nSame as a miter join, but if the miter limit is exceeded, …\nAn empty attribute slice.\nA simple path data structure.\nAn object that stores multiple paths contiguously.\nA view on a <code>PathBuffer</code>.\nThe commands of a path encoded in a single array using IDs …\nA view over <code>PathCommands</code>.\nA path event representing endpoints and control points as …\nA view on a <code>Path</code>.\nA view over a sequence of endpoints forming a polygon.\nInterface for types types (typically endpoints and control …\nInterface for objects storing endpoints and control points …\nAn iterator of over a <code>Path</code> traversing the path in reverse.\nAt each end of each sub-path, the shape representing the …\nA round corner is to be used to join path segments.\nThe positive or negative side of a vector or segment.\nAt the end of each sub-path, the shape representing the …\nThe two possible orientations for the edges of a shape to …\nPath building utilities.\nA generic representation for paths that allow more control …\nReturns the endpoint’s custom attributes as a slice of …\nTools to iterate over paths.\nOf the four candidate arc sweeps, two will represent an …\nf32 version of the lyon_geom types used everywhere. Most …\nReturns the number of float attributes per endpoint.\nThe default path data structure.\nA container to store multiple paths contiguously.\nSpecific path types for polygons.\nIf <code>sweep</code> is <code>true</code>, then the arc will be drawn in a “…\n<code>lyon_path</code> traits reexported here for convenience.\nThe radius of each corner of a rounded rectangle.\nBuilds a path.\nA Builder that approximates curves with successions of …\nA convenience wrapper for <code>PathBuilder</code> without custom …\nThe base path building interface.\nThe type of object that is created by this builder.\nA path building interface that tries to stay close to SVG…\nBuilds a path with a transformation applied.\nImplements an SVG-like building interface on top of a …\nAdds a sub-path containing a circle.\nAdds a sub-path containing an ellipse.\nAdds a sub-path containing a single line segment.\nAdds a sub-path containing a single point.\nAdds a sub-path from a polygon.\nAdds a sub-path from a polygon.\nAdds a sub-path containing a rectangle.\nAdds a sub-path containing a rectangle.\nAdds an elliptical arc.\nStarts a new sub-path at a given position.\nBuilds a path object, consuming the builder.\nEnds the current sub-path by connecting it back to its …\nCloses the current sub path.\nAdds a cubic bézier curve to the current sub-path.\nAdds a cubic bézier segment to the current sub-path.\nEnds the current sub path.\nReturns a builder that approximates all curves with …\nAdds an horizontal line segment.\nAdds a line segment to the current sub-path.\nAdds a line segment to the current sub-path.\nStart a new sub-path at the given position.\nApplies the provided path event.\nAdds a quadratic bézier curve to the current sub-path.\nAdds a quadratic bézier segment to the current sub-path.\nEquivalent to <code>arc_to</code> in relative coordinates.\nEquivalent to <code>cubic_bezier_to</code> in relative coordinates.\nAdds an horizontal line segment in relative coordinates.\nEquivalent to <code>line_to</code> in relative coordinates.\nEquivalent to <code>move_to</code> in relative coordinates.\nEquivalent to <code>quadratic_bezier_to</code> in relative coordinates.\nAdds a vertical line segment in relative coordinates.\nHints at the builder that a certain number of endpoints …\nHints at the builder that a certain number of endpoints …\nEquivalent to <code>cubic_bezier_to</code> with implicit first control …\nEquivalent to <code>quadratic_bezier_to</code> with implicit control …\nEquivalent to <code>smooth_cubic_bezier_to</code> in relative …\nEquivalent to <code>smooth_quadratic_bezier_to</code> in relative …\nReturns a builder that applies the given transformation to …\nAdds a vertical line segment.\nReturns a builder that support SVG commands.\nA view on a <code>PathCommands</code> buffer and two slices for …\nAn iterator of <code>Event&lt;&amp;Endpoint, &amp;ControlPoint&gt;</code>.\nAn iterator of <code>Event&lt;&amp;Endpoint, &amp;ControlPoint&gt;</code>.\nThe commands of a path encoded in a single array using IDs …\nBuilds path commands.\nA view over <code>PathCommands</code>.\nAn iterator of <code>PathEvent</code>.\nAn angle in radians\nAn elliptic arc curve segment.\nFlag parameters for arcs as described by the SVG …\nA 2d curve segment defined by four points: the beginning …\nAn infinite line defined by a point and a vector.\nA line defined by the equation …\nA linear segment.\nA 2d curve segment defined by three points: the beginning …\nAlias for <code>euclid::default::Rotation2D</code>\nCommon APIs to segment types.\nAn elliptic arc curve segment using the SVG’s end-point …\nAlias for <code>euclid::default::Transform2D</code>\nAlias for <code>euclid::default::Translation2D</code>\nA 2D triangle defined by three points <code>a</code>, <code>b</code> and <code>c</code>.\nReturn the curve after the split point.\nAngle in radians\nCompute the length of the segment using a flattened …\nElliptic arc related maths and tools.\nReturn the curve before the split point.\nSample the derivative at t (expecting t between 0 and 1).\nSample x derivative at t (expecting t between 0 and 1).\nSample y derivative at t (expecting t between 0 and 1).\nEpsilon constants are usually not a good way to deal with …\nSwap the direction of the segment.\nApproximates the curve with sequence of line segments.\nStart of the curve.\nThe extent of the element in the <code>U</code> units along the <code>y</code> axis …\nOf the four candidate arc sweeps, two will represent an …\nShorthand for <code>Point::new(x, y)</code>.\nSample the curve at t (expecting t between 0 and 1).\nShorthand for <code>Size::new(x, y)</code>.\nSplit this curve into two sub-curves.\nReturn the curve inside a given range of t.\nIf <code>sweep</code> is <code>true</code>, then the arc will be drawn in a “…\nEnd of the curve.\nShorthand for <code>Vector::new(x, y)</code>.\nThe extent of the element in the <code>U</code> units along the <code>x</code> axis …\nSample x at t (expecting t between 0 and 1).\nThe <code>x</code> (traditionally, horizontal) coordinate.\nSample y at t (expecting t between 0 and 1).\nThe <code>y</code> (traditionally, vertical) coordinate.\nAn elliptic arc curve segment.\nFlag parameters for arcs as described by the SVG …\nFlattening iterator for arcs.\nAn elliptic arc curve segment using the SVG’s end-point …\nOf the four candidate arc sweeps, two will represent an …\nIf <code>sweep</code> is <code>true</code>, then the arc will be drawn in a “…\nA string with a fixed capacity.\nA vector with a fixed capacity.\nError value indicating insufficient capacity\nA draining iterator for <code>ArrayVec</code>.\nBy-value iterator for <code>ArrayVec</code>.\nA 2d curve segment defined by four points: the beginning …\nAn angle in radians\nA 2d vector of booleans, useful for component-wise logic …\nA 3d vector of booleans, useful for component-wise logic …\nA 2d axis aligned rectangle represented by its minimum and …\nAn axis aligned 3D box represented by its minimum and …\nHomogeneous vector in 3D space.\nA one-dimensional distance, with value represented by <code>T</code> …\nA 2d Point tagged with a unit.\nA 3d Point tagged with a unit.\nA 2d Rectangle optionally tagged with a unit.\nA rigid transformation. All lengths are preserved under …\nA transform that can represent rotations in 2d, …\nA transform that can represent rotations in 3d, …\nA scaling factor between two different units of …\nA group of 2D side offsets, which correspond to …\nA 2d size tagged with a unit.\nA 3d size tagged with a unit.\nA 2d transform represented by a column-major 3 by 3 …\nA 3d transform stored as a column-major 4 by 4 matrix.\nA 2d transformation from a space to another that can only …\nA 3d transformation from a space to another that can only …\nTrait for basic trigonometry functions, so they can be …\nThe default unit.\nA 2d Vector tagged with a unit.\nA 3d Vector tagged with a unit.\nAngle in radians\nUtilities for testing approximate ordering - especially …\nShorthand for …\nShorthand for <code>BoolVector2D { x, y }</code>.\nShorthand for <code>BoolVector3D { x, y, z }</code>.\nA set of aliases for all types, tagged with the default …\nThe extent of the element in the <code>U</code> units along the <code>z</code> axis.\nThe extent of the element in the <code>U</code> units along the <code>y</code> axis …\nThe extent of the element in the <code>U</code> units along the <code>y</code> axis.\nComponent multiplied by the imaginary number <code>i</code>.\nComponent multiplied by the imaginary number <code>j</code>.\nComponent multiplied by the imaginary number <code>k</code>.\nA one-dimensional length, tagged with its units.\nShorthand for <code>Point2D::new(x, y)</code>.\nShorthand for <code>Point3D::new(x, y)</code>.\nThe real part.\nShorthand for …\nShorthand for <code>Size2D::new(w, h)</code>.\nShorthand for <code>Size3D::new(w, h, d)</code>.\nConvenience constructor.\nConvenience constructor.\nThe extent of the element in the <code>U</code> units along the <code>x</code> axis …\nThe extent of the element in the <code>U</code> units along the <code>x</code> axis.\nThe <code>x</code> (traditionally, horizontal) coordinate.\nThe <code>x</code> (traditionally, horizontal) coordinate.\nThe <code>y</code> (traditionally, vertical) coordinate.\nThe <code>y</code> (traditionally, vertical) coordinate.\nThe <code>z</code> (traditionally, depth) coordinate.\nTrait for testing approximate equality\nDefault epsilon value\nReturns <code>true</code> if this object is approximately equal to the …\nReturns <code>true</code> if this object is approximately equal to the …\nAngle in radians\nThe extent of the element in the <code>U</code> units along the <code>z</code> axis.\nThe extent of the element in the <code>U</code> units along the <code>y</code> axis …\nThe extent of the element in the <code>U</code> units along the <code>y</code> axis.\nComponent multiplied by the imaginary number <code>i</code>.\nComponent multiplied by the imaginary number <code>j</code>.\nComponent multiplied by the imaginary number <code>k</code>.\nThe real part.\nThe extent of the element in the <code>U</code> units along the <code>x</code> axis …\nThe extent of the element in the <code>U</code> units along the <code>x</code> axis.\nThe <code>x</code> (traditionally, horizontal) coordinate.\nThe <code>x</code> (traditionally, horizontal) coordinate.\nThe <code>y</code> (traditionally, vertical) coordinate.\nThe <code>y</code> (traditionally, vertical) coordinate.\nThe <code>z</code> (traditionally, depth) coordinate.\nDefines the smallest integer equal or greater than the …\nDefines the biggest integer equal or lower than the …\nDefines the nearest integer value to the original value.\nRounds to the smallest integer equal or greater than the …\nRounds to the biggest integer equal or lower than the …\nRounds to the nearest integer value.\nA flattening iterator for quadratic bézier segments.\nA flattening iterator for quadratic bézier segments.\nA 2d curve segment defined by three points: the beginning …\nCommon APIs to segment types.\nReturn the curve after the split point.\nCompute the length of the segment using a flattened …\nReturn the curve before the split point.\nSample the derivative at t (expecting t between 0 and 1).\nSample x derivative at t (expecting t between 0 and 1).\nSample y derivative at t (expecting t between 0 and 1).\nSwap the direction of the segment.\nApproximates the curve with sequence of line segments.\nStart of the curve.\nSample the curve at t (expecting t between 0 and 1).\nSplit this curve into two sub-curves.\nReturn the curve inside a given range of t.\nEnd of the curve.\nSample x at t (expecting t between 0 and 1).\nSample y at t (expecting t between 0 and 1).\nAngle between vectors v1 and v2 (oriented clockwise …\nAn iterator that consumes <code>Event</code> iterator and yields …\nAn iterator that consumes an iterator of <code>Point</code>s and …\nAn extension trait for <code>PathEvent</code> iterators.\nApplies a 2D transform to a path iterator and yields the …\nReturns an iterator that turns curves into line segments.\nReturns an iterator applying a 2D transform to all of its …\nAn angle in radians (f32).\nAlias for <code>euclid::default::Box2D&lt;f32&gt;</code>\nAlias for <code>euclid::default::Point2D&lt;f32&gt;</code>.\nAlias for <code>euclid::default::Rotation2D&lt;f32&gt;</code>\nAlias for <code>euclid::default::Scale&lt;f32&gt;</code>\nAlias for <code>euclid::default::Size2D&lt;f32&gt;</code>.\nAlias for <code>euclid::default::Transform2D&lt;f32&gt;</code>\nAlias for <code>euclid::default::Translation2D&lt;f32&gt;</code>\nAlias for <code>euclid::default::Point2D&lt;f32&gt;</code>.\nAngle in radians\nThe extent of the element in the <code>U</code> units along the <code>y</code> axis …\nShorthand for <code>Point::new(x, y)</code>.\nShorthand for <code>Size::new(x, y)</code>.\nShorthand for <code>Vector::new(x, y)</code>.\nThe extent of the element in the <code>U</code> units along the <code>x</code> axis …\nThe <code>x</code> (traditionally, horizontal) coordinate.\nThe <code>y</code> (traditionally, vertical) coordinate.\nThe default builder for <code>Path</code>.\nA builder for <code>Path</code> with custom attributes.\nAn iterator of endpoint and control point ids for <code>Path</code> and …\nAn iterator for <code>Path</code> and <code>PathSlice</code>.\nAn iterator for <code>Path</code> and <code>PathSlice</code>.\nA simple path data structure.\nA view on a <code>Path</code>.\nAn iterator of over a <code>Path</code> traversing the path in reverse.\nA Builder that appends a path to an existing PathBuffer.\nA Builder that appends a path to an existing PathBuffer, …\nIterator over the paths in a <code>PathBufferSlice</code>.\nAn object that stores multiple paths contiguously.\nA view on a <code>PathBuffer</code>.\nA view over a sequence of endpoint IDs forming a polygon.\nAn iterator of <code>Event&lt;EndpointId, ()&gt;</code>.\nAn iterator of <code>PathEvent</code>.\nA view over a sequence of endpoints forming a polygon.\nAn iterator of <code>IdEvent</code> for <code>Polygon</code>.\nAn iterator of <code>Event&lt;&amp;Endpoint, ()&gt;</code>.\nBuilds a path.\nThe base path building interface.\nAn extension trait for <code>PathEvent</code> iterators.\nThe type of object that is created by this builder.\nA path building interface that tries to stay close to SVG…\nAdds a sub-path containing a circle.\nAdds a sub-path containing an ellipse.\nAdds a sub-path containing a single line segment.\nAdds a sub-path containing a single point.\nAdds a sub-path from a polygon.\nAdds a sub-path from a polygon.\nAdds a sub-path containing a rectangle.\nAdds a sub-path containing a rectangle.\nAdds an elliptical arc.\nStarts a new sub-path at a given position.\nBuilds a path object, consuming the builder.\nEnds the current sub-path by connecting it back to its …\nCloses the current sub path.\nAdds a cubic bézier curve to the current sub-path.\nAdds a cubic bézier segment to the current sub-path.\nEnds the current sub path.\nReturns a builder that approximates all curves with …\nReturns an iterator that turns curves into line segments.\nAdds an horizontal line segment.\nAdds a line segment to the current sub-path.\nAdds a line segment to the current sub-path.\nStart a new sub-path at the given position.\nApplies the provided path event.\nAdds a quadratic bézier curve to the current sub-path.\nAdds a quadratic bézier segment to the current sub-path.\nEquivalent to <code>arc_to</code> in relative coordinates.\nEquivalent to <code>cubic_bezier_to</code> in relative coordinates.\nAdds an horizontal line segment in relative coordinates.\nEquivalent to <code>line_to</code> in relative coordinates.\nEquivalent to <code>move_to</code> in relative coordinates.\nEquivalent to <code>quadratic_bezier_to</code> in relative coordinates.\nAdds a vertical line segment in relative coordinates.\nHints at the builder that a certain number of endpoints …\nHints at the builder that a certain number of endpoints …\nEquivalent to <code>cubic_bezier_to</code> with implicit first control …\nEquivalent to <code>quadratic_bezier_to</code> with implicit control …\nEquivalent to <code>smooth_cubic_bezier_to</code> in relative …\nEquivalent to <code>smooth_quadratic_bezier_to</code> in relative …\nReturns a builder that applies the given transformation to …\nReturns an iterator applying a 2D transform to all of its …\nAdds a vertical line segment.\nReturns a builder that support SVG commands.\nA bevelled corner.\nThe stroke for each sub-path does not extend beyond its …\nA <code>Gradient</code> color.\nThe shape used at the end of open subpaths when they are …\nThe dash pattern used when stroking the line.\nThe shape used at the corners of paths or basic shapes …\nA sharp corner.\nAt the end of each sub-path, the shape representing the …\nA round corner.\nA solid <code>Color</code>.\nAt the end of each sub-path, the shape representing the …\nThe style of a stroke.\nThe coloring style of some drawing.\nThe shape to be used at the end of open subpaths when they …\nThe dash pattern used when stroking the line.\nThe shape to be used at the corners of paths or basic …\nThe offset of <code>LineDash::segments</code> to start the pattern.\nThe alternating lengths of lines and gaps which describe …\nThe color or gradient of the stroke.\nThe distance between the two edges of the stroke.\nDefines the [<code>Appearance</code>] of a cards.\nAppearance of the cards.\nThe default [<code>Appearance</code>] of the cards.\nThe <code>Checkbox</code> can be interacted with.\nThe theme catalog of a <code>Checkbox</code>.\nA box that can be checked.\nThe item class of the <code>Catalog</code>.\nThe <code>Checkbox</code> cannot be interacted with.\nThe <code>Checkbox</code> can be interacted with and it is being …\nThe icon in a <code>Checkbox</code>.\nThe possible status of a <code>Checkbox</code>.\nThe style of a checkbox.\nA styling function for a <code>Checkbox</code>.\nThe <code>Background</code> of the checkbox.\nThe <code>Border</code> of the checkbox.\nThe unicode code point that will be used as the icon.\nA danger checkbox; denoting a negative toggle.\nThe default class produced by the <code>Catalog</code>.\nFont that will be used to display the <code>code_point</code>,\nThe icon <code>Color</code> of the checkbox.\nThe line height of the icon.\nA primary checkbox; denoting a main toggle.\nA secondary checkbox; denoting a complementary toggle.\nThe shaping strategy of the icon.\nFont size of the content.\nThe <code>Style</code> of a class with the given status.\nA success checkbox; denoting a positive toggle.\nThe text <code>Color</code> of the checkbox.\nThe wrap mode of the icon.\nIndicates if the <code>Checkbox</code> is currently checked.\nIndicates if the <code>Checkbox</code> is currently checked.\nIndicates if the <code>Checkbox</code> is currently checked.\nA button for selecting a color from a color picker.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet the applied color of the picker\nGet whether or not the picker should be visible\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet a color picker button that displays the applied color\nA container which aligns its children in a column.\nA pre-allocated [<code>column</code>].\nA [<code>column</code>] that will be assigned a <code>Vec</code> of children.\nThe theme catalog of a <code>ComboBox</code>.\nA widget for searching and selecting a single value from a …\nThe local state of a <code>ComboBox</code>.\nThe default class for the text input of the <code>ComboBox</code>.\nThe default class for the menu of the <code>ComboBox</code>.\nThe theme catalog of a <code>Container</code>.\nThe item class of the <code>Catalog</code>.\nA widget that aligns its contents inside of its boundaries.\nThe appearance of a container.\nA styling function for a <code>Container</code>.\nA <code>Container</code> with the given <code>Background</code>.\nThe <code>Background</code> of the container.\nThe <code>Border</code> of the container.\nA bordered <code>Container</code> with a background.\nA <code>Container</code> with a dark background and white text.\nThe default class produced by the <code>Catalog</code>.\nDraws the background of a <code>Container</code> given its <code>Style</code> and …\nThe icon <code>Color</code> of the container.\nComputes the layout of a <code>Container</code>.\nA rounded <code>Container</code> with a background.\nThe <code>Shadow</code> of the container.\nThe <code>Style</code> of a class with the given status.\nThe text <code>Color</code> of the container.\nA transparent <code>Container</code>.\nProduces a <code>Task</code> that queries the visible screen bounds of …\nget the a11y nodes for the widget\nAn overlayed widget that attaches a toggleable context …\nReturns the argument unchanged.\nSets the [<code>Id</code>] of the <code>ContextDrawer</code>.\nCalls <code>U::from(self)</code>.\nCreates an empty <code>ContextDrawer</code>.\nA context menu is a menu in a graphical user interface …\nA context menu is a menu in a graphical user interface …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nHorizontal variant of a divider.\nVertical variant of a divider.\nHorizontal divider with default thickness\nHorizontal divider with heavy thickness.\nHorizontal divider with light thickness\nVertical divider with default thickness\nVertical divider with heavy thickness.\nVertical divider with light thickness\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the drag id of the destination.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe default gap.\nThe default padding.\nA widget for selecting a single value from a list of …\nThe local state of a <code>Dropdown</code>.\nDraws a <code>Dropdown</code>.\nDisplays a list of options in a popover menu on select.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nComputes the layout of a <code>Dropdown</code>.\nReturns the current <code>mouse::Interaction</code> of a <code>Dropdown</code>.\nCreates a new <code>Dropdown</code> with the given list of selections, …\nCreates a new <code>State</code> for a <code>Dropdown</code>.\nReturns the current overlay of a <code>Dropdown</code>.\nProcesses an <code>Event</code> and updates the <code>State</code> of a <code>Dropdown</code> …\nThe appearance of a menu.\nA list of selectable options.\nThe local state of a <code>Menu</code>.\nThe supported style of the <code>StyleSheet</code>.\nThe style sheet of a menu.\nProduces the <code>Appearance</code> of a menu.\nMenu background\nMenu border color\nMenu border radius\nMenu border width\nDescription text color\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nBackground when hovered\nText color when hovered\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new <code>Menu</code> with the given <code>State</code>, a list of …\nCreates a new <code>State</code> for a <code>Menu</code>.\nTurns the <code>Menu</code> into an overlay <code>Element</code> at the given target …\nSets the <code>Padding</code> of the <code>Menu</code>.\nBackground when selected\nText color when selected\nMenu text color\nSets the text [<code>LineHeight</code>] of the <code>Menu</code>.\nSets the text size of the <code>Menu</code>.\nSets the width of the <code>Menu</code>.\nThe theme catalog of a <code>PickList</code>.\nThe item class of the <code>Catalog</code>.\nThe default gap.\nThe default padding.\nA widget for selecting a single value from a list of …\nA list for a multi-list dropdown widget.\nA model for managing the options in a multi-list dropdown.\nThe appearance of a pick list.\nThe <code>Background</code> of the pick list.\nThe <code>Border</code> of the pick list.\nThe default class produced by the <code>Catalog</code>.\nThe default class for the menu of the <code>PickList</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe handle <code>Color</code> of the pick list.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a <code>List</code> for a multi-list dropdown widget.\nCreate a <code>Model</code> for a multi-list dropdown.\nCreates a new <code>Dropdown</code> with the given list of selections, …\nThe placeholder <code>Color</code> of the pick list.\nThe <code>Style</code> of a class with the given status.\nThe text <code>Color</code> of the pick list.\nA dropdown menu with multiple lists.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nTurns the <code>Menu</code> into an overlay <code>Element</code> at the given target …\nSets the <code>Padding</code> of the <code>Menu</code>.\nSets the text [<code>LineHeight</code>] of the <code>Menu</code>.\nSets the text size of the <code>Menu</code>.\nSets the width of the <code>Menu</code>.\nResponsively generates rows of widgets based on the …\nResponsively generates rows and columns of widgets based …\nDefines how content will be aligned horizontally.\nSets the space between each column of items.\nDefines how the content will be justified.\nDefines how content will be aligned vertically.\nSets the max width\nSets minimum width of items that grow.\nSets the padding around the widget.\nSets the space between each item in a row.\nSets the space between each column and row.\nSets the width.\nArrange widgets with a grid layout.\nResponsively generates rows and columns of widgets based …\nAlignment across columns\nSets the space between each column of items.\nReturns the argument unchanged.\nSets the height of the grid.\nCalls <code>U::from(self)</code>.\nDefines how the content will be justified.\nSets the max width\nSets the padding around the widget.\nAttach a new element with a given grid assignment.\nAttach a new element with custom properties\nAlignment across rows\nSets the space between each item in a row.\nSets the width of the grid.\nDefault fallback using the icon name.\nAn image which may be an SVG or PNG.\nFallback icon to use if the icon was not found.\nFallback to specific icon names.\nDraw an icon in the given bounds via the runtime’s …\nSets the <code>fallback</code> field of this struct.\nChecks for a fallback if the icon was not found.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate an icon handle from its XDG icon name.\nCreate an icon handle from its path.\nCreate an image handle from memory.\nCreate an image handle from RGBA data, where you must …\nCreate a SVG handle from memory.\nCreate an <code>Icon</code> from a pre-existing <code>Handle</code>\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nName of icon to locate in an XDG icon path.\nSets the <code>prefer_svg</code> field of this struct.\nPrioritizes SVG over PNG\nSets the <code>scale</code> field of this struct.\nRestrict the lookup to a given scale.\nSets the <code>size</code> field of this struct.\nRestrict the lookup to a given size.\nSets the <code>symbolic</code> field of this struct.\nSets the <code>symbolic</code> field of this struct.\nWhether the icon is symbolic or not.\nThe theme catalog of a <code>Container</code>.\nThe item class of the <code>Catalog</code>.\nAn element decorating some content.\nThe appearance of a container.\nThe <code>Background</code> of the container.\nThe <code>Border</code> of the container.\nThe default class produced by the <code>Catalog</code>.\nThe icon <code>Color</code> of the container.\nThe <code>Shadow</code> of the container.\nThe <code>Style</code> of a class with the given status.\nThe text <code>Color</code> of the container.\nA handle pointing to some encoded image bytes in-memory.\nImage filtering strategy.\nA handle of some image data.\nA frame that displays an image while keeping aspect ratio.\nBilinear interpolation.\nNearest neighbor.\nA file handle. The image data will be read from the file …\nA handle pointing to decoded image pixels in RGBA format.\nA frame that displays an image with the ability to zoom …\nDraws an <code>Image</code>\nComputes the layout of an <code>Image</code>.\nZoom and pan on an image.\nCreates a new <code>Viewer</code> with the given image <code>Handle</code>.\nThe height of the image.\nThe id of this handle.\nThe pixels.\nThe width of the image.\nThe local state of a <code>Viewer</code>.\nA frame that displays an image with the ability to zoom …\nReturns the bounds of the underlying image, given the …\nThe theme catalog of a <code>Container</code>.\nThe item class of the <code>Catalog</code>.\nAn element decorating some content.\nThe appearance of a container.\nSets the content alignment for the horizontal axis of the …\nSets the content alignment for the vertical axis of the …\nThe <code>Background</code> of the container.\nThe <code>Border</code> of the container.\nCenters the contents in the horizontal and vertical axis …\nCenters the contents in the horizontal axis of the …\nCenters the contents in the vertical axis of the …\nSets the style of the <code>LayerContainer</code>.\nThe default class produced by the <code>Catalog</code>.\nSets the height of the <code>LayerContainer</code>.\nThe icon <code>Color</code> of the container.\nSets the [<code>Layer</code>] of the <code>LayerContainer</code>.\nSets the maximum height of the <code>LayerContainer</code> in pixels.\nSets the maximum width of the <code>LayerContainer</code>.\nSets the <code>Padding</code> of the <code>LayerContainer</code>.\nThe <code>Shadow</code> of the container.\nThe <code>Style</code> of a class with the given status.\nThe text <code>Color</code> of the container.\nSets the width of the [<code>self.</code>].\nSets the style variant of this [<code>Circular</code>].\nRepresents a button menu item.\nRepresents a button menu item that is disabled.\nRepresents a checkbox menu item.\nThe condition of when to close a menu\nRepresents a divider between menu items.\nDynamic tries to automatically choose the proper item …\nRepresents a folder menu item.\nDraw the full path,\nRepresents a menu item that performs an action when …\nThe height of an item\nThe width of an item\nOmit the active item if it’s not a menu\nA <code>MenuBar</code> collects <code>MenuTree</code>s and handles all the layout, …\nOmit the active item(the last item in the path)\nMethods for drawing path highlight\nStatic tries to use the width value of each menu(menu tree …\nStatic tries to use <code>MenuTree.height</code> as item height, when it…\nNested menu is essentially a tree of items, a menu is a …\nUse uniform width\nUse uniform height.\nA <code>MenuBar</code> collects <code>MenuTree</code>s and handles all the layout, …\nSets the expand value for each menu’s check bounds\nClose menus when the cursor clicks inside the check bounds\nClose menus when the cursor clicks outside the check bounds\n<code>CloseCondition</code>\nMoves each menu in the horizontal open direction\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nSets the height of the <code>MenuBar</code>\nSets the height of the menu tree. See <code>ItemHeight</code>\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n<code>ItemHeight</code>\n<code>ItemWidth</code>\nCreate a list of menu items from a vector of <code>MenuItem</code>.\nClose menus when the cursor moves outside the check bounds\nMoves all the menus in the vertical open direction\nCreates a new <code>MenuBar</code> with the given menu roots\nCreate a new menu tree from a widget\nSets the <code>Padding</code> of the <code>MenuBar</code>\nSets the method for drawing path highlight\nCreate a root menu item.\nSets the spacing between menu roots\nSets the style of the menu bar and its menus\nSets the width of the <code>MenuBar</code>\nSets the width of the menu tree. See <code>ItemWidth</code>\nCreate a menu tree from a widget and a vector of sub trees\n<code>MenuAction</code> is a trait that represents an action in a menu.\nThe type of message that will be produced when the action …\nReturns a message of type <code>Self::Message</code> when the action is …\nRepresents a combination of a key and modifiers. It is …\nRepresents the modifier keys on a keyboard.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe key for the key binding.\nChecks if the given key and modifiers match the <code>KeyBind</code>.\nA vector of modifiers for the key binding.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nPre-convert this widget into the <code>Container</code> widget that it …\nNavigation side panel for switching between views.\nNavigation side panel for switching between views. Can …\nEmitted when a tab close button is pressed.\nEmitted when a button is right-clicked.\nHandle the dnd drop event.\nHandle the dnd enter event.\nHandle the dnd leave event.\nEmitted when the middle mouse button is pressed on a …\nAll panes are visible\nA fixed reference line for the measurement of coordinates.\nBottom edge.\nA <code>Pane</code> was picked and then dropped outside of other <code>Pane</code> …\nThe theme catalog of a <code>PaneGrid</code>.\nCenter region.\nThe item class of this <code>Catalog</code>.\nThe arrangement of a <code>PaneGrid</code>.\nThe content of a <code>Pane</code>.\nThe visible contents of the <code>PaneGrid</code>\nThe controls of a <code>Pane</code>.\nA four cardinal direction.\n↓\nAn event produced during a drag and drop interaction of a …\nA pane that can be dragged.\nA <code>Pane</code> was dropped on top of another <code>Pane</code>.\nThe edges of an area.\nAn <code>Edge</code> of the full <code>PaneGrid</code>.\nEdge region.\nThe appearance of a highlight of the <code>PaneGrid</code>.\nThe horizontal axis: —\n←\nLeft edge.\nA line.\nA maximized pane is visible\nA layout node of a <code>PaneGrid</code>.\nA rectangular region in a <code>PaneGrid</code> used to display widgets.\nA <code>Pane</code>.\nThe region of this <code>Node</code> is taken by a <code>Pane</code>.\nA single <code>Pane</code> of the <code>PaneGrid</code>.\nA collection of panes distributed using either vertical or …\nA <code>Pane</code> was picked for dragging.\nThe region of a <code>Pane</code>.\nAn event produced during a resize interaction of a <code>PaneGrid</code>…\n→\nRight edge.\nA divider that splits a region in a <code>PaneGrid</code> into two …\nA split of the available space.\nThe region of this <code>Node</code> is split into two.\nThe state of a <code>PaneGrid</code>.\nThe appearance of a <code>PaneGrid</code>.\nA styling function for a <code>PaneGrid</code>.\nThe <code>Target</code> area a pane can be dropped on.\nThe title bar of a <code>Pane</code>.\nTop edge.\n↑\nThe vertical axis: |\nThe <code>Background</code> of the pane region.\nThe <code>Border</code> of the pane region.\nReturns whether the <code>Draggable</code> with the given <code>Layout</code> can be …\nThe <code>Color</code> of the <code>Line</code>.\nThe default style of a <code>PaneGrid</code>.\nThe default class produced by this <code>Catalog</code>.\nThe appearance of a hovered region highlight.\nThe appearance of a hovered split.\nThe internal state of the <code>PaneGrid</code>.\nThe panes of the <code>PaneGrid</code>.\nThe appearance of a picked split.\nThe new ratio of the <code>Split</code>.\nThe <code>Split</code> that is being dragged for resizing.\nThe state of a <code>PaneGrid</code>.\nThe <code>Style</code> of a class with the given status.\nThe width of the <code>Line</code>.\nThe left/top <code>Configuration</code> of the split.\nThe direction of the split.\nThe right/bottom <code>Configuration</code> of the split.\nThe ratio of the split in [0.0, 1.0].\nThe picked <code>Pane</code>.\nThe picked <code>Pane</code>.\nThe picked <code>Pane</code>.\nThe <code>Target</code> where the picked <code>Pane</code> was dropped on.\nThe left/top <code>Node</code> of the split.\nThe direction of the split.\nThe right/bottom <code>Node</code> of the split.\nThe <code>Split</code> of this <code>Node</code>.\nThe ratio of the split in [0.0, 1.0].\nThe current action of a <code>PaneGrid</code>.\nA <code>Pane</code> in the <code>PaneGrid</code> is being dragged.\nThe <code>PaneGrid</code> is idle.\nThe internal state of a <code>PaneGrid</code>.\nA <code>Split</code> in the <code>PaneGrid</code> is being dragged.\nThe state of a <code>PaneGrid</code>.\nThe internal state of the <code>PaneGrid</code>.\nThe panes of the <code>PaneGrid</code>.\nThe <code>Axis</code> of the <code>Split</code>.\nThe starting <code>Point</code> of the drag interaction.\nThe <code>Pane</code> being dragged.\nThe <code>Split</code> being dragged.\nThe theme catalog of a <code>Container</code>.\nThe item class of the <code>Catalog</code>.\nThe appearance of a container.\nThe <code>Background</code> of the container.\nThe <code>Border</code> of the container.\nThe default class produced by the <code>Catalog</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe icon <code>Color</code> of the container.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA modal popup interrupts user inputs and demands action.\nEmitted when the popup is closed.\nThe <code>Shadow</code> of the container.\nThe <code>Style</code> of a class with the given status.\nThe text <code>Color</code> of the container.\nThe theme catalog of a <code>ProgressBar</code>.\nThe item class of the <code>Catalog</code>.\nA bar that displays progress.\nThe appearance of a progress bar.\nA styling function for a <code>ProgressBar</code>.\nThe <code>Background</code> of the progress bar.\nThe <code>Background</code> of the bar of the progress bar.\nThe <code>Border</code> of the progress bar.\nThe danger style of a <code>ProgressBar</code>.\nThe default class produced by the <code>Catalog</code>.\nThe primary style of a <code>ProgressBar</code>.\nThe secondary style of a <code>ProgressBar</code>.\nThe <code>Style</code> of a class with the given status.\nThe success style of a <code>ProgressBar</code>.\nThe theme catalog of a <code>Radio</code>.\nThe item class of the <code>Catalog</code>.\nThe default size of a <code>Radio</code> button.\nThe default spacing of a <code>Radio</code> button.\nA circular button representing a choice.\nThe default class produced by the <code>Catalog</code>.\nCreates a new <code>Radio</code> button.\nSets the size of the <code>Radio</code> button.\nSets the spacing between the <code>Radio</code> button and the text.\nThe <code>Style</code> of a class with the given status.\nSets the width of the <code>Radio</code> button.\nThe theme catalog of a <code>Container</code>.\nThe item class of the <code>Catalog</code>.\nAn element decorating some content.\nThe appearance of a container.\nget the a11y nodes for the widget\nSets the content alignment for the horizontal axis of the …\nSets the content alignment for the vertical axis of the …\nThe <code>Background</code> of the container.\nThe <code>Border</code> of the container.\nCenters the contents in the horizontal and vertical axis …\nCenters the contents in the horizontal axis of the …\nCenters the contents in the vertical axis of the <code>Container</code>.\nThe default class produced by the <code>Catalog</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nSets the height of the <code>Container</code>.\nThe icon <code>Color</code> of the container.\nSet to true to ignore parent container bounds when …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSets the maximum height of the <code>Container</code> in pixels.\nSets the maximum width of the <code>Container</code>.\nSets the <code>Padding</code> of the <code>Container</code>.\nThe <code>Shadow</code> of the container.\nThe <code>Style</code> of a class with the given status.\nSets the style of the <code>Container</code>.\nThe text <code>Color</code> of the container.\nSets the width of the [<code>self.</code>].\nA container which aligns its children in a row.\nA pre-allocated <code>row</code>.\nA <code>row</code> that will be assigned a <code>Vec</code> of children.\nAppearance of the segmented button.\nConstructs a new item for the <code>ModelBuilder</code>.\nA unique ID for an item in the <code>Model</code>.\nA newly-inserted item which may have additional actions …\nHorizontal <code>SegmentedButton</code>.\nThe iced identifier of a segmented button.\nAppearance of an item in the segmented button.\nAppearance of an item based on its status.\nThe model held by the application, containing the unique …\nA builder for a <code>Model</code>.\n<code>Model&lt;MultiSelect&gt;</code> permits multiple keys to be active at a …\nMulti-select variant of an <code>EntityMut</code>.\nA model for multi-select button selection.\nAssociates extra data with an external secondary map.\nA conjoined group of items that function together as a …\nIsolates variant-specific behaviors from <code>SegmentedButton</code>.\nDescribes a type that has selectable items.\n<code>Model&lt;SingleSelect&gt;</code> Ensures that only one key may be …\nSingle-select variant of an <code>EntityMut</code>.\nA model for single-select button selection.\nAssociates extra data with an external sparse secondary …\nThe supported style of the <code>StyleSheet</code>.\nDefines the <code>Appearance</code> of a segmented button.\nVertical <code>SegmentedButton</code>.\nActivate an item.\nActivates the newly-inserted item.\nActivates the newly-inserted item.\nActivates the item in the model.\nActivates the item at the given position, returning true …\nThe IDs of the active items.\nThe ID of the active item.\nGet an immutable reference to the data associated with the …\nGet a mutable reference to the data associated with the …\nConsumes the builder and returns the model.\nCreates a builder for initializing a model.\nAlignment of button contents.\nDesired height of a button.\nPadding around a button.\nSpacing between icon and text in button.\nRemoves all items from the model.\nDefines that the close button should appear\nShows a close button for this item.\nShows or hides the item’s close button.\nThe icon used for the close button.\nCheck if an item exists in the map.\nAssigns extra data to the item.\nAssociates data with the item.\nGet an immutable reference to data associated with an item.\nGet a mutable reference to data associated with an item.\nRemoves a specific data type from the item.\nAssociates data with the item.\nDeactivate an item.\nDeactivates the item in the model.\nDeactivates the active item.\nWhether to place dividers between buttons.\nEnable or disable an item.\nGet the item that is located at a given position.\nA command that focuses a segmented item stored in a widget.\nDesired font for active tabs.\nDesired font for hovered tabs.\nDesired font for inactive tabs.\nSize of the font.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the drag id of the destination.\nDesired height of the widget.\nHorizontal implementation of the <code>SegmentedButton</code>.\nThe horizontal <code>Appearance</code> of the segmented button.\nDefines an icon for the item.\nDefine an icon for the item.\nImmutable reference to the icon associated with the item.\nRemoves the icon from an item.\nSets a new icon for an item.\nReturns the ID of the item that was inserted.\niced widget ID\nSpacing for each indent.\nInserts a new item and its associated data into the model.\nInserts a new item in the model.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the item is active.\nCheck if the given ID is the active ID.\nWhether the item should contain a close button.\nCheck if the item is enabled.\nIterates across items in the model in the order that they …\nLineHeight of the font.\nMaximum width of a button.\nMinimum width of a button.\nCreates a custom <code>Id</code>.\nEmitted when a tab is pressed.\nEmitted when a tab close button is pressed.\nEmitted when a button is right-clicked.\nHandle the dnd drop event.\nHandle the dnd enter event.\nHandle the dnd leave event.\nEmitted when the middle mouse button is pressed on a …\nPadding of the whole widget.\nDefine the position of the newly-inserted item.\nDefine the position of the item.\nThe position of the item in the model.\nChange the position of an item in the model.\nSwap the position with another item in the model.\nSwap the position with another item in the model.\nSwap the position of two items in the model.\nRemoves an item from the model.\nScrolling switches focus between tabs.\nAssociates extra data with an external secondary map.\nAssociates extra data with an external secondary map.\nAssociates extra data with an external sparse secondary …\nAssociates extra data with an external sparse secondary …\nShow the close icon only when item is hovered.\nDesired spacing between items.\nStyle to draw the widget in.\nDefines the text for the item.\nDefines the text for the item.\nImmutable reference to the text assigned to the item.\nRemoves text from an item.\nSets new text for an item.\nCreates a unique <code>Id</code>.\nGet the appearance for this variant of the widget.\nCalculates the bounds for visible buttons.\nCalculates the layout of this variant.\nVertical implementation of the <code>SegmentedButton</code>.\nThe vertical <code>Appearance</code> of the segmented button.\nDesired width of the widget.\nCalls a function with the ID\nCalls a function with the ID without consuming the wrapper.\nA selection of multiple choices appearing as a conjoined …\nA selection of multiple choices appearing as a conjoined …\nA column with a predefined style for creating a settings …\nA builder for a settings item.\nCreates a builder for an item, beginning with the title.\nAssigns a control to the item.\nA description to display beneath the title.\nAssigns a control which flexes.\nA settings item aligned in a flex row\nA settings item aligned in a flex row\nReturns the argument unchanged.\nA custom icon to display before the text.\nCalls <code>U::from(self)</code>.\nA settings item aligned in a row\nA settings item aligned in a row\nDescribes the item being controlled.\nAdd a child element to the section’s list column.\nAdd a child element to the section’s list column, if <code>Some</code>…\nExtends the <code>Section</code> with the given children.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nA section within a settings view column.\nDefine an optional title for the section.\nA section within a settings view column.\nA section with a pre-defined list column.\nThe <code>Slider</code> can be interacted with.\nThe appearance of slider breakpoints.\nThe theme catalog of a <code>Slider</code>.\nA circular handle.\nThe item class of the <code>Catalog</code>.\nThe <code>Slider</code> is being dragged.\nLinear gradient for the background of the rail includes an …\nThe appearance of the handle of a slider.\nThe shape of the handle of a slider.\nThe <code>Slider</code> is being hovered.")