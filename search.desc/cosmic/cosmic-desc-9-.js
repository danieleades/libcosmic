searchState.loadedDescShard("cosmic", 9, "Set the ICC profile to use for the image.\nSet the decoder to have the specified limits. See <code>Limits</code> …\nReturns a mutable subimage that is a view into this image. …\nConvert this pixel to luma\nConvert this pixel to luma with an alpha channel\nConvert this pixel to RGB\nConvert this pixel to RGB with an alpha channel\nReturns the total number of bytes in the decoded image.\nReturns the pixel located at (x, y). Indexed from top left.\nPuts a pixel at location (x, y). Indexed from top left.\nReturns a subimage that is an immutable view into this …\nThe width of this image.\nWrites the supplied buffer to a writer in the specified …\nWrites all the bytes in an image to the encoder.\nProvides color conversions for whole image buffers.\nEnumerate the pixels of an image.\nEnumerate the pixels of an image.\nEnumerate the rows of an image.\nEnumerate the rows of an image.\nIterate over pixel refs.\nIterate over mutable pixel refs.\nIterate over rows of an image\nIterate over mutable rows of an image\nConverts <code>self</code> to a buffer of type T\nDecoding and Encoding of JPEG Images\nDecoding and Encoding of PNG Images\nPixels per centimeter\nPixels per inch (2.54 cm)\nJPEG decoder\nThe representation of a JPEG encoder\nRepresents the absence of a unit, the values indicate only …\nRepresents the pixel density of an image\nRepresents a unit in which the density of an image is …\nA couple of values for (Xdensity, Ydensity)\nThe unit in which the density is measured\nUses a heuristic to select one of the preceding filters …\nAn <code>AnimationDecoder</code> adapter of <code>PngDecoder</code>.\nFilters based on the average of left and right neighbor …\nHigh compression level\nCompression level of a PNG encoder. The default setting is …\nDefault compression level\nFast, minimal compression\nFilter algorithms used to process image data to improve …\nNo processing done, best used for low bit depth grayscale …\nAlgorithm that takes into account the left, upper left, …\nPNG decoder\nPNG encoder\nFilters based on previous pixel in the same scanline\nFilters based on the scanline above\nThe required color type can not be handled.\nAn error was encountered while decoding.\nAn error was encountered while decoding an image.\nThe resulting image exceed dimension limits in either …\nThe dimensions passed are wrong.\nAn error was encountered while encoding.\nAn error was encountered while encoding an image.\nContains the error value\nThe format is known exactly.\nRepeated an operation for which error that could not be …\nAn image format is not supported.\nA string describing the parameter. This is discouraged and …\nSome feature specified by string. This is discouraged and …\nThe generic error type for image operations.\nA best effort representation for image formats.\nResult of an image decoding/encoding process\nThe operation would have performed an allocation larger …\nAn error occurred while interacting with the environment.\nCompleting the operation would have required more …\nIndicates the limit that prevented an operation from …\nCompleting the operation would have required more …\nThe format can be identified by a name.\nThe end of the image has been reached.\nContains the success value\nAn error was encountered in input arguments.\nAn error was encountered in inputs arguments.\nDetails how a parameter is malformed.\nA common path extension for the format is known.\nThe format is not known or could not be determined.\nAn operation can not be completed by the chosen …\nThe specified strict limits are not supported for this …\nThe implementation for an operation was not provided.\nDetails what feature is not supported.\nThe given limits\nThe supported strict limits\nThe color format did not match the channel count.\nThe samples are in column-major form and all samples are …\nDenotes invalid flat sample buffers when trying to convert …\nA flat buffer over a (multi channel) image.\nAll samples are packed.\nDifferent normal forms of buffers.\nThe represented image can not use this representation.\nAt least pixels are packed.\nThe samples are in row-major form and all samples are …\nA ffi compatible description of a sample buffer.\nThe represented image was too large.\nNo pixel aliases another.\nA flat buffer that can be used as an image view.\nA mutable owning version of a flat buffer.\nDeprecated - <code>ChannelCountMismatch</code> is used instead\nAdd this to an index to get to the sample in the next …\nThe number of channels in the color representation of the …\nSupplementary color information.\nThe height of the represented image.\nAdd this to an index to get to the next sample in …\nA <code>repr(C)</code> description of the layout of buffer samples.\nUnderlying linear container holding sample values.\nThe width of the represented image.\nAdd this to an index to get to the next sample in …\nA bi-level color map\nCubic Filter\nThe color type on which the map operates on\nA color map\nAvailable Sampling Filters.\nGaussian Filter\nLanczos with window 3\nNearest Neighbor\nLinear Filter\nPerforms a Gaussian blur on the supplied image. <code>sigma</code> is a …\nBrighten the supplied image. <code>value</code> is the amount to …\nFunctions for altering and converting the color of …\nAdjust the contrast of the supplied image. <code>contrast</code> is the …\nReturn a mutable view into an image The coordinates set …\nReturn an immutable view into an image The coordinates set …\nReduces the colors of the image using the supplied …\nApproximation of Gaussian blur after Kovesi, P.:  Fast …\nPerform a 3x3 box filter on the supplied image. <code>kernel</code> is …\nFlip an image horizontally\nFlip an image horizontally and put the result into the …\nFlip an image horizontally in place.\nFlip an image vertically\nFlip an image vertically and put the result into the …\nFlip an image vertically in place.\nConvert the supplied image to grayscale. Alpha channel is …\nConvert the supplied image to grayscale. Alpha channel is …\nConvert the supplied image to a grayscale image with the …\nConvert the supplied image to a grayscale image with the …\nDetermine if this implementation of <code>ColorMap</code> overrides the …\nFill the image with a linear horizontal gradient\nHue rotate the supplied image. <code>value</code> is the degrees to …\nReduces the colors using the supplied <code>color_map</code> and …\nReturns the index of the closest match of <code>color</code> in the …\nLinearly sample from an image using coordinates in [0, w-1]…\nSample from an image using coordinates in [0, w-1] and [0, …\nInvert each pixel within the supplied image. This function …\nLooks up color by index in the color map.  If <code>idx</code> is out …\nMaps <code>color</code> to the closest color in the color map.\nOverlay an image at a given coordinate (x, y)\nCalculate the region that can be copied from top to bottom.\nReplace the contents of an image at a given coordinate (x, …\nResize the supplied image to the specified dimensions. …\nRotate an image 180 degrees clockwise.\nRotate an image 180 degrees clockwise and put the result …\nRotate an image 180 degrees clockwise in place.\nRotate an image 270 degrees clockwise.\nRotate an image 270 degrees clockwise and put the result …\nRotate an image 90 degrees clockwise.\nRotate an image 90 degrees clockwise and put the result …\nLinearly sample from an image using coordinates in [0, 1].\nSample from an image using coordinates in [0, 1], taking …\nResize the supplied image to the specific dimensions.\nTile an image by repeating it multiple times\nPerforms an unsharpen mask on the supplied image. <code>sigma</code> is …\nFill the image with a linear vertical gradient\nA bi-level color map\nThe color type on which the map operates on\nA color map\nBrighten the supplied image. <code>value</code> is the amount to …\nBrighten the supplied image in place. <code>value</code> is the amount …\nAdjust the contrast of the supplied image. <code>contrast</code> is the …\nAdjust the contrast of the supplied image in place. …\nReduces the colors of the image using the supplied …\nConvert the supplied image to grayscale. Alpha channel is …\nConvert the supplied image to grayscale. Alpha channel is …\nConvert the supplied image to a grayscale image with the …\nConvert the supplied image to a grayscale image with the …\nDetermine if this implementation of <code>ColorMap</code> overrides the …\nHue rotate the supplied image. <code>value</code> is the degrees to …\nHue rotate the supplied image in place.\nReduces the colors using the supplied <code>color_map</code> and …\nReturns the index of the closest match of <code>color</code> in the …\nInvert each pixel within the supplied image. This function …\nLooks up color by index in the color map.  If <code>idx</code> is out …\nMaps <code>color</code> to the closest color in the color map.\nDeprecated re-export of <code>LimitSupport</code>\nDeprecated re-export of <code>Limits</code>\nDeprecated re-export of <code>ImageReader</code> as <code>Reader</code>\nThe maximum allowed sum of allocations allocated by the …\nThe maximum allowed image height. This limit is strict. …\nThe maximum allowed image width. This limit is strict. The …\nA Rectangle defined by its top left corner, width and …\nThe rectangle’s height.\nThe rectangle’s width.\nThe x coordinate of the top left corner.\nThe y coordinate of the top left corner.\nFlip horizontally. Can be performed in-place.\nFlip vertically. Can be performed in-place.\nDo not perform any transformations.\nDescribes the transformations to be applied to the image. …\nRotate by 180 degrees. Can be performed in-place.\nRotate by 270 degrees clockwise. Equivalent to rotating by …\nRotate by 270 degrees clockwise and flip horizontally.\nRotate by 90 degrees clockwise.\nRotate by 90 degrees clockwise and flip horizontally.\nA layer of graphical primitives.\nA stack of layers used for drawing.\nFlushes and settles any pending group of primitives in the …\nClears all the layers contents and resets its bounds.\nResizes the <code>Layer</code> to the given bounds.\nCreates a new <code>Layer</code> with the given bounds.\nThe result of counting the attributes of a set of meshes.\nA mesh with a gradient.\nA vertex which contains 2D position &amp; packed gradient data.\nA set of vertices and indices representing a list of …\nA low-level primitive to render a mesh of triangles.\nA renderer capable of drawing a <code>Mesh</code>.\nA mesh with a solid color.\nA two-dimensional vertex with a color.\nReturns the number of total vertices &amp; total indices of …\nThe color of the vertex in <strong>linear</strong> RGBA.\nDraws the given <code>Mesh</code>.\nThe packed vertex data of the gradient.\nThe total amount of gradient vertices.\nThe total amount of gradient meshes.\nThe list of vertex indices that defines the triangles of …\nThe total amount of indices.\nThe vertex position in 2D space.\nThe vertex position in 2D space.\nThe total amount of solid vertices.\nThe total amount of solid meshes.\nThe vertices of the mesh\nThe vertices and indices of the mesh.\nThe vertices and indices of the mesh.\nThe clip bounds of the <code>Mesh</code>.\nThe clip bounds of the <code>Mesh</code>.\nThe <code>Transformation</code> for the vertices of the <code>Mesh</code>.\nThe <code>Transformation</code> for the vertices of the <code>Mesh</code>.\nA store of recently used sections of text.\nSome cached text.\nA multi-line text editor.\nAn editor.\nA set of system fonts.\nA bunch of text.\nA paragraph.\nA weak reference to a [<code>cosmic-text::Buffer</code>] that can be …\nSome raw text.\nA text primitive.\nA version number.\nA weak reference to a <code>cosmic_text::Buffer</code>.\nCache text.\nThe clip bounds of the text.\nThe color of the text.\nDraw and edit text.\nReturns the global <code>FontSystem</code>.\nMeasures the dimensions of the given <code>cosmic_text::Buffer</code>.\nDraw paragraphs.\nThe position of the text.\nReturns the attributes of the given <code>Font</code>.\nConverts some <code>Color</code> to a <code>cosmic_text::Color</code>.\nConverts some <code>Shaping</code> strategy to a <code>cosmic_text::Shaping</code> …\nConverts some <code>Wrapping</code> strategy to a <code>cosmic_text::Wrap</code> …\nThe bounds of the text.\nThe clip bounds of the text.\nThe color of the text.\nThe contents of the text.\nThe font of the text.\nThe horizontal alignment of the text.\nThe line height of the text.\nThe shaping strategy of the text.\nThe size of the text in logical pixels.\nThe vertical alignment of the text.\nA store of recently used sections of text.\nA cache entry.\nA cache key representing a section of text.\nThe hash of a <code>Key</code>.\nThe bounds of the text.\nThe buffer of text, ready for drawing.\nThe content of the text.\nThe <code>Font</code> of the text.\nThe line height of the text.\nThe minimum bounds of the text.\nThe shaping strategy of the text.\nThe size of the text.\nAn action to perform on an <code>Editor</code>\nAdvanced text shaping and font fallback.\nWhether to associate cursors placed at a boundary between …\nAlign or justify\nRepresents an angle in degrees or radians.\nText attributes\nList of text attributes to apply to a line\nAn owned version of <code>Attrs</code>\nDelete text behind cursor\nBasic shaping with no font fallback.\nAn iterator over the paragraphs in the input text. It is …\nA value borrowed together with an <code>FontSystem</code>\nA buffer of text that is shaped and laid out\nMove cursor to the end of the document\nA line (or paragraph) of text that is shaped and laid out\nMove cursor to the start of the document\nKey for building a glyph cache\nFlags that change rendering\nMetrics, but implementing Eq and Hash using u32 …\nHelper for caching a value when the value is optionally …\nA set of change items grouped into one logical change\nA unique change to an editor\nMouse click at specified position\nCloses a subpath, connecting the final point to the …\nText color\n32-bit RGBA bitmap.\nPath command.\nUse <code>\\r</code> for line ending (many legacy systems)\nUse <code>\\r\\n</code> for line ending (Windows-style)\nGlyphs in cursive fonts generally use a more informal …\nCurrent cursor location\nA cubic bezier curve from the previous point to the final …\nDelete text in front of cursor\nMouse double click at specified position\nMove cursor down\nMouse drag to specified position\nA trait to allow easy replacements of <code>Editor</code>, like …\nA wrapper of [<code>Buffer</code>] for easy editing\nMove cursor to end of line\nCreate new line\nEscape, clears selection\nA font family.\nAn owned version of <code>Family</code>\nFantasy fonts are primarily decorative or expressive fonts …\nA font\nFont-specific part of <code>Attrs</code> to be used for matching\nAccess to the system fonts.\nWraps at a glyph level\nMove cursor to specific line\nMove cursor to start of line\nInsert character at cursor\nA form that is generally cursive in nature.\nThe position of a cursor within a [<code>Buffer</code>].\nApply specific <code>LayoutCursor</code>\nA laid out glyph\nA line of laid out glyphs\nA line of visible text for rendering\nAn iterator of visible text lines, see <code>LayoutRun</code>\nMove cursor left\nMove cursor to next word boundary to the left\nUse <code>\\n</code> for line ending (POSIX-style)\nUse <code>\\n\\r</code> for line ending (some legacy systems)\nSelect by lines\nLine ending\nIterator over lines terminated by <code>LineEnding</code>\nA straight line from the previous point to the specified …\n8-bit alpha mask.\nMetrics of text\nThe sole criterion of a monospace font is that all glyphs …\nA motion to perform on a <code>Cursor</code>\nMove the cursor with some motion\nBegins a new subpath at the specified point.\nThe name of a font family of choice.\nMove cursor to next character (Self::Right in LTR, …\nMove cursor to next word boundary\nNo selection\nNo wrapping\nNo line ending\nA face that is neither italic not obliqued.\nNormal selection\nA typically-sloped version of the regular face.\nMove cursor down one page\nMove cursor up one page\nMove cursor to end of paragraph\nMove cursor to start of paragraph\nDescribes the offset and dimensions of a rendered mask.\nMove cursor to previous character (Self::Left in LTR, …\nMove cursor to previous word boundary\nA quadratic curve from the previous point to the final …\nMove cursor right\nMove cursor to next word boundary to the right\nGlyphs in sans-serif fonts, as the term is used in CSS, …\nScroll position in [<code>Buffer</code>]\nScroll specified number of lines\nSelection mode\nSerif fonts represent the formal text style for a script.\nA set of buffers containing allocations for shaped text.\nA shaped glyph\nA shaped line (or paragraph)\nA helper structure for caching shape runs.\nKey for caching shape runs.\nA shaped span (for bidirectional processing)\nA shaped word (for word wrapping)\nThe shaping strategy of some text.\nMove cursor to start of line, skipping whitespace\nA face width.\nAllows italic or oblique faces to be selected.\nBinning of subpixel position for cache optimization\n32-bit RGBA subpixel mask.\nCache for rasterizing with the swash scaler\nContent of a scaled glyph image.\nScaled glyph image.\nTwo dimensional transformation matrix.\nMouse triple click at specified position\nMove cursor up\nMove cursor up or down by a number of pixels\nSpecifies the weight of glyphs in the font, their degree …\nSelect by words\nWraps at the word level\nWraps at the word level, or fallback to glyph level if a …\nWrapping mode\nPerform an Action on the editor\nWhether to associate the cursor with the run before it or …\nApply a change\nGet the current automatic indentation setting\nMutably borrows <code>self</code> together with an <code>FontSystem</code> for more …\nGet the internal <code>BufferRef</code>\nGet the internal <code>BufferRef</code>\nCache key, see CacheKey\n<code>CacheKeyFlags</code>\nOptional color override\nContent of the image.\nCopy selection\nGet the current cursor\nGet X and Y position of the top left corner of the cursor\nRaw image data.\nDelete text starting at start Cursor and ending at end …\nDelete selection, adjusting cursor and returning true if …\nCursor indicating end of change\nEnd index of cluster in original line\nGet completed change\n<code>CacheKeyFlags</code>\nFont ID\nFont id of the glyph\nFont size in pixels\nFont size of the glyph\n<code>f32</code> bits of font size\nIndex of [<code>LayoutGlyph</code>] in [<code>LayoutLine::glyphs</code>]\nGlyph ID\nFont id of the glyph\nThe array of layout glyphs to draw\nGlyphs in line\nHeight in pixels.\nThe horizontal position of scroll in fractional pixels\nFirst-byte-index of glyph at cursor (will insert behind …\nInsert if true, delete if false\nInsert text at specified cursor with specified attrs_list\nInsert a string at the current cursor or replacing the …\nChange items grouped into one change\nIndex of [<code>LayoutLine</code>] in [<code>BufferLine::layout</code>]\nHorizontal offset with respect to the origin specified …\nUnicode BiDi embedding level, character is left-to-right …\nIndex of [<code>BufferLine</code>] in [<code>Buffer::lines</code>]\nIndex of [<code>BufferLine</code>] in [<code>Buffer::lines</code>]\nIndex of [<code>BufferLine</code>] in [<code>Buffer::lines</code>]. This will be …\nY offset to next line\nLine height in pixels\nLine height of the glyph, will override buffer setting\nMaximum line height of any spans in line\nThe index of the original text line\nY offset to top of line\nWidth of line\nY offset to baseline of line\nBufferLines (or paragraphs) of text in the buffer\nMaximum ascent of the glyphs in line\nMaximum descent of the glyphs in line\nMetadata from <code>Attrs</code>\nOffset and size of the image.\nGet the <code>Buffer</code> redraw flag\nTrue if the original paragraph direction is RTL\nGet the current selection position\nGet the bounds of the current selection\nEnable or disable automatic indentation\nSet the current cursor\nSet the <code>Buffer</code> redraw flag\nSet the current selection position\nSet the current tab width. A <code>tab_width</code> of 0 is not …\nShape lines until scroll, after adjusting scroll if the …\nSource of the image.\nCursor indicating start of change\nStart index of cluster in original line\nStart collecting change\nGet the current tab width\nThe original text line\nText to be inserted or deleted\nVertical offset with respect to the origin specified when …\nPixel offset from the start of the [<code>BufferLine</code>]. This will …\nWidth of hitbox\nWidth of the line\nWidth in pixels.\nGet the internal <code>Buffer</code>\nGet the internal <code>Buffer</code>, mutably\nX offset of hitbox\nInteger component of X offset in line\nBinning of fractional X offset\nX offset in line\nY offset of hitbox\nInteger component of Y offset in line\nBinning of fractional Y offset\nY offset in line\nA font’s raw data, typically backed by a Vec.\nGlyphs in cursive fonts generally use a more informal …\nA font database.\nA single font face info.\nA font family.\nFantasy fonts are primarily decorative or expressive fonts …\nA font’s path.\nA unique per database face ID.\nA form that is generally cursive in nature.\nA <code>Name</code> language.\nThe sole criterion of a monospace font is that all glyphs …\nThe name of a font family of choice.\nA face that is neither italic not obliqued.\nA typically-sloped version of the regular face.\nA database query.\nGlyphs in sans-serif fonts, as the term is used in CSS, …\nSerif fonts represent the formal text style for a script.\nA font’s raw data originating from a shared file mapping.\nA font source.\nA face width.\nAllows italic or oblique faces to be selected.\nSpecifies the weight of glyphs in the font, their degree …\nA list of family names.\nA prioritized list of font family names or generic family …\nAn unique ID.\nA face index in the <code>source</code>.\nIndicates that the font face is monospaced.\nA PostScript name.\nA font source.\nA font face stretch.\nSelects a normal, condensed, or expanded face from a font …\nA font face style.\nAllows italic or oblique faces to be selected.\nA font face weight.\nSpecifies the weight of glyphs in the font, their degree …\nText is set vertically from bottom to top.\nA cluster level.\nFlags for buffers.\nDefines the direction in which text is to be read.\nA font face handle.\nA feature tag with an accompanying range specifying on …\nA buffer that contains the results of the shaping process.\nA glyph info.\nHolds the positions of the glyph in both horizontal and …\nInitial, unset direction.\nA script language.\nText is set horizontally from left to right.\nText is set horizontally from right to left.\nA text script.\nFlags used for serialization with a <code>BufferSerializer</code>.\nA reusable plan for shaping a text buffer.\nText is set vertically from top to bottom.\nA buffer that contains an input string ready for shaping.\nA font variation.\nAn index to the start of the grapheme cluster in the …\nA selected glyph.\nPredefined scripts.\nShapes the buffer content using provided font and features.\nShapes the buffer content using the provided font and plan.\nHow much the line advances after drawing this glyph when …\nHow much the glyph moves on the X-axis before drawing it, …\nHow much the line advances after drawing this glyph when …\nHow much the glyph moves on the Y-axis before drawing it, …\nA grayscale bitmap with 2 bits per pixel.\nA packed grayscale bitmap with 2 bits per pixel.\nA grayscale bitmap with 4 bits per pixel.\nA packed grayscale bitmap with 4 bits per pixel.\nA grayscale bitmap with 8 bits per pixel.\nA monochrome bitmap.\nA packed monochrome bitmap.\nA color bitmap with 32 bits per pixel.\nA list of errors that can occur during a CFF glyph …\nA font face.\nThe face index is larger than the number of faces in the …\nA list of font face parsing errors.\nParsed face tables.\nA 32-bit signed fixed-point number (16.16).\nA trait for parsing raw binary data of fixed size.\nA type-safe wrapper for glyph ID.\nA form that is generally cursive in nature.\nA <code>Name</code> language.\nA slice-like container that converts internal binary data …\nA slice-like container that converts internal binary data …\nAn iterator over <code>LazyArray16</code>.\nAn iterator over <code>LazyArray32</code>.\nA line metrics.\nAn attempt to read out of bounds detected.\nThe <code>head</code> table is missing or malformed.\nThe <code>hhea</code> table is missing or malformed.\nThe <code>maxp</code> table is missing or malformed.\nA face that is neither italic not obliqued.\nA variation coordinate in a normalized coordinate system.\nA typically-sloped version of the regular face.\nA trait for glyph outline construction.\nFace permissions.\nA platform ID.\nA glyph’s raster image.\nA glyph raster image format.\nA raw font face.\nA list of all supported tables as raw data.\nA rectangle.\nA rectangle described by the left-lower and upper-right …\nA RGBA color in the sRGB color space.\nObject’s raw data size.\nA script metrics used by subscript and superscript.\nA face style.\nA raw table record.\nA 4-byte tag.\nAn affine transform.\nUnicode Ranges.\nFace data must start with <code>0x00010000</code>, <code>0x74727565</code>, …\nA font variation value.\nA variation axis.\nA face weight.\nA face width.\nThe ‘a’ component of the transform.\nAn Anchor Point Table implementation.\nThis module contains Apple Advanced Typography Layout …\nAn Axis Variations Table implementation.\nAn axis tag name.\nThe ‘b’ component of the transform.\nThe ‘c’ component of the transform.\nA Color Bitmap Data Table implementation.\nA Color Bitmap Location Table implementation.\nA Compact Font Format Table implementation.\nA Compact Font Format 2 Table implementation.\nAppends a ClosePath segment.\nA Character to Glyph Index Mapping Table implementation.\nA Color Table implementation.\nA Color Palette Table implementation.\nAppends a CurveTo segment.\nThe ‘d’ component of the transform.\nA raw image data. It’s up to the caller to decode it.\nThe input font file data.\nThe ‘e’ component of the transform.\nThe ‘f’ component of the transform.\nA Feature Name Table implementation.\nReturns the number of fonts stored in a TrueType font …\nAn image format.\nA Font Variations Table implementation.\nA Glyph Definition Table implementation.\nA Glyph Data Table implementation.\nA Glyph Positioning Table implementation.\nA Glyph Substitution Table implementation.\nA Glyph Variations Table implementation.\nA Font Header Table implementation.\nImage height.\nA Horizontal Header Table implementation.\nA Horizontal/Vertical Metrics Table implementation.\nA Horizontal/Vertical Metrics Variations Table …\nA Kerning Table implementation.\nAn Extended Kerning Table implementation.\nAppends a LineTo segment.\nAn Index to Location Table implementation.\nA Math Table implementation.\nA Maximum Profile Table implementation.\nAn Extended Glyph Metamorphosis Table implementation.\nAppends a MoveTo segment.\nA Metrics Variations Table implementation.\nA Naming Table implementation.\nA list of name ID’s.\nAn axis name in the <code>name</code> table.\nThis module contains OpenType Layout supplementary tables …\nA OS/2 and Windows Metrics Table implementation.\nParses an object from a raw data.\nA pixels per em of the selected strike.\nLine position.\nA PostScript Table implementation.\nAppends a QuadTo segment.\nA Standard Bitmap Graphics Table implementation.\nAn SVG Table implementation.\nAn array of table records.\nLine thickness.\nA Tracking Table implementation.\nAn axis value.\nA Vertical Header Table implementation.\nA Vertical Origin Table implementation.\nImage width.\nHorizontal offset.\nThe horizontal maximum of the rect.\nThe horizontal minimum of the rect.\nX offset.\nHorizontal face size.\nVertical offset.\nThe vertical maximum of the rect.\nThe vertical minimum of the rect.\nY offset.\nVertical face size.\nAn anchor point.\nAn Anchor Point Table.\nAn Extended State Table.\nA State Table entry.\nA lookup table.\nA legacy state entry used by StateTable.\nA State Table.\nA type-safe wrapper for a kerning value offset.\nPredefined classes.\nAdditional data.\nAdditional data.\nEntry flags.\nEntry flags.\nA new state.\nA new state.\nPredefined states.\nAn axis value map.\nA list of segment maps.\nAn iterator over maps.\nAn Axis Variations Table.\nA normalized coordinate value obtained using default …\nThe segment maps array — one segment map for each axis …\nThe modified, normalized coordinate value.\nA Color Bitmap Data Table.\nA Color Bitmap Location Table.\nAn affine transformation matrix.\nA Compact Font Format Table.\nA Compact Font Format 2 Table.\nA character encoding subtable variant.\nGlyph was found in the variation encoding table.\nA result of a variation glyph mapping.\nA character encoding subtable.\nA format 0 subtable.\nA format 10 subtable.\nA format 12 subtable.\nA format 13 subtable.\nA format 14 subtable.\nA format 2 subtable.\nA format 4 subtable.\nA format 6 subtable.\nA list of subtables.\nAn iterator over <code>Subtables</code>.\nA Character to Glyph Index Mapping Table.\nGlyph should be looked in other, non-variation tables.\nSubtable encoding.\nFirst character code covered.\nFirst character code of subrange.\nA subtable format.\nJust a list of 256 8bit glyph IDs.\nArray of glyph indices for the character codes covered.\nArray of glyph indexes for character codes in the range.\nSubtable platform.\nA list of subtables.\nThe composite mode ‘Clear’.\nA ClipBox.\nThe composite mode ‘Color’.\nThe composite mode ‘ColorBurn’.\nThe composite mode ‘ColorDodge’.\nA gradient extend.\nA composite mode\nThe composite mode ‘Darken’.\nThe composite mode ‘Destination’.\nThe composite mode ‘DestinationAtop’.\nThe composite mode ‘DestinationIn’.\nThe composite mode ‘DestinationOut’.\nThe composite mode ‘DestinationOver’.\nThe composite mode ‘Difference’.\nThe composite mode ‘Exclusion’.\nA gradient extend.\nAn iterator over stops of a gradient.\nThe composite mode ‘HardLight’.\nThe composite mode ‘Hue’.\nThe composite mode ‘Lighten’.\nA linear gradient\nA paint with a linear gradient.\nThe composite mode ‘Luminosity’.\nThe composite mode ‘Multiply’.\nThe composite mode ‘Overlay’.\nThe <code>Pad</code> gradient extend mode.\nA paint.\nA trait for color glyph painting.\nThe composite mode ‘Plus’.\nA radial gradient\nA paint with a radial gradient.\nThe <code>Reflect</code> gradient extend mode.\nThe <code>Repeat</code> gradient extend mode.\nThe composite mode ‘Saturation’.\nThe composite mode ‘Screen’.\nThe composite mode ‘SoftLight’.\nA paint with a solid color.\nThe composite mode ‘Source’.\nThe composite mode ‘SourceAtop’.\nThe composite mode ‘SourceIn’.\nThe composite mode ‘SourceOut’.\nThe composite mode ‘SourceOver’.\nA sweep gradient\nA paint with a sweep gradient.\nA Color Table.\nThe composite mode ‘Xor’.\nThe x of the center.\nThe y of the center.\nThe color of the color stop.\nThe end angle.\nThe extend.\nThe extend.\nThe extend.\nOutline a glyph and store it.\nPaint the stored outline using the provided color.\nPop the last clip path.\nPop the last layer.\nPop the last transform.\nPush a new clip path using the currently stored outline.\nPush a new clip path using the clip box.\nPush a new layer with the given composite mode.\nPush a rotation transform.\nPush a scaling transform.\nPush a skewing transform.\nPush a transform.\nPush a translation transform.\nThe <code>r0</code> value.\nThe <code>r1</code> value.\nThe start angle.\nThe offset of the color stop.\nThe <code>x0</code> value.\nThe <code>x0</code> value.\nThe <code>x1</code> value.\nThe <code>x1</code> value.\nThe <code>x2</code> value.\nThe horizontal maximum of the rect.\nThe horizontal minimum of the rect.\nThe <code>y0</code> value.\nThe <code>y0</code> value.\nThe <code>y1</code> value.\nThe <code>y1</code> value.\nThe <code>y2</code> value.\nThe vertical maximum of the rect.\nThe vertical minimum of the rect.\nA Color Palette Table.\nA feature names.\nA list fo feature names.\nAn iterator over <code>FeatureNames</code>.\nA setting name.\nA Feature Name Table.\nThe index of the default setting in the <code>setting_names</code>.\nThe feature’s exclusive settings. If set, the feature …\nThe feature’s ID.\nThe <code>name</code> table index for the feature’s name in a …\nThe <code>name</code> table index for the feature’s name in a …\nA list of feature names. Sorted by <code>FeatureName.feature</code>.\nThe setting.\nThe feature’s setting names.\nA Font Variations Table.\nA variation axis.\nA list of variation axes.\nAn axis name in the <code>name</code> table.\nA glyph class.\nA Glyph Definition Table.\nA Glyph Data Table.\nAn Anchor Table.\nAn <code>Anchor</code> parsing helper.\nA <code>ValueRecord</code> pairs matrix used by <code>PairAdjustment</code>.\nA Cursive Attachment Positioning Subtable.\nA list of entry and exit <code>Anchor</code> pairs.\nA Device Table.\nA Device Table hinting values.\nAn array or ligature anchor matrices.\nA Mark Array.\nA Mark-to-Base Attachment Positioning Subtable.\nA Mark-to-Ligature Attachment Positioning Subtable.\nA Mark-to-Mark Attachment Positioning Subtable.\nA Pair Adjustment Positioning Subtable.\nA <code>ValueRecord</code> pairs set used by <code>PairAdjustment</code>.\nA list of <code>PairSet</code>s.\nA glyph positioning lookup subtable enumeration.\nA Single Adjustment Positioning Subtable.\nA Value Record.\nAn array of Value Records.\nA Device Table indexes into Item Variation Store.\nAn anchors matrix.\nA base coverage.\nNumber of columns in the matrix.\nA mark coverage.\nA list of mark anchors.\nNumber of rows in the matrix.\nHorizontal value, in design units.\nHorizontal adjustment for advance, in design units — …\nA <code>Device</code> table with horizontal adjustment for advance.\nA <code>Device</code> table with horizontal value.\nHorizontal adjustment for placement, in design units.\nA <code>Device</code> table with horizontal adjustment for placement.\nVertical value, in design units.\nVertical adjustment for advance, in design units — only …\nA <code>Device</code> table with vertical adjustment for advance.\nA <code>Device</code> table with vertical value.\nVertical adjustment for placement, in design units.\nA <code>Device</code> table with vertical adjustment for placement.\nA list of glyphs for Alternate Substitution Subtable.\nA set of <code>AlternateSet</code>.\nA Alternate Substitution Subtable.\nGlyph components for one ligature.\nA <code>Ligature</code> set.\nA list of <code>Ligature</code> sets.\nA Ligature Substitution Subtable.\nA Multiple Substitution Subtable.\nA Reverse Chaining Contextual Single Substitution Subtable.\nA sequence of glyphs for Multiple Substitution Subtable.\nA list of <code>Sequence</code> tables.\nA Single Substitution Subtable.\nA glyph substitution lookup subtable enumeration.\nArray of alternate glyph IDs, in arbitrary order.\nGlyph components for one ligature.\nLigature to substitute.\nA list of substitute glyphs.\nA Glyph Variations Table.\nAn index format used by the Index to Location Table.\nA Font Header Table.\nA bounding box that large enough to enclose any glyph from …\nAn index format used by the Index to Location Table.\nUnits per EM.\nA Horizontal Header Table.\nFace ascender.\nFace descender.\nFace line gap.\nNumber of metrics in the <code>hmtx</code> table.\nHorizontal/Vertical Metrics.\nA Horizontal/Vertical Metrics Table.\nWidth/Height advance for <code>hmtx</code>/<code>vmtx</code>.\nSide bearings for glyph IDs greater than or equal to the …\nA list of metrics indexed by glyph ID.\nSum of long metrics + bearings.\nLeft/Top side bearing for <code>hmtx</code>/<code>vmtx</code>.\nA Horizontal/Vertical Metrics Variations Table.\nA kerning subtable format.\nA kerning pair.\nA kerning subtable.\nA format 0 subtable.\nA format 2 subtable.\nA format 3 subtable.\nA list of subtables.\nAn iterator over kerning subtables.\nA Kerning Table.\nSubtable format.\nIndicates that subtable has a cross-stream values.\nIndicates that subtable uses a state machine.\nIndicates that subtable is for horizontal text.\nGlyphs pair.\nA list of kerning pairs.\nA list of subtables.\nKerning value.\nIndicates that subtable is variable.\nA container of Anchor Points used by <code>Subtable4</code>.\nA state machine entry.\nAn extended kerning subtable format.\nA kerning subtable.\nA format 0 subtable.\nA format 1 subtable.\nA format 2 subtable.\nA format 4 subtable.\nA format 6 subtable.\nA list of extended kerning subtables.\nAn iterator over extended kerning subtables.\nAn Extended Kerning Table.\nAn action index.\nAnchor points.\nSubtable format.\nIndicates that subtable has a cross-stream values.\nIndicates that subtable uses a state machine.\nIndicates that subtable is for horizontal text.\nA list of kerning pairs.\nA state table.\nA state table.\nA list of subtables.\nThe tuple count.\nIndicates that subtable is variable.\nLong offsets.\nShort offsets.\nAn Index to Location Table.\nA Math Constants Table.\nA Glyph Assembly Table.\nA Math Glyph Construction Table.\nA mapping from glyphs to Math Glyph Construction Tables.\nA Math Glyph Info Table.\nDetails for a glyph part in an assembly.\nDescription of math glyph variants.\nA Math Kern Table.\nAn entry in a Math Kern Info Table.\nA Math Kern Info Table.\nA Math Value with optional device corrections.\nA mapping from glyphs to Math Values.\nGlyph part flags.\nA Math Table.\nA Math Variants Table.\nAdvance width/height, in design units, of the variant …\nA general recipe on how to construct a variant with large …\nThe kerning data for the bottom-left corner.\nThe kerning data for the bottom-right corner.\nMath positioning constants.\nDevice corrections for this value.\nLengths of the connectors on the end of the glyph, in font …\nGlyphs which are <em>extended shapes</em>.\nThe full advance of the part, in font design units.\nGlyph ID for the part.\nPer-glyph positioning information.\nConstructions for shapes growing in the horizontal …\nPer-glyph italics correction values.\nThe italics correction of the assembled glyph.\nPer-glyph information for mathematical kerning.\nMinimum overlap of connecting glyphs during glyph …\nPart flags.\nParts the assembly is composed of.\nLengths of the connectors on the start of the glyph, in …\nPer-glyph horizontal positions for attaching mathematical …\nThe kerning data for the top-left corner.\nThe kerning data for the top-right corner.\nThe X or Y value in font design units.\nThe ID of the variant glyph.\nPrepared variants of the glyph with varying advances.\nVariants and assembly recipes for growable glyphs.\nConstructions for shapes growing in the vertical direction.\nA Maximum Profile Table.\nThe total number of glyphs in the face.\nA metamorphosis chain.\nA list of metamorphosis chains.\nAn iterator over metamorphosis chains.\nA contextual subtable state table trailing data.\nA contextual subtable.\nA subtable coverage.\nThe feature table is used to compute the sub-feature flags …\nA contextual subtable state table trailing data.\nAn insertion subtable.\nA ligature subtable.\nA subtable in a metamorphosis chain.\nA subtable kind.\nA list of subtables in a metamorphosis chain.\nAn iterator over a metamorphosis chain subtables.\nAn Extended Glyph Metamorphosis Table.\nA list of metamorphosis chains.\nLigature components.\nA subtable coverage.\nA current index.\nA current insert index.\nDefault chain features.\nComplement of flags for the settings that this feature and …\nFlags for the settings that this feature and setting …\nSubtable feature flags.\nA list of chain features.\nInsertion glyphs.\nThe type of feature.\nA subtable kind.\nLigature actions.\nLigatures.\nA mark index.\nA marked insert index.\nThe feature’s setting (aka selector).\nThe contextual glyph substitution state table.\nA state table.\nA state table.\nA list of chain subtables.\nA Metrics Variations Table.\nA Name Record.\nA list of face names.\nAn iterator over face names.\nA platform ID.\nA Naming Table.\nA platform-specific encoding ID.\nA language ID.\nA raw name data.\nA Name ID.\nA list of names.\nA platform ID.\nA Chained Contextual Lookup Subtable.\nA Chained Sequence Rule.\nA set of <code>ChainedSequenceRule</code>.\nA list of <code>ChainedSequenceRule</code> sets.\nA value of Class Definition Table.\nA Class Definition Table.\nA Contextual Lookup Subtable.\nA Coverage Table.\nA Feature.\nAn index in <code>FeatureList</code>.\nA list of <code>Feature</code> records.\nA Feature Variations Table.\nSimple glyph contexts.\nSimple glyph contexts.\nClass-based glyph contexts.\nClass-based glyph contexts.\nCoverage-based glyph contexts.\nCoverage-based glyph contexts.\nAn index in <code>LanguageSystemList</code>.\nA Language System Table.\nA list of <code>LanguageSystem</code> records.\nA Layout Table.\nA Lookup Table.\nLookup table flags.\nAn index in <code>LookupList</code>.\nA list of <code>Lookup</code> values.\nA trait for parsing Lookup subtables.\nA list of lookup subtables.\nAn iterator over lookup subtables.\nA record that describes a range of glyph IDs.\nA data storage used by <code>ScriptList</code>, <code>LanguageSystemList</code> and …\nA trait to parse item in <code>RecordList</code>.\nAn iterator over <code>RecordList</code> values.\nA Script Table.\nAn index in <code>ScriptList</code>.\nA list of <code>Script</code> records.\nA sequence rule record.\nA sequence rule.\nA set of <code>SequenceRule</code>s.\nA list of <code>SequenceRuleSet</code>s.\nAn index in <code>FeatureVariations</code>.\nContains either glyph IDs or glyph Classes.\nDefault language.\nLast glyph ID in the range\nArray of indices into the FeatureList, in arbitrary order.\nA list of all supported features.\nLookup qualifiers.\nList of supported languages, excluding the default one. …\nContains either glyph IDs or glyph Classes.\nA list of all lookups.\nIndex into GDEF mark glyph sets structure.\nParses raw data.\nParses raw data.\nIndex of a feature required for this language system.\nA list of all supported scripts.\nFirst glyph ID in the range\nAvailable subtables.\nScript tag.\nLanguage tag.\nCoverage Index of first glyph ID in range.\nUsed to substitute an alternate set of lookup tables to …\nArray of glyph IDs. Sorted.\nArray of glyph ranges. Ordered by <code>RangeRecord.start</code>.\nA form that is generally cursive in nature.\nA face that is neither italic not obliqued.\nA typically-sloped version of the regular face.\nFace permissions.\nA script metrics used by subscript and superscript.\nA face style.\nA OS/2 and Windows Metrics Table.\nUnicode Ranges.\nA face weight.\nA face width.\nTable version.\nX offset.\nHorizontal face size.\nY offset.\nVertical face size.\nAn iterator over glyph names.\nA PostScript Table.\nFlag that indicates that the font is monospaced.\nItalic angle in counter-clockwise degrees from the …\nUnderline metrics.\nA strike of glyphs.\nA list of <code>Strike</code>s.\nAn iterator over <code>Strikes</code>.\nA Standard Bitmap Graphics Table.\nThe pixels per EM size for which this strike was designed.\nThe device pixel density (in PPI) for which this strike …\nA list of <code>Strike</code>s.\nAn SVG documents.\nA list of SVG documents.\nAn iterator over <code>SvgDocumentsList</code> values.\nAn SVG Table.\nThe SVG document data.\nA list of SVG documents.\nThe last glyph ID, <em>inclusive</em>, for the range covered by …\nThe first glyph ID for the range covered by this record.\nA Tracking Table.\nA single track.\nA track data.\nA list of tracks.\nAn iterator over <code>Tracks</code>.\nHorizontal track data.\nThe <code>name</code> table index for the track’s name.\nA list of sizes.\nA list of tracks.\nA track value.\nA list of tracking values for each size.\nVertical track data.\nA Vertical Header Table.\nFace ascender.\nFace descender.\nFace line gap.\nNumber of metrics in the <code>vmtx</code> table.\nA Vertical Origin Table.\nVertical origin metrics for the Vertical Origin Table.\nDefault origin.\nGlyph ID.\nA list of metrics for each glyph.\nY coordinate, in the font’s design coordinate system, of …\nA multi-line text editor.\nA weak reference to an <code>Editor</code>.\nThe bounds of the <code>Editor</code>.\nA bunch of text.\nA weak reference to a <code>Paragraph</code>.\nThe horizontal alignment of the <code>Paragraph</code>.\nThe minimum bounds of the <code>Paragraph</code>.\nThe vertical alignment of the <code>Paragraph</code>.\nDifferent offset on each end of the rule, length units. …\nThe theme catalog of a <code>Rule</code>.\nThe item class of the <code>Catalog</code>.\nThe fill mode of a rule.\nFill the whole length of the container.\nUniform offset from each end, length units.\nFill a percent of the length of the container. The rule …\nDisplay a horizontal or vertical rule for dividing content.\nThe appearance of a rule.\nA styling function for a <code>Rule</code>.\nThe color of the rule.\nThe default styling of a <code>Rule</code>.\nThe default class produced by the <code>Catalog</code>.\nReturn the starting offset and length of the rule.\nThe <code>FillMode</code> of the rule.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe radius of the line corners.\nThe <code>Style</code> of a class with the given status.\nThe width (thickness) of the rule line.\nAn action that the iced runtime can perform.\nThe appearance of a program.\nRun a clipboard action.\nThe default style of a <code>Program</code>.\nRun a Dnd action.\nExits the runtime.\nLoad a font from its bytes.\nThe type of <strong>messages</strong> your <code>Program</code> will produce.\nOutput some value.\nRun a platform specific action\nThe core of a user interface application following The Elm …\nThe graphics backend to use to draw the <code>Program</code>.\nRun a system action.\nA set of concurrent actions to be performed by the iced …\nThe theme used to draw the <code>Program</code>.\nA set of interactive graphical elements with a specific …\nRun a widget operation.\nRun a window action.\nThe background <code>iced_core::Color</code> of the application.\nAccess the clipboard.\nThe default <code>Appearance</code> of a <code>Program</code> with the built-in …\nReturns the default style of a <code>Program</code>.\nAccess the clipboard.\nCreates a <code>Task</code> that exits the iced runtime.\nLoad and use fonts.\nThe default icon <code>iced_core::Color</code> of the application.\nTrack keyboard events.\nA multi-window application.\nOverlays for user interfaces.\nPlatform specific actions defined for wayland\nBuild interactive programs using The Elm Architecture.\nAccess the native system.\nCreate runtime tasks.\nThe default text <code>iced_core::Color</code> of the application.\nHandles a <strong>message</strong> and updates the state of the <code>Program</code>.\nImplement your own event loop to drive a user interface.\nReturns the widgets to display in the <code>Program</code>.\nBuild window-based GUI applications.\nThe bytes of the font to load.\nThe channel to send back the load result.\nA clipboard action to be performed by some <code>Task</code>.\nRead the clipboard and produce <code>String</code> with the result.\nRead the clipboard and produce <code>T</code> with the result.\nWrite the given contents to the clipboard.\nWrite the given contents to the clipboard.\nRead the current contents of the clipboard.\nRead the current contents of the clipboard.\nRead the current contents of the primary clipboard.\nRead from the primary clipboard\nWrite the given contents to the clipboard.\nWrite the given contents to the clipboard.\nWrite the given contents to the primary clipboard.\nWrite the given contents to the clipboard.\nThe channel to send the read contents.\nThe contents to be written.\nThe clipboard target.\nThe clipboard target.\nAn action to be performed on the system.\nEnd a Dnd operation.\nPeek the current Dnd operation.\nRegister a Dnd destination.\nSet the action of the Dnd operation.\nEnd a Dnd operation.\nRead the current contents of the Dnd operation.\nRegister a Dnd destination.\nSet the action of the Dnd operation.\nThe rectangles to register.\nThe surface to register.\nAn error while loading a font.\nLoad a font from its bytes.\nA key string that corresponds to the character typed by …\nA keyboard event.\nA key on the keyboard.\nA keyboard key was pressed.\nA keyboard key was released.\nThe left side of the keyboard.\nThe location of a key on the keyboard.\nThe current state of the keyboard modifiers.\nThe keyboard modifiers have changed.\nA key with an established name.\nThe numpad of the keyboard.\nThe right side of the keyboard.\nThe standard group of keys on the keyboard.\nAn unidentified key.\nThe key pressed.\nThe key released.\nThe location of the key.\nThe location of the key.\nThe key pressed with all keyboard modifiers applied, …\nThe key released with all keyboard modifiers applied, …\nThe state of the modifier keys.\nThe state of the modifier keys.\nThe physical key pressed.\nThe physical key released.\nThe text produced by the key press, if any.\nThe type of <strong>messages</strong> your <code>Program</code> will produce.\nThe core of a user interface for a multi-window …\nThe graphics backend to use to draw the <code>Program</code>.\nThe execution state of a multi-window <code>Program</code>. It …\nThe theme used to draw the <code>Program</code>.\nBuild interactive programs using The Elm Architecture.\nThe internal state of a multi-window <code>Program</code>.\nHandles a <strong>message</strong> and updates the state of the <code>Program</code>.\nReturns the widgets to display in the <code>Program</code> for the …\nThe type of <strong>messages</strong> your <code>Program</code> will produce.\nThe core of a user interface for a multi-window …\nThe graphics backend to use to draw the <code>Program</code>.\nThe theme used to draw the <code>Program</code>.\nHandles a <strong>message</strong> and updates the state of the <code>Program</code>.\nReturns the widgets to display in the <code>Program</code> for the …\nThe execution state of a multi-window <code>Program</code>. It …\nAn overlay container that displays nested overlays\nPlatform specific actions defined for wayland\nThe type of <strong>messages</strong> your <code>Program</code> will produce.\nThe core of a user interface application following The Elm …\nThe graphics backend to use to draw the <code>Program</code>.\nThe execution state of a <code>Program</code>. It leverages caching, …\nThe theme used to draw the <code>Program</code>.\nHandles a <strong>message</strong> and updates the state of the <code>Program</code>.\nReturns the widgets to display in the <code>Program</code>.\nAn operation to be performed on the system.\nContains information about the system (e.g. system name, …\nQuery system information and produce <code>T</code> with the result.\nDetailed processor model information\nThe number of physical cores on the processor\nModel information for the active graphics adapter\nUnderlying graphics backend for rendering\nTotal RAM size, in bytes\nMemory used by this process, in bytes\nOperating system kernel version\nThe operating system name\nShort operating system version number\nLong operating system version\nA handle to a <code>Task</code> that can be used for aborting it.\nA set of concurrent actions to be performed by the iced …\nCreates a new <code>Task</code> that executes the <code>Action</code> returned by …\nCreates a new <code>Task</code> that executes the given <code>Action</code> and …\nReturns the underlying <code>Stream</code> of the <code>Task</code>.\nCreates a new <code>Task</code> that executes the <code>Action</code> returned by …\nCreates a new <code>Task</code> that runs the given <code>widget::Operation</code> …\nReusable data of a specific <code>UserInterface</code>.\nThe <code>UserInterface</code> is outdated and needs to be rebuilt.\nThe resulting state after updating a <code>UserInterface</code>.\nThe <code>UserInterface</code> is up-to-date and can be reused without …\nA set of interactive graphical elements with a specific …\nThe <code>window::RedrawRequest</code> when a redraw should be …\nAn operation to be performed on some window.\nChange the window <code>Icon</code>.\nChange the window <code>Level</code>.\nChange the <code>Mode</code> of the window.\nClose the window and exits the application.\nDisable window blur.\nDisable mouse passthrough for the given window.\nMove the window with the left mouse button until the …\nEnable window blur.\nEnables mouse passthrough for the given window.\nBring the window to the front and sets input focus. Has no …\nGets the <code>Id</code> of the latest window.\nGet if the current window is maximized or not.\nGet if the current window is minimized or not.\nGet the current <code>Mode</code> of the window.\nGets the <code>Id</code> of the oldest window.\nGet the current logical coordinates of the window.\nGet the raw identifier unique to the window.\nGet the current scale factor (DPI) of the window.\nGet the current logical dimensions of the window.\nSet the window to maximized or back\nSet the window to minimized or back\nMove the window to the given logical coordinates.\nOpens a new window with some <code>Settings</code>.\nRequest user attention to the window, this has no effect …\nResize the window to the given logical dimensions.\nRuns the closure with the native window handle of the …\nData of a screenshot, captured with <code>window::screenshot()</code>.\nScreenshot the viewport of the window.\nShow the system menu at cursor position.\nToggle whether window has decorations.\nToggle the window to maximized or back\nThe bytes of the <code>Screenshot</code>.\nChanges the <code>Icon</code> of the window.\nChanges the window <code>Level</code>.\nChanges the <code>Mode</code> of the window.\nCloses the window with <code>id</code>.\nSubscribes to all <code>Event::Closed</code> occurrences in the running …\nSubscribes to all <code>Event::CloseRequested</code> occurrences in the …\nDisable the blur effect for a window.\nDisable mouse passthrough for the given window.\nBegins dragging the window while the left mouse button is …\nEnable the blur effect for a window.\nEnables mouse passthrough for the given window.\nSubscribes to all window events of the running application.\nSubscribes to the frames of the window of the running …\nBrings the window to the front and sets input focus. Has …\nGets the window <code>Id</code> of the latest window.\nGets the maximized state of the window with the given <code>Id</code>.\nGets the minimized state of the window with the given <code>Id</code>.\nGets the current <code>Mode</code> of the window.\nGets the window <code>Id</code> of the oldest window.\nGets the position in logical coordinates of the window …\nGets an identifier unique to the window, provided by the …\nGets the scale factor of the window with the given <code>Id</code>.\nGet the window’s size in logical dimensions.\nMaximizes the window.\nMinimizes the window.\nMoves the window to the given logical coordinates.\nOpens a new window with the given <code>Settings</code>; producing the …\nSubscribes to all <code>Event::Opened</code> occurrences in the running …\nRequest user attention to the window. This has no effect …\nResizes the window to the given logical dimensions.\nSubscribes to all <code>Event::Resized</code> occurrences in the …\nRuns the given callback with the native window handle for …\nThe scale factor of the <code>Screenshot</code>. This can be useful …\nTake screenshots of a window.\nCaptures a <code>Screenshot</code> from the window.\nShow the system menu at cursor position.\nThe size of the <code>Screenshot</code> in physical pixels.\nToggles the window decorations.\nToggles the window to maximized or back.\nA raw display handle for Android NDK.\nRaw display handle for Android.\nA raw window handle for Android NDK.\nRaw window handle for Android NDK.\nA raw window handle for AppKit.\nA raw display handle for AppKit.\nRaw display handle for AppKit.\nRaw window handle for AppKit.\nThe handle to the display controller of the windowing …\nA raw window handle for the Linux Kernel Mode Set/Direct …\nA raw display handle for the Linux Kernel Mode Set/Direct …\nRaw display handle for the Linux Kernel Mode Set/Direct …\nRaw window handle for the Linux Kernel Mode Set/Direct …\nA raw window handle for the Linux Generic Buffer Manager.\nA raw display handle for the Linux Generic Buffer Manager.\nRaw display handle for the Linux Generic Buffer Manager.\nRaw window handle for the Linux Generic Buffer Manager.\nA raw window handle for Haiku.\nA raw display handle for Haiku.\nRaw display handle for Haiku.\nRaw window handle for Haiku.\nAn error that can occur while fetching a display or window …\nA display that acts as a wrapper around a display handle.\nDisplay that wraps around a raw display handle.\nWindow that wraps around a raw window handle.\nA handle to a window.\nThe underlying handle cannot be represented using the …\nA raw display handle for OpenHarmony OS NDK\nRaw display handle for OpenHarmony.\nA raw window handle for the OpenHarmony OS NDK\nRaw window handle for Ohos NDK.\nA raw window handle for the Redox operating system.\nA raw display handle for the Redox operating system.\nRaw display handle for the Redox operating system.\nRaw window handle for the Redox operating system.\nA display server handle for a particular windowing system.\nA window handle for a particular windowing system.\nA raw window handle for UIKit (Apple’s non-macOS …\nA raw display handle for UIKit (Apple’s non-macOS …\nRaw display handle for UIKit.\nRaw window handle for UIKit.\nThe underlying handle is not available.\nA raw window handle for Wayland.\nA raw display handle for Wayland.\nRaw display handle for Wayland.\nRaw window handle for Wayland.\nA raw window handle for the Web.\nA raw display handle for the Web.\nA raw window handle for a Web canvas registered via …\nRaw window handle for a Web canvas registered via …\nRaw display handle for the Web.\nA raw window handle for a Web offscreen canvas registered …\nRaw window handle for a Web offscreen canvas registered via\nRaw window handle for the Web.\nA raw window handle for Win32.\nRaw window handle for Win32.\nA raw window handle for WinRT.\nRaw window handle for WinRT.\nThe handle to a window.\nA raw display handle for Win32.\nRaw display handle for Windows.\nA raw window handle for Xcb.\nA raw display handle for Xcb.\nRaw display handle for Xcb.\nRaw window handle for Xcb.\nA raw window handle for Xlib.\nA raw display handle for Xlib.\nRaw display handle for Xlib.\nRaw window handle for Xlib.\nA pointer to an <code>ANativeWindow</code>.\nA pointer to a BDirectWindow object that might be null\nA pointer to a BWindow object\nA pointer to an X server <code>xcb_connection_t</code>.\nA WinRT <code>CoreWindow</code> handle.\nA pointer to an Xlib <code>Display</code>.\nA pointer to a <code>wl_display</code>.\nGet a handle to the display controller of the windowing …\nThe drm file descriptor.\nThe gbm device.\nThe gbm surface.\nThe <code>GWLP_HINSTANCE</code> associated with this type’s <code>HWND</code>.\nA Win32 <code>HWND</code> handle.\nAn ID value inserted into the data attributes of the …\nA pointer to an <code>NSView</code> object.\nA pointer to the <code>JsValue</code> of an <code>HtmlCanvasElement</code>.\nA pointer to the <code>JsValue</code> of an <code>OffscreenCanvas</code>.\nThe primary drm plane handle.\nAn X11 screen to use with this display handle.\nAn X11 screen to use with this display handle.\nA pointer to a <code>wl_surface</code>.\nA pointer to an <code>UIView</code> object.\nA pointer to an <code>UIViewController</code> object, if the view has …\nAn Xlib visual ID, or 0 if unknown.\nAn X11 <code>xcb_visualid_t</code>.\nA pointer to an orbclient window.\nAn Xlib <code>Window</code>.\nAn X11 <code>xcb_window_t</code>.\nGet a handle to the window.\nErrors that can occur when cropping a <code>Screenshot</code>.\nThe cropped region’s size is out of bounds.\nData of a screenshot, captured with <code>window::screenshot()</code>.\nThe cropped region’s size is zero.\nThe bytes of the <code>Screenshot</code>.\nThe scale factor of the <code>Screenshot</code>. This can be useful …\nThe size of the <code>Screenshot</code> in physical pixels.\nThe amount of absolute offset in each direction of a …\nThe <code>Scrollable</code> can be interacted with.\nThe anchor of the scroller of the <code>Scrollable</code> relative to …\nBoth vertical and horizontal scrolling\nThe theme catalog of a <code>Scrollable</code>.\nThe item class of the <code>Catalog</code>.\nThe direction of <code>Scrollable</code>.\nThe <code>Scrollable</code> is being dragged.\nContent is aligned to the end of the <code>Viewport</code>.\nHorizontal scrolling\nThe <code>Scrollable</code> is being hovered.\nThe appearance of the scrollbar of a scrollable.\nThe amount of relative offset in each direction of a …\nA widget that can vertically display an infinite amount of …\nA scrollbar within a <code>Scrollable</code>.\nThe appearance of the scroller of a scrollable.\nScroller is anchoer to the start of the <code>Viewport</code>.\nThe possible status of a <code>Scrollable</code>.\nThe appearance of a scrollable.\nA styling function for a <code>Scrollable</code>.\nVertical scrolling\nThe current <code>Viewport</code> of the <code>Scrollable</code>.\nReturns the <code>AbsoluteOffset</code> of the current <code>Viewport</code>.\nReturns the <code>AbsoluteOffset</code> of the current <code>Viewport</code>, but …\nSets the <code>Anchor</code> of the <code>Scrollbar</code> .\nThe <code>Background</code> of a scrollbar.\nThe <code>Border</code> of a scrollbar.\nThe <code>Border</code> of the scroller.\nReturns the bounds of the current <code>Viewport</code>.\nThe <code>Color</code> of the scroller.\nThe <code>container::Style</code> of a scrollable.\nReturns the content bounds of the current <code>Viewport</code>.\nThe default style of a <code>Scrollable</code>.\nThe default class produced by the <code>Catalog</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe <code>Background</code> of the gap between a horizontal and …\nReturns the horizontal <code>Scrollbar</code>, if any.\nThe horizontal <code>Rail</code> appearance.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSets the scrollbar margin of the <code>Scrollbar</code> .\nCreates new <code>Scrollbar</code> for use in a <code>Scrollable</code>.\nReturns the <code>RelativeOffset</code> of the current <code>Viewport</code>.\nProduces a <code>Task</code> that scrolls the <code>Scrollable</code> with the given …\nProduces a <code>Task</code> that scrolls the <code>Scrollable</code> with the given …\nThe appearance of the <code>Scroller</code> of a scrollbar.\nSets the scroller width of the <code>Scrollbar</code> .\nProduces a <code>Task</code> that snaps the <code>Scrollable</code> with the given <code>Id</code>\nSets whether the <code>Scrollbar</code> should be embedded in the …\nThe <code>Style</code> of a class with the given status.\nReturns the vertical <code>Scrollbar</code>, if any.\nThe vertical <code>Rail</code> appearance.\nSets the scrollbar width of the <code>Scrollbar</code> .\nThe amount of horizontal offset\nThe amount of horizontal offset\nThe amount of vertical offset\nThe amount of vertical offset\nThe properties of the horizontal scrollbar.\nThe properties of the vertical scrollbar.\nIndicates if the horizontal scrollbar is being dragged.\nIndicates if the horizontal scrollbar is being hovered.\nIndicates if the vertical scrollbar is being dragged.\nIndicates if the vertical scrollbar is being hovered.\nThe <code>Slider</code> can be interacted with.\nThe appearance of slider breakpoints.\nThe theme catalog of a <code>Slider</code>.\nA circular handle.\nThe item class of the <code>Catalog</code>.\nThe <code>Slider</code> is being dragged.\nLinear gradient for the background of the rail includes an …\nThe appearance of the handle of a slider.\nThe shape of the handle of a slider.\nThe <code>Slider</code> is being hovered.\nStart and end colors of the rail\nThe appearance of a slider rail\nThe background color of the rail\nA rectangular shape.\nAn horizontal bar and a handle that selects a single value …\nThe possible status of a <code>Slider</code>.\nThe appearance of a slider.\nA styling function for a <code>Slider</code>.\nThe <code>Background</code> of the handle.\nThe backgrounds of the rail of the slider.\nThe border of the rail.\nThe border <code>Color</code> of the handle.\nThe border width of the handle.\nThe appearance of breakpoints.\nThe color of the slider breakpoint.\nThe default style of a <code>Slider</code>.\nThe default class produced by the <code>Catalog</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe appearance of the <code>Handle</code> of the slider.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe colors of the rail of the slider.\nThe shape of the handle.\nThe <code>Style</code> of a class with the given status.\nThe width of the stroke of a slider rail.\nThe border radius of the corners of the rectangle.\nThe height of the rectangle.\nThe radius of the circle.\nThe width of the rectangle.\nLet the widget determin the angle of the gradient\nthe linear gradient of the slider\nThe theme catalog of an <code>Svg</code>.\nThe item class of the <code>Catalog</code>.\nA handle of Svg data.\nThe <code>Svg</code> is being hovered.\nThe <code>Svg</code> is idle.\nThe possible status of an <code>Svg</code>.\nThe appearance of an <code>Svg</code>.\nA styling function for an <code>Svg</code>.\nA vector graphics image.\nThe <code>Color</code> filter of an <code>Svg</code>.\nThe default class produced by the <code>Catalog</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe <code>Style</code> of a class with the given status.\nAn absolute height in logical pixels.\nAdvanced text shaping and font fallback.\nNo shaping and no font fallback.\nBorrowed data.\nThe theme catalog of a <code>Text</code>.\nThe item class of this <code>Catalog</code>.\nA fragment of <code>Text</code>.\nWraps at the glyph level.\nThe output of the <code>Highlighter</code>.\nA type capable of highlighting text.\nA trait for converting a value to some text <code>Fragment</code>.\nThe highlight iterator type.\nThe height of a line of text in a paragraph.\nNo wrapping.\nOwned data.\nA factor of the size of the text.\nA bunch of <code>Rich</code> text.\nThe settings to configure the <code>Highlighter</code>.\nThe shaping strategy of some text.\nA span of text.\nThe internal state of a <code>Text</code> widget.\nThe appearance of some text.\nA styling function for a <code>Text</code>.\nA bunch of text.\nWraps at the word level.\nWraps at the word level, or fallback to glyph level if a …\nThe wrapping strategy of some text.\nSets the <code>alignment::Horizontal</code> of the <code>Rich</code> text.\nSets the <code>alignment::Vertical</code> of the <code>Rich</code> text.\nText with the default base color.\nCenters the <code>Rich</code> text, both horizontally and vertically.\nNotifies the <code>Highlighter</code> that the line at the given index …\nSets the default style class of the <code>Rich</code> text.\nSets the default <code>Color</code> of the <code>Rich</code> text.\nThe <code>Color</code> of the <code>Span</code>.\nThe <code>Color</code> of the text.\nSets the default <code>Color</code> of the <code>Rich</code> text, if <code>Some</code>.\nReturns the current line of the <code>Highlighter</code>.\nText conveying some negative information, like an error.\nThe default text styling; color is inherited.\nThe default class produced by this <code>Catalog</code>.\nDraws text using the same logic as the <code>Text</code> widget.\nSets the default font of the <code>Rich</code> text.\nThe font of the <code>Span</code>.\nReturns the argument unchanged.\nSets the height of the <code>Rich</code> text boundaries.\nThe <code>Highlight</code> of the <code>Span</code>.\nHighlights the given line.\nCalls <code>U::from(self)</code>.\nConverts the value to some text <code>Fragment</code>.\nProduces the <code>layout::Node</code> of a <code>Text</code> widget.\nSets the default <code>LineHeight</code> of the <code>Rich</code> text.\nThe <code>LineHeight</code> of the <code>Span</code>.\nThe link of the <code>Span</code>.\nCreates a new <code>Highlighter</code> from its <code>Self::Settings</code>.\nCreates a new empty <code>Rich</code> text.\nThe <code>Padding</code> of the <code>Span</code>.\nText conveying some important information, like an action.\nText conveying some secondary information, like a footnote.\nSets the default size of the <code>Rich</code> text.\nThe size of the <code>Span</code> in <code>Pixels</code>.\nWhether the <code>Span</code> should be struck through or not.\nThe <code>Style</code> of a class with the given status.\nSets the default style of the <code>Rich</code> text.\nText conveying some positive information, like a …\nThe <code>Fragment</code> of text.\nWhether the <code>Span</code> should be underlined or not.\nUpdates the <code>Highlighter</code> with some new <code>Self::Settings</code>.\nSets the width of the <code>Rich</code> text boundaries.\nCreates a new <code>Rich</code> text with the given text spans.\nSets the <code>Wrapping</code> strategy of the <code>Rich</code> text.\nAn interaction with an <code>Editor</code>.\nThe <code>TextEditor</code> can be interacted with.\nDelete the previous character.\nDelete the previous character.\nA binding to an action in the <code>TextEditor</code>.\nThe theme catalog of a <code>TextEditor</code>.\nThe item class of the <code>Catalog</code>.\nClick the <code>Editor</code> at the given <code>Point</code>.\nThe content of a <code>TextEditor</code>.\nCopy the selection of the <code>TextEditor</code>.\nProduce the given message.\nCut the selection of the <code>TextEditor</code>.\nDelete the next character.\nDelete the next character.\nThe <code>TextEditor</code> cannot be interacted with.\nMove to the end of the text.\nMove to the start of the text.\nMove down.\nDrag the mouse on the <code>Editor</code> to the given <code>Point</code>.\nAn action that edits text.\nPerform an <code>Edit</code>.\nMove to the end of the line.\nBreak the current line.\nBreak the current line.\nThe <code>TextEditor</code> is focused.\nMove to the start of the line.\nThe <code>TextEditor</code> is being hovered.\nInsert the given character.\nInsert the given character.\nA key press.\nMove left.\nA cursor movement.\nApply a <code>Motion</code>.\nApply a <code>Motion</code>.\nMove to the start of the next window.\nMove to the start of the previous window.\nPaste the given text.\nPaste the clipboard contents in the <code>TextEditor</code>.\nMove right.\nScroll the <code>Editor</code> a certain amount of lines.\nSelect text with a given <code>Motion</code>.\nSelect text with a given <code>Motion</code>.\nSelect the entire buffer.\nSelect the entire buffer.\nSelect the line at the current cursor.\nSelect the line at the current cursor.\nSelect the word at the current cursor.\nSelect the word at the current cursor.\nA sequence of bindings to execute.\nThe state of a <code>TextEditor</code>.\nThe possible status of a <code>TextEditor</code>.\nThe appearance of a text input.\nA styling function for a <code>TextEditor</code>.\nA multi-line text input.\nUnfocus the <code>TextEditor</code>.\nMove up.\nMove to the left boundary of a word.\nMove to the right boundary of a word.\nThe <code>Background</code> of the text input.\nThe <code>Border</code> of the text input.\nReturns the current cursor position of the <code>Content</code>.\nThe default style of a <code>TextEditor</code>.\nThe default class produced by the <code>Catalog</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the default <code>Binding</code> for the given key press.\nThe <code>Color</code> of the icon of the text input.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns whether the <code>TextEditor</code> is currently focused or not.\nThe key pressed.\nReturns the text of the line at the given index, if it …\nReturns the amount of lines of the <code>Content</code>.\nReturns an iterator of the text of the lines in the <code>Content</code>…\nThe state of the keyboard modifiers.\nCreates an empty <code>Content</code>.\nPerforms an <code>Action</code> on the <code>Content</code>.\nThe <code>Color</code> of the placeholder of the text input.\nReturns the selected text of the <code>Content</code>.\nThe <code>Color</code> of the selection of the text input.\nThe current <code>Status</code> of the <code>TextEditor</code>.\nThe <code>Style</code> of a class with the given status.\nReturns the text of the <code>Content</code>.\nThe text produced by the key press.\nThe <code>Color</code> of the value of the text input.\nCreates a <code>Content</code> with the given text.\nThe amount of lines to scroll.\nThe <code>TextInput</code> can be interacted with.\nThe theme catalog of a <code>TextInput</code>.\nThe item class of the <code>Catalog</code>.\nThe cursor of a text input.\nThe default <code>Padding</code> of a <code>TextInput</code>.\nThe <code>TextInput</code> cannot be interacted with.\nThe <code>TextInput</code> is focused.\nThe <code>TextInput</code> is being hovered.\nThe content of the <code>Icon</code>.\nThe identifier of a <code>TextInput</code>.\nThe left side of a <code>TextInput</code>.\nThe right side of a <code>TextInput</code>.\nThe side of a <code>TextInput</code>.\nThe state of a <code>TextInput</code>.\nThe possible status of a <code>TextInput</code>.\nThe appearance of a text input.\nA styling function for a <code>TextInput</code>.\nA field that can be filled with text.\nThe value of a <code>TextInput</code>.\nThe <code>Background</code> of the text input.\nThe <code>Border</code> of the text input.\nThe unicode code point that will be used as the icon.\nTrack the cursor of a text input.\nReturns the <code>Cursor</code> of the <code>TextInput</code>.\nThe default style of a <code>TextInput</code>.\nThe default class produced by the <code>Catalog</code>.\nProduces a <code>Task</code> that focuses the <code>TextInput</code> with the given …\nFocuses the <code>TextInput</code>.\nThe font that will be used to display the <code>code_point</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe <code>Color</code> of the icon of the text input.\nInserts a new <code>char</code> at the given grapheme <code>index</code>.\nInserts a bunch of graphemes at the given grapheme <code>index</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns whether the <code>Value</code> is empty or not.\nReturns whether the <code>TextInput</code> is currently focused or not.\nReturns the total amount of graphemes in the <code>Value</code>.\nProduces a <code>Task</code> that moves the cursor of the <code>TextInput</code> …\nMoves the <code>Cursor</code> of the <code>TextInput</code> to an arbitrary location.\nProduces a <code>Task</code> that moves the cursor of the <code>TextInput</code> …\nMoves the <code>Cursor</code> of the <code>TextInput</code> to the end of the input …\nProduces a <code>Task</code> that moves the cursor of the <code>TextInput</code> …\nMoves the <code>Cursor</code> of the <code>TextInput</code> to the front of the …\nCreates a new <code>Value</code> from a string slice.\nCreates a custom <code>Id</code>.\nCreates a new <code>State</code>, representing an unfocused <code>TextInput</code>.\nReturns the position of the next end of a word from the …\nThe <code>Color</code> of the placeholder of the text input.\nReturns the position of the previous start of a word from …\nRemoves the grapheme at the given <code>index</code>.\nRemoves the graphemes from <code>start</code> to <code>end</code>.\nReturns a new <code>Value</code> with all its graphemes replaced with …\nReturns a new <code>Value</code> containing the graphemes from <code>start</code> …\nProduces a <code>Task</code> that selects all the content of the …\nSelects all the content of the <code>TextInput</code>.\nReturns the current selection of the <code>Cursor</code> for the given …\nThe <code>Color</code> of the selection of the text input.\nThe side of a <code>TextInput</code> where to display the <code>Icon</code>.\nThe font size of the content.\nThe spacing between the <code>Icon</code> and the text in a <code>TextInput</code>.\nReturns the <code>State</code> of the <code>Cursor</code>.\nThe <code>Style</code> of a class with the given status.\nUnfocuses the <code>TextInput</code>.\nCreates a unique <code>Id</code>.\nReturns a new <code>Value</code> containing the graphemes until the …\nThe <code>Color</code> of the value of the text input.\nThe cursor of a text input.\nCursor without a selection\nCursor selecting a range of text\nThe state of a <code>Cursor</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe end of the selection\nThe start of the selection\nThe <code>Toggler</code> can be interacted with.\nThe theme catalog of a <code>Toggler</code>.\nThe item class of the <code>Catalog</code>.\nThe <code>Toggler</code> is disabled.\nThe <code>Toggler</code> is being hovered.\nThe possible status of a <code>Toggler</code>.\nThe appearance of a toggler.\nA styling function for a <code>Toggler</code>.\nA toggler widget.\nThe background <code>Color</code> of the toggler.\nThe <code>Color</code> of the background border of the toggler.\nThe width of the background border of the toggler.\nThe border radius of the toggler.\nThe default style of a <code>Toggler</code>.\nThe default class produced by the <code>Catalog</code>.\nThe foreground <code>Color</code> of the toggler.\nThe <code>Color</code> of the foreground border of the toggler.\nThe width of the foreground border of the toggler.\nReturns the argument unchanged.\nReturns the argument unchanged.\nthe space between the handle and the border of the toggler\nthe radius of the handle of the toggler\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe <code>Style</code> of a class with the given status.\nIndicates whether the <code>Toggler</code> is toggled.\nIndicates whether the <code>Toggler</code> is toggled.\nThe tooltip will appear on the bottom of the widget.\nThe tooltip will follow the cursor.\nThe tooltip will appear on the left of the widget.\nThe position of the tooltip. Defaults to following the …\nThe tooltip will appear on the right of the widget.\nAn element to display a widget over another.\nThe tooltip will appear on the top of the widget.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe <code>Slider</code> can be interacted with.\nThe theme catalog of a <code>Slider</code>.\nA circular handle.\nThe item class of the <code>Catalog</code>.\nThe <code>Slider</code> is being dragged.\nLinear gradient for the background of the rail includes an …\nThe appearance of the handle of a slider.\nThe shape of the handle of a slider.\nThe <code>Slider</code> is being hovered.\nStart and end colors of the rail\nThe background color of the rail\nA rectangular shape.\nThe possible status of a <code>Slider</code>.\nThe appearance of a slider.\nA styling function for a <code>Slider</code>.\nAn vertical bar and a handle that selects a single value …\nThe <code>Background</code> of the handle.\nThe border <code>Color</code> of the handle.\nThe border width of the handle.\nThe appearance of breakpoints.\nThe default style of a <code>Slider</code>.\nThe default class produced by the <code>Catalog</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe appearance of the <code>Handle</code> of the slider.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe colors of the rail of the slider.\nThe shape of the handle.\nThe <code>Style</code> of a class with the given status.\nChanges the <code>HandleShape</code> of the <code>Style</code> to a circle with the …\nThe border radius of the corners of the rectangle.\nThe height of the rectangle.\nThe radius of the circle.\nThe width of the rectangle.\nLet the widget determin the angle of the gradient\nthe linear gradient of the slider\nA buffer for short-term storage and transfer within and …\nAn error that occurred while running an application.\nThe <code>Executor</code> that will run commands and subscriptions.\nThe futures executor could not be created.\nThe data needed to initialize your <code>Program</code>.\nThe application graphics context could not be created.\nThe type of <strong>messages</strong> your <code>Program</code> will produce.\nAn interactive, native, cross-platform, multi-windowed …\nAn event loop proxy with backpressure that implements <code>Sink</code>.\nThe graphics backend to use to draw the <code>Program</code>.\nThe settings of an application.\nThe theme used to draw the <code>Program</code>.\nThe application window could not be created.\nAccess the clipboard.\nConvert <code>winit</code> types into <code>iced_runtime</code> types, and viceversa.\nThe fonts to load on boot.\nFrees an amount of slots for additional messages to be …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe identifier of the application.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether the application should exit when no windows are …\nInitializes the <code>Program</code> with the flags provided to <code>run</code> as …\nCreates a new <code>Proxy</code> from an <code>EventLoopProxy</code>.\nWayland specific shell\nCreate interactive, native cross-platform applications for …\nReads the current content of the <code>Clipboard</code> as text.\nReturns the scale factor of the window of the <code>Program</code>.\nSends a value to the event loop.\nSends an action to the event loop.\nConfigure your application.\nReturns the <code>Style</code> variation of the <code>Theme</code>.\nReturns the event <code>Subscription</code> for the current state of the\nReturns the current <code>Theme</code> of the <code>Program</code>.\nReturns the current title of the <code>Program</code>.\nCreates a new <code>Clipboard</code> that isn’t associated with a …\nHandles a <strong>message</strong> and updates the state of the <code>Program</code>.\nReturns the widgets to display in the <code>Program</code> for the …\nReturns the identifier of the window used to create the …\nWrites the given text contents to the <code>Clipboard</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA buffer for short-term storage and transfer within and …\nConverts a physical cursor position to a logical <code>Point</code>.\nConverts a <code>window::Mode</code> to a <code>winit</code> fullscreen mode.\nConverts some <code>window::Icon</code> into it’s <code>winit</code> counterpart.\nConverts a <code>Key</code> from <code>winit</code> to an <code>iced</code> key.\nConverts a <code>KeyCode</code> from <code>winit</code> to an <code>iced</code> key code.\nConverts a <code>winit</code> fullscreen mode to a <code>window::Mode</code>.\nConverts some <code>ModifiersState</code> from <code>winit</code> to an <code>iced</code> …\nConverts a <code>MouseButton</code> from <code>winit</code> to an <code>iced</code> mouse button.\nConverts a <code>mouse::Interaction</code> to a <code>winit</code> cursor icon.\nConverts a <code>NativeKeyCode</code> from <code>winit</code> to an <code>iced</code> native key …\nConverts a <code>PhysicalKey</code> from <code>winit</code> to an <code>iced</code> physical key.\nConverts a <code>window::Position</code> to a <code>winit</code> logical position …\nConverts a <code>Touch</code> from <code>winit</code> to an <code>iced</code> touch event.\nConverts some <code>UserAttention</code> into it’s <code>winit</code> counterpart.\nConverts a <code>window::Mode</code> to a visibility flag.\nConverts some <code>window::Settings</code> into some <code>WindowAttributes</code> …\nConverts a winit window event into an iced event.\nConverts a <code>window::Level</code> to a <code>winit</code> window level.\nAn antialiasing strategy.\nAn error occurred in the context’s internal backend\nA simple cache that stores generated values to avoid …\nSome cached text.\nA graphics compositor that can draw to windows.\nAn editor.\nAn error that occurred while creating an application’s …\nA fill which linearly interpolates colors along a …\nA mesh with a gradient.\nA suitable graphics adapter or device could not be found.\nA raster or vector image.\nA layer of graphical primitives.\nA linear gradient interpolates colors along a direction …\nMultiple errors occurred\nMultisample AA with 16 samples\nMultisample AA with 2 samples\nMultisample AA with 4 samples\nMultisample AA with 8 samples\nA low-level primitive to render a mesh of triangles.\nFailed to find any pixel format that matches the criteria.\nA paragraph.\nA raster image.\nSome raw text.\nThe iced renderer of the backend.\nThe settings of a renderer.\nA mesh with a solid color.\nThe surface of the backend.\nA text primitive.\nA vector image.\nThe requested backend version is not supported.\nA viewing region for displaying computer graphics.\nThe antialiasing strategy that will be used for triangle …\nReturns the bounds of the <code>Image</code>.\nCache computations and efficiently reuse them.\nClears the <code>Cache</code>.\nReturns the clip bounds of the <code>Mesh</code>.\nManage colors for shaders.\nA compositor is responsible for initializing a renderer …\nConfigures a new <code>Surface</code> with the given dimensions.\nCreates a <code>Self::Renderer</code> for the <code>Compositor</code>.\nCrates a new <code>Surface</code> for the given window.\nCompute the damage between frames.\nThe default <code>Font</code> to use.\nThe default size of text.\nSee what can go wrong when creating graphical backends.\nReturns <code>Information</code> used by this <code>Compositor</code>.\nFlushes and settles any pending group of primitives in the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nBuild and draw geometry.\nA gradient that can be used as a fill for some geometry.\nReturns the <code>Group</code> of the <code>Cache</code>.\nLoad and operate on images.\nReturns the indices of the <code>Mesh</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDraw and stack layers of graphical primitives.\nLoads a font from its bytes.\nReturns the logical size of the <code>Viewport</code>.\nDraw triangles!\nCreates a new empty <code>Cache</code>.\nCreates a new <code>Compositor</code>.\nPacks the <code>Gradient</code> for use in shader code.\nReturns the physical height of the <code>Viewport</code>.\nReturns the physical size of the <code>Viewport</code>.\nReturns the physical width of the <code>Viewport</code>.\nPresents the <code>Renderer</code> primitives to the next frame of the …\nReturns the projection transformation of the <code>Viewport</code>.\nPuts the given value in the <code>Cache</code>.\nClears all the layers contents and resets its bounds.\nResizes the <code>Layer</code> to the given bounds.\nReturns the amount of samples of the <code>Antialiasing</code>.\nReturns the scale factor of the <code>Viewport</code>.\nScreenshots the current <code>Renderer</code> primitives to an …\nReturns a reference cell to the internal <code>State</code> of the <code>Cache</code>…\nDraw text.\nReturns the <code>Transformation</code> of the <code>Mesh</code>.\nReturns the visible bounds of the <code>Text</code>.\nCreates a new <code>Compositor</code> with a backend preference.\nCreates a new <code>Layer</code> with the given bounds.\nCreates a new empty <code>Cache</code> with the given <code>Group</code>.\nCreates a new <code>Viewport</code> with the given logical dimensions …\nCreates a new <code>Viewport</code> with the given physical dimensions …\nThe name of the backend where the error happened\nThe reason why this backend could not be used\nThe bounds of the image.\nThe bounds of the image.\nThe image handle\nThe handle of a vector image.\nThe vertices and indices of the mesh.\nThe vertices and indices of the mesh.\nThe clip bounds of the <code>Mesh</code>.\nThe clip bounds of the <code>Mesh</code>.\nThe <code>Transformation</code> for the vertices of the <code>Mesh</code>.\nThe <code>Transformation</code> for the vertices of the <code>Mesh</code>.\nThe bounds of the text.\nThe clip bounds of the text.\nThe color of the text.\nThe contents of the text.\nThe font of the text.\nThe horizontal alignment of the text.\nThe line height of the text.\nThe shaping strategy of the text.\nThe size of the text in logical pixels.\nThe vertical alignment of the text.\nA simple cache that stores generated values to avoid …\nThe type of cache produced.\nA piece of data that can be cached.\nThe <code>Cache</code> is empty.\nThe <code>Cache</code> is filled.\nA cache group.\nThe state of a <code>Cache</code>.\nCaches this value, producing its corresponding <code>Cache</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if the <code>Group</code> can only ever have a single <code>Cache</code>…\nLoads the <code>Cache</code> into a proper instance.\nGenerates a new unique cache <code>Group</code>.\nThe current value of the <code>Cache</code>\nThe previous value of the <code>Cache</code>.\nA flag that indicates whether the renderer should perform …\nA color packed as 4 floats representing RGBA channels.\nReturns the internal components of the <code>Packed</code> color.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nPacks a <code>Color</code>.\nA graphics compositor that can draw to windows.\nThe compositor of the renderer.\nDefines the default compositor of a renderer.\nContains information about the graphics (e.g. graphics …\nInvalid dimensions\nThe swap chain has been lost and needs to be recreated.\nPresent Error\nThere is no more memory left to allocate a new frame.\nThe underlying surface has changed, and therefore the …\nPresent Error\nThe iced renderer of the backend.\nResize Error\nThe surface of the backend.\nResult of an unsuccessful call to <code>Compositor::present</code>.\nA timeout was encountered while trying to acquire the next …\nA window that can be used in a <code>Compositor</code>.\nContains the graphics adapter.\nContains the graphics backend.\nConfigures a new <code>Surface</code> with the given dimensions.\nCreates a <code>Self::Renderer</code> for the <code>Compositor</code>.\nCrates a new <code>Surface</code> for the given window.\nReturns <code>Information</code> used by this <code>Compositor</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLoads a font from its bytes.\nCreates a new <code>Compositor</code>.\nPresents the <code>Renderer</code> primitives to the next frame of the …\nScreenshots the current <code>Renderer</code> primitives to an …\nCreates a new <code>Compositor</code> with a backend preference.\nAn Accesskit event for a specific Accesskit Node in an …\nA list with all the defined themes.\nAlignment on the axis of a container.\nThe black color.\nThe background of some element.\nA border.\nThe built-in Catppuccin Frappé variant.\nThe built-in Catppuccin Latte variant.\nThe built-in Catppuccin Macchiato variant.\nThe built-in Catppuccin Mocha variant.\nAlign at the center of the axis.\nA buffer for short-term storage and transfer within and …\nA color in the <code>sRGB</code> color space.\nA solid color.\nScale as big as it can be without needing to crop or hide …\nThe strategy used to fit the contents of a widget to its …\nScale the image to cover all of the bounding box, cropping …\nA <code>Theme</code> that uses a <code>Custom</code> palette.\nA non-monospaced sans-serif font with normal <code>Weight</code>.\nThe built-in dark variant.\nDegrees\nA DnD event.\nThe built-in Dracula variant.\nA generic <code>Widget</code>.\nAlign at the end of the axis.\nA user interface event.\nThe built-in Ferra variant:\nDistort the image so the widget is 100% covered without …\nFill all the remaining space\nFill a portion of the remaining space relative to other …\nFill a fixed amount of space\nThe element will float while rotating. The layout will be …\nA font.\nA fill which transitions colors progressively along a …\nLinearly interpolate between several colors.\nThe built-in Gruvbox Dark variant.\nThe built-in Gruvbox Light variant.\nThe hasher used to compare layouts.\nA <code>Transformation</code> that preserves whatever is transformed.\nA rectangle starting at <code>Point::ORIGIN</code> with infinite width …\nA <code>Size</code> with infinite width and height.\nA raster image that can be drawn.\nThe built-in Kanagawa Dragon variant.\nThe built-in Kanagawa Lotus variant.\nThe built-in Kanagawa Wave variant.\nA keyboard event\nThe bounds of a <code>Node</code> and its children, using absolute …\nThe strategy used to fill space in a specific dimension.\nThe built-in light variant.\nA linear gradient interpolates colors along a direction at …\nA monospaced font with normal <code>Weight</code>.\nThe built-in Moonfly variant.\nA mouse event\nThe built-in Nightfly variant.\nDon’t resize or scale the image at all.\nThe built-in Nord variant.\nThe origin (i.e. a <code>Point</code> at (0, 0)).\nAn interactive component that can be displayed on top of …\nThe built-in Oxocarbon variant.\nThe amount of radians in half a circle.\nAn amount of space to pad for each side of a box\nAn amount of logical pixels.\nPlatform specific events\nA 2D point.\nThe range of degrees of a circle.\nThe range of radians of a circle.\nRadians\nAn axis-aligned rectangle.\nA component that can be used by widgets to draw themselves …\nThe strategy used to rotate the content.\nScale the image down if it’s too big for the space, but …\nA shadow.\nA connection to the state of a shell.\nFill the least amount of space\nAn amount of space in 2 dimensions.\nA <code>SmolStr</code> is a string type that has the following …\nThe built-in Solarized Dark variant.\nThe built-in Solarized Light variant.\nThe element will be solid while rotating. The layout will …\nAlign at the start of the axis.\nA raster image that can be drawn.\nA color with no opacity.\nA paragraph.\nA built-in theme.\nThe built-in Tokyo Night variant.\nThe built-in Tokyo Night Light variant.\nThe built-in Tokyo Night Storm variant.\nA touch event\nA 2D transformation matrix.\nA <code>Size</code> with a width and height of 1 unit.\nA 2D vector.\nThe white color.\nA component that displays information and allows …\nA window event\nPadding of zero\nZero pixels.\nA <code>Size</code> with zero width and height.\nThe zero <code>Vector</code>.\nTransparency, 0.0 - 1.0\nget the a11y nodes for the widget and its children\nAlign and position widgets.\nApplies the <code>Rotation</code> to the given <code>Size</code>, returning the …\nReturns whether the widgets of the current application …\nReturns the area of the <code>Rectangle</code>.\nReturns a reference to the <code>Widget</code> of the <code>Element</code>,\nReturns a mutable reference to the <code>Widget</code> of the <code>Element</code>,\nBlue component, 0.0 - 1.0\nThe blur radius of the shadow.\nDraw lines around containers.\nSets the border radius of the <code>Svg</code>\nThe border radii of the image\nThe border radius for the svg\nSets the <code>bottom</code> of the <code>Padding</code>.\nBottom padding\nReturns the bounds of the <code>Layout</code>.\nThe bounds of the paragraph.\nReturns the <code>Point</code> at the center of the <code>Rectangle</code>.\nReturns the X coordinate of the <code>Point</code> at the center of the …\nReturns the Y coordinate of the <code>Point</code> at the center of the …\nReturns the state <code>Tree</code> of the children of the <code>Widget</code>.\nReturns an iterator over the <code>Layout</code> of the children of a …\nClears all of the recorded primitives in the <code>Renderer</code>.\nAccess the clipboard.\nSets the <code>Color</code> of the <code>Border</code>.\nSets the <code>Color</code> filter of the <code>Svg</code>.\nThe color of the border.\nThe <code>Color</code> filter to be applied to the <code>Svg</code>.\nThe color of the shadow.\nCreates a <code>Color</code> with shorter and cleaner syntax.\nReturns true if the given <code>Point</code> is contained in the …\nReturns true if the given <code>Point</code> is contained in the …\nThe content of the paragraph.\nCreates a new custom <code>Theme</code> from the given <code>Palette</code>.\nCreates a new custom <code>Theme</code> from the given <code>Palette</code>, with a …\nReturns the angle of the <code>Rotation</code> in <code>Degrees</code>.\nReconciliates the <code>Widget</code> with the provided <code>Tree</code>.\nComputes the distance to another <code>Point</code>.\nAdds the drag destination rectangles of the widget. Runs …\nDraws the <code>Overlay</code> using the associated <code>Renderer</code>.\nDraws the <code>Widget</code> using the associated <code>Renderer</code>.\nAdapts the <code>Length</code> so it can contain the other <code>Length</code> and …\nEnds a DnD operation.\nEnds recording a new layer.\nEnds recording a new layer.\nHandle events of a user interface.\nExpands the <code>Rectangle</code> a given amount.\nExpands this <code>Size</code> by the given amount.\nMarks the <code>Element</code> as <em>to-be-explained</em>.\nReturns the <code>palette::Extended</code> of the <code>Theme</code>.\nThe <code>Family</code> of the <code>Font</code>.\nReturns the <em>fill factor</em> of the <code>Length</code>.\nFills a <code>Quad</code> with the provided <code>Background</code>.\nSets the filter method of the <code>Image</code>.\nThe filter method of the image.\nFits the <code>Padding</code> between the provided <code>inner</code> and <code>outer</code> <code>Size</code>.\nAttempt to apply the given fit for a content size within …\nReturns the “fluid” variant of the <code>Length</code>.\nLoad and use fonts.\nThe font of the <code>Text</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\n[top, rght, bottom, left]\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a <code>Color</code> from its linear RGBA components.\nCreates a <code>Color</code> from its RGB components.\nCreates a <code>Color</code> from its RGB8 components.\nCreates a <code>Color</code> from its RGBA components.\nCreates a <code>Color</code> from its RGB8 components and an alpha …\nGreen component, 0.0 - 1.0\nColors that transition progressively.\nThe handle of the image.\nThe handle of the <code>Svg</code>.\nHeight of the rectangle.\nThe height.\nReturns the total amount of horizontal <code>Padding</code>.\nThe horizontal alignment of the <code>Text</code>.\nWidget and Window IDs.\nReturns the id of the widget\nLoad and draw raster graphics.\nComputes the intersection with the given <code>Rectangle</code>.\nReturns whether the <code>Rectangle</code> intersects with the given …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConverts the <code>Color</code> into its linear values.\nConverts the <code>Color</code> into its RGBA8 equivalent.\nInvalidates the current application layout.\nInvalidates the current application widgets.\nReturns the inverted <code>Color</code>.\nInverts the <code>Color</code> in-place.\nReturns true if the <code>Shell</code> contains no published messages\nReturns <code>true</code> iff the <code>Length</code> is either <code>Length::Fill</code> or\nReturns whether the current layout is invalid or not.\nReturns true if the cursor is over the <code>Overlay</code>.\nReturns true if the current <code>Rectangle</code> is completely within …\nReturns true if the current <code>Rectangle</code> is completely within …\nListen to keyboard events.\nPosition your widgets properly.\nReturns the layout <code>Node</code> of the <code>Overlay</code>.\nReturns the <code>layout::Node</code> of the <code>Widget</code>.\nSets the <code>left</code> of the <code>Padding</code>.\nLeft padding\nThe line height of the <code>Text</code>.\nApplies a transformation to the produced message of the …\nReturns the maximum of each component of this size and …\nMerges the current <code>Shell</code> with another one by applying the …\nReturns the minimum of each component of this size and …\nHandle mouse events.\nReturns the current <code>mouse::Interaction</code> of the <code>Overlay</code>.\nReturns the current <code>mouse::Interaction</code> of the <code>Widget</code>.\nCreates a new <code>Element</code> containing the given <code>Widget</code>.\nCreates a new <code>Image</code> with the given handle.\nCreates a new <code>Layout</code> for the given <code>Node</code> at the origin.\nCreate a <code>Padding</code> that is equal on all sides.\nCreates a new <code>Svg</code> with the given handle.\nCreates a new <code>Color</code>.\nCreates a new <code>Point</code> with the given coordinates.\nCreates a new <code>Rectangle</code> with its top-left corner in the …\nCreates a new <code>Shell</code> with the provided buffer of messages.\nCreates a new  <code>Size</code> with the given width and height.\nCreates a new <code>Vector</code> with the given components.\nThe offset of the shadow.\nProcesses a runtime <code>Event</code>.\nProcesses a runtime <code>Event</code>.\nSets the opacity of the <code>Image</code>.\nSets the opacity of the <code>Svg</code>.\nThe opacity of the image.\nThe opacity of the <code>Svg</code>.\nApplies an <code>crate::widget::Operation</code> to the <code>Overlay</code>.\nApplies an <code>Operation</code> to the <code>Widget</code>.\nCreates an orthographic projection.\nDisplay interactive elements on top of other widgets.\nReturns the nested overlay of the <code>Overlay</code>, if there is any.\nReturns the overlay of the <code>Widget</code>, if there is any.\nSpace stuff around the perimeter.\nReturns the <code>Palette</code> of the <code>Theme</code>.\nParses a <code>Color</code> from a hex string.\nConsider using <code>peek_dnd</code> instead Peeks the data on the DnD …\nReturns the position of the <code>Layout</code>.\nReturns the position of the top left corner of the …\nPublish the given <code>Message</code> for an application to process it.\nRed component, 0.0 - 1.0\nReturns the angle of the <code>Rotation</code> in <code>Radians</code>.\nReturns a mutable reference to the angle of the <code>Rotation</code> …\nThe <code>Radius</code> of the border.\nReads the current content of the <code>Clipboard</code> as text.\nConsider using <code>read_data</code> instead Reads the current content …\nReturns the request a redraw should happen, if any.\nStarts a DnD operation.\nWrite your own renderer.\nRequest window size\nRequests a new frame to be drawn.\nTriggers the given function if the layout is invalid, …\nSets the <code>right</code> of the <code>Padding</code>.\nRight padding\nRotates the <code>Rectangle</code> and returns the smallest <code>Rectangle</code> …\nRotates the given <code>Size</code> and returns the minimum <code>Size</code> …\nSets the rotation of the <code>Image</code>.\nSets the rotation of the <code>Svg</code>.\nThe rotation to be applied to the image; on its center.\nThe rotation to be applied to the image; on its center.\nSets the <code>Radius</code> of the <code>Border</code>.\nCreates a uniform scaling transformation.\nScales the alpha channel of the <code>Gradient</code> by the given …\nScales the alpha channel of the <code>Background</code> by the given …\nScales the alpha channel of the <code>Color</code> by the given factor.\nReturns the scale factor of the <code>Transformation</code>.\nSet the final action for the DnD operation. Only should be …\nSets the id of the widget This may be called while diffing …\nThe <code>Shaping</code> strategy of the <code>Text</code>.\nShrinks the <code>Rectangle</code> a given amount.\nReturns the <code>Size</code> of the <code>Widget</code> in lengths.\nReturns the <code>Size</code> of the <code>Rectangle</code>.\nThe size of the <code>Text</code> in logical pixels.\nReturns a <code>Size</code> hint for laying out the <code>Widget</code>.\nSets whether the <code>Image</code> should be snapped to the pixel grid.\nSnaps the <code>Rectangle</code> to <strong>unsigned</strong> integer coordinates.\nIf set to <code>true</code>, the image will be snapped to the pixel …\nRegisters Dnd destinations\nStarts recording a new layer.\nStarts recording with a new <code>Transformation</code>.\nReturns the <code>State</code> of the <code>Widget</code>.\nThe <code>Stretch</code> of the <code>Font</code>.\nThe <code>Style</code> of the <code>Font</code>.\nLoad and draw vector graphics.\nReturns the <code>Tag</code> of the <code>Widget</code>.\nDraw and interact with text.\nUse the built-in theme and styles.\nKeep track of time, both in native and web platforms!\nCalculates the line in which the angle intercepts the …\nSets the <code>top</code> of the <code>Padding</code>.\nTop padding\nBuild touch events.\nCreates a translate transformation.\nReturns the translation of the <code>Transformation</code>.\nComputes the union with the given <code>Rectangle</code>.\nReturns the total amount of vertical <code>Padding</code>.\nThe vertical alignment of the <code>Text</code>.\nThe <code>Weight</code> of the <code>Font</code>.\nCreate custom widgets and operate on them.\nSets the width of the <code>Border</code>.\nThe width of the border.\nWidth of the rectangle.\nThe width.\nBuild window-based GUI applications.\nDraws the primitives recorded in the given closure in a …\nCreates a non-monospaced <code>Font</code> with the given <code>Family::Name</code> …\nCreates a new <code>Layout</code> for the given <code>Node</code> with the provided …\nCreates a new square <code>Rectangle</code> with the center at the …\nCreates a new <code>Rectangle</code> with its top-left corner at the …\nApplies a <code>Transformation</code> to the primitives recorded in the …\nApplies a translation to the primitives recorded in the …\nCreates a new axis-aligned <code>Rectangle</code> from the given …\nThe <code>Wrapping</code> strategy of the <code>Text</code>.\nWrites the given text contents to the <code>Clipboard</code>.\nWrites the given contents to the <code>Clipboard</code>.\nThe X coordinate.\nX coordinate of the top-left corner.\nThe X component of the <code>Vector</code>\nThe Y coordinate.\nY coordinate of the top-left corner.\nThe Y component of the <code>Vector</code>\nAlignment on the axis of a container.\nAlign bottom\nAlign at the center of the axis.\nHorizontally centered\nVertically centered\nAlign at the end of the axis.\nThe horizontal <code>Alignment</code> of some resource.\nAlign left\nAlign right\nAlign at the start of the axis.\nAlign top\nThe vertical <code>Alignment</code> of some resource.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA border.\nThe border radii for the corners of a graphics primitive …\nCreates a new <code>Radius</code> with the given value as bottom left …\nSets the bottom left and bottom right values of the <code>Radius</code>.\nCreates a new <code>Radius</code> with the given bottom left value.\nSets the bottom left value of the <code>Radius</code>.\nBottom left radius\nCreates a new <code>Radius</code> with the given bottom right value.\nSets the bottom right value of the <code>Radius</code>.\nBottom right radius\nCreates a new <code>Border</code> with the given <code>Color</code>.\nThe color of the border.\n[ radi.top_left, radi.top_right, radi.bottom_right, …\nReturns the argument unchanged.\n[ radi.top_left, radi.top_right, radi.bottom_right, …\n[ radi.top_left, radi.top_right, radi.bottom_right, …\nCalls <code>U::from(self)</code>.\nCreates a new <code>Radius</code> with the given value as top left and …\nSets the top left and bottom left values of the <code>Radius</code>.\nCreates a new <code>Radius</code> with the same value for each corner.\nCreates a new <code>Radius</code> with the same value for each corner.\nThe <code>Radius</code> of the border.\nCreates a new <code>Radius</code> with the given value as top right and …\nSets the top right and bottom right values of the <code>Radius</code>.\nCreates a new <code>Border</code> with the given <code>Radius</code>.\nCreates a new <code>Radius</code> with the given value as top left and …\nSets the top left and top right values of the <code>Radius</code>.\nCreates a new <code>Radius</code> with the given top left value.\nSets the top left value of the <code>Radius</code>.\nTop left radius\nCreates a new <code>Radius</code> with the given top right value.\nSets the top right value of the <code>Radius</code>.\nTop right radius\nCreates a new <code>Border</code> with the given <code>width</code>.\nThe width of the border.\nA buffer for short-term storage and transfer within and …\nA list of DnD destination rectangles.\nSource of a DnD operation.\nThe kind of <code>Clipboard</code>.\nA null implementation of the <code>Clipboard</code> trait.\nThe primary clipboard.\nThe standard clipboard.\nA surface is the source of the DnD operation.\nA widget is the source of the DnD operation.\nAppends the list of DnD destination rectangles to the …\nDowncast <code>element</code> to concrete type <code>Element&lt;(), T, R&gt;</code>\nEnds a DnD operation.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the list of DnD destination rectangles. This …\nCreates a new <code>DndDestinationRectangles</code>.\nReads the current content of the primary <code>Clipboard</code>.\nConsider using <code>peek_dnd</code> instead Peeks the data on the DnD …\nPushes a new rectangle to the list of DnD destination …\nReads the current content of the <code>Clipboard</code> as text.\nReads the current content of the <code>Clipboard</code>.\nConsider using <code>read_data</code> instead Reads the current content …\nReads the current content of the primary <code>Clipboard</code>.\nStarts a DnD operation.\nRequest window size\nSet the final action for the DnD operation. Only should be …\nStarts a DnD operation. icon surface is a tuple of the …\nRegisters Dnd destinations\nCreates a new <code>DndDestinationRectangles</code> with the given …\nWrites the given text contents to the <code>Clipboard</code>.\nWrites the given contents to the <code>Clipboard</code>.\nAn Accesskit event for a specific Accesskit Node in an …\nThe <code>Event</code> was handled and processed by a widget.\nA DnD event.\nA user interface event.\nThe <code>Event</code> was <strong>NOT</strong> handled by any widget.\nA keyboard event\nA mouse event\nA platform specific event\nPlatform specific events\nThe status of an <code>Event</code> after being processed.\nA touch event\nA window event\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMerges two <code>Status</code> into one.\nGlyphs in cursive fonts generally use a more informal …\nA font family.\nFantasy fonts are primarily decorative or expressive fonts …\nA font.\nThe sole criterion of a monospace font is that all glyphs …\nThe name of a font family of choice.\nGlyphs in sans-serif fonts, as the term is used in CSS, …\nSerif fonts represent the formal text style for a script.\nThe width of some text.\nThe style of some text.\nThe weight of some text.\nThe <code>Family</code> of the <code>Font</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe <code>Stretch</code> of the <code>Font</code>.\nThe <code>Style</code> of the <code>Font</code>.\nThe <code>Weight</code> of the <code>Font</code>.\nA point along the gradient vector where the specified <code>color</code>…\nA fill which transitions colors progressively along a …\nA linear gradient.\nA linear gradient interpolates colors along a direction at …\nAdds a new <code>ColorStop</code>, defined by an offset and a color, to …\nAdds multiple <code>ColorStop</code>s to the gradient.\nHow the <code>Gradient</code> is angled within its bounds.\nThe color of the gradient at the specified <code>offset</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new <code>Linear</code> gradient with the given angle in …\nOffset along the gradient vector.\nScales the alpha channel of the <code>Linear</code> gradient by the …\n<code>ColorStop</code>s along the linear gradient path.\na custom id, which is equal to any <code>Id</code> with a matching …\nThe identifier of a generic widget.\nSimilar to PartialEq, but only intended for use when …\nInternal representation of an <code>Id</code>.\nXXX Do not use this as an id for an accessibility node, it …\na unique id\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a custom <code>Id</code>.\nresets the id counter\nCreates a unique <code>Id</code>.\nget window node id that won’t conflict with other node …\nA cheaply cloneable and sliceable chunk of contiguous …\nA handle pointing to some encoded image bytes in-memory.\nImage filtering strategy.\nA handle of some image data.\nThe image Handle to be displayed. Iced exposes its own …\nThe unique identifier of some <code>Handle</code> data.\nA raster image that can be drawn.\nBilinear interpolation.\nNearest neighbor.\nA file handle. The image data will be read from the file …\nA <code>Renderer</code> that can render raster graphics.\nA handle pointing to decoded image pixels in RGBA format.\nThe border radii of the image\nClears the buffer, removing all data.\nCreates <code>Bytes</code> instance from slice, by copying it.\nDraws an image with the given <code>Handle</code> and inside the …\nThe filter method of the image.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates an image <code>Handle</code> containing the encoded image data …\nCreate Bytes with a buffer whose lifetime is controlled …\nCreates an image <code>Handle</code> pointing to the image of the given …\nCreates an image <code>Handle</code> containing the decoded image …\nCreates a new <code>Bytes</code> from a static slice.\nThe handle of the image.\nReturns the unique identifier of the <code>Handle</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns true if the <code>Bytes</code> has a length of 0.\nReturns true if this is the only reference to the data and …\nReturns the number of bytes contained in this <code>Bytes</code>.\nReturns the dimensions of an image for the given <code>Handle</code>.\nCreates a new empty <code>Bytes</code>.\nThe opacity of the image.\nThe rotation to be applied to the image; on its center.\nReturns a slice of self for the provided range.\nReturns a slice of self that is equivalent to the given …\nIf set to <code>true</code>, the image will be snapped to the pixel …\nSplits the bytes into two at the given index.\nSplits the bytes into two at the given index.\nShortens the buffer, keeping the first <code>len</code> bytes and …\nTry to convert self into <code>BytesMut</code>.\nThe height of the image.\nThe id of this handle.\nThe pixels.\nThe width of the image.\nA key string that corresponds to the character typed by …\nA keyboard event.\nA key on the keyboard.\nA keyboard key was pressed.\nA keyboard key was released.\nThe left side of the keyboard.\nThe location of a key on the keyboard.\nThe current state of the keyboard modifiers.\nThe keyboard modifiers have changed.\nA key with an established name.\nThe numpad of the keyboard.\nThe right side of the keyboard.\nThe standard group of keys on the keyboard.\nAn unidentified key.\nIdentify keyboard keys.\nThe key pressed.\nThe key released.\nThe location of the key.\nThe location of the key.\nThe key pressed with all keyboard modifiers applied, …\nThe key released with all keyboard modifiers applied, …\nThe state of the modifier keys.\nThe state of the modifier keys.\nThe physical key pressed.\nThe physical key released.\nThe text produced by the key press, if any.\nSwitch the input mode on an external AVR (audio/video …\nToggle the power on an external AVR (audio/video …\nThe Accept (Commit, OK) key. Accept current option or …\nRedo or repeat an action.\nFound on Sun’s USB keyboard.\nInitiate the multi-candidate mode.\nThe <code>Alt</code> (Alternative) key.\nThe Alternate Graphics (AltGr or AltGraph) key.\nAlt, Option, or ⌥.\nAlt, Option, or ⌥. This is labeled AltGr on many …\nAn Android “scancode”.\nThe Application switch key, which provides a list of …\nNavigate or traverse downward. (<code>KEYCODE_DPAD_DOWN</code>)\n↓\nNavigate or traverse leftward. (<code>KEYCODE_DPAD_LEFT</code>)\n←\nNavigate or traverse rightward. (<code>KEYCODE_DPAD_RIGHT</code>)\n→\nNavigate or traverse upward. (<code>KEYCODE_DPAD_UP</code>)\n↑\nThe Attention (Attn) key.\nAdjust audio balance leftward. (<code>VK_AUDIO_BALANCE_LEFT</code>)\nAdjust audio balance rightward. (<code>VK_AUDIO_BALANCE_RIGHT</code>)\nDecrease audio bass boost or cycle down through bass boost …\nToggle bass boost on/off. (<code>APPCOMMAND_BASS_BOOST</code>)\nIncrease audio bass boost or cycle up through bass boost …\nAdjust audio fader towards front. (<code>VK_FADER_FRONT</code>)\nAdjust audio fader towards rear. (<code>VK_FADER_REAR</code>)\nAdvance surround audio mode to next available mode. (…\nDecrease treble. (<code>APPCOMMAND_TREBLE_DOWN</code>)\nIncrease treble. (<code>APPCOMMAND_TREBLE_UP</code>)\nDecrease audio volume. (<code>APPCOMMAND_VOLUME_DOWN</code>, …\nToggle between muted state and prior volume level. (…\nIncrease audio volume. (<code>APPCOMMAND_VOLUME_UP</code>, …\n` on a US keyboard. This is also called a backtick or …\nUsed for both the US \\ (on the 101-key layout) and also …\nUsed to remove the character to the left of the cursor. …\nBackspace or ⌫. Labeled Delete on Apple keyboards.\n[ on a US keyboard.\n] on a US keyboard.\nThe Brightness Down key. Typically controls the display …\nThe Brightness Up key. Typically controls the display …\nNavigate to previous content or page in current history. (…\nSome laptops place this key to the left of the ↑ key.\nOpen the list of browser favorites. (…\nNavigate to next content or page in current history. (…\nSome laptops place this key to the right of the ↑ key.\nGo to the user’s preferred home page. (…\nThe “home” button on Android.\nRefresh the current page or content. (…\nCall up the user’s preferred search page. (…\nStop loading the current page or content. (…\nThe Call key. (<code>KEYCODE_CALL</code>)\nThe Camera key. (<code>KEYCODE_CAMERA</code>)\nThe Camera focus key. (<code>KEYCODE_FOCUS</code>)\nThe <code>Caps Lock</code> (Capital) key.\nCapsLock or ⇪\nSelect next (numerically or logically) lower channel. (…\nSelect next (numerically or logically) higher channel. (…\nA key string that corresponds to the character typed by …\nRemove the currently selected input.\nClose the current document or message (Note: This …\nToggle the display of Closed Captions. (<code>VK_CC</code>, …\nCode representing the location of a physical key.\nA known key code\nInitiate the Code Input mode to allow characters to be …\nGeneral purpose color-coded media function key, as index 0 …\nGeneral purpose color-coded media function key, as index 1 …\nGeneral purpose color-coded media function key, as index 2 …\nGeneral purpose color-coded media function key, as index 3 …\nGeneral purpose color-coded media function key, as index 4 …\nGeneral purpose color-coded media function key, as index 5 …\n, on a US keyboard.\nThe Compose key, also known as “Multi_key” on the X …\nShow the application’s context menu. This key is …\nThe application context menu key, which is typically found …\nThe <code>Control</code> or <code>Ctrl</code> key.\nControl or ⌃\nControl or ⌃\nConvert the current input method sequence.\nJapanese: 変 (henkan)\nCopy the current selection. (<code>APPCOMMAND_COPY</code>)\nFound on Sun’s USB keyboard.\nThe Cursor Select key.\nCut the current selection. (<code>APPCOMMAND_CUT</code>)\nFound on Sun’s USB keyboard.\nSelect Digital Video Rrecorder. (<code>KEYCODE_DVR</code>)\nUsed to delete the character to the right of the cursor. …\n⌦. The forward delete key. Note that on Apple keyboards, …\n0 on a US keyboard.\n1 on a US keyboard.\n2 on a US keyboard.\n3 on a US keyboard.\n4 on a US keyboard.\n5 on a US keyboard.\n6 on a US keyboard.\n7 on a US keyboard.\n8 on a US keyboard.\n9 on a US keyboard.\nAdjust brightness of device, by toggling between or …\nSwap video sources. (<code>VK_DISPLAY_SWAP</code>)\nThe Eisu key. This key may close the IME, but its purpose …\nToggle removable media to eject (open) and insert (close) …\nEject or ⏏. This key is placed in the function section …\nThe End key, used with keyboard entry to go to the end of …\nPage Down, End, or ↘\nThe End Call key. (<code>KEYCODE_ENDCALL</code>)\nThe <code>Enter</code> or <code>↵</code> key. Used to activate current selection …\nEnter or ↵. Labeled Return on Apple keyboards.\n= on a US keyboard.\nThe Erase to End of Field key. This key deletes all …\nThe <code>Esc</code> key. This key was originally used to initiate an …\nEsc or ⎋\nThe Extend Selection (Exsel) key.\nExit the current application. (<code>VK_EXIT</code>)\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nClear program or content stored as favorite 0. (…\nClear program or content stored as favorite 1. (…\nClear program or content stored as favorite 2. (…\nClear program or content stored as favorite 3. (…\nSelect (recall) program or content stored as favorite 0. (…\nSelect (recall) program or content stored as favorite 1. (…\nSelect (recall) program or content stored as favorite 2. (…\nSelect (recall) program or content stored as favorite 3. (…\nStore current program or content as favorite 0. (…\nStore current program or content as favorite 1. (…\nStore current program or content as favorite 2. (…\nStore current program or content as favorite 3. (…\nThe Final Mode <code>Final</code> key used on some Asian keyboards, to …\nOpen the Find dialog. (<code>APPCOMMAND_FIND</code>)\nFound on Sun’s USB keyboard.\nThe Function switch <code>Fn</code> key. Activating this key …\nFn This is typically a hardware key that does not generate …\nThe Function-Lock (<code>FnLock</code> or <code>F-Lock</code>) key. Activating this …\nFLock or FnLock. Function Lock key. Found on the Microsoft …\nThe Back key. (<code>KEYCODE_BACK</code>)\nThe Home key, which goes to the phone’s main screen. (…\nSwitch to the first character group. (ISO/IEC 9995)\nSwitch to the last character group. (ISO/IEC 9995)\nSwitch to the next character group. (ISO/IEC 9995)\nSwitch to the previous character group. (ISO/IEC 9995)\nToggle display of program or content guide. (<code>VK_GUIDE</code>, …\nIf guide is active and displayed, then display next …\nIf guide is active and displayed, then display previous …\nToggle between Hangul and English modes.\nThe (Half-Width) Characters key.\nThe Headset Hook key. (<code>KEYCODE_HEADSETHOOK</code>)\nOpen a help dialog or toggle display of help information. (…\nHelp. Not present on standard PC keyboards.\nThe Hibernate key. This key saves the current state of the …\nThe Hiragana (Japanese Kana characters) key.\nUse for dedicated ひらがな key found on some Japanese …\nThe Hiragana/Katakana toggle key. (…\nThe Home key, used with keyboard entry, to go to start of …\nHome or ↖\nToggle display of information about currently selected …\nToggle between text modes for insertion or overtyping. (…\nInsert or Ins. Not present on Apple keyboards.\nToggle instant replay. (<code>VK_INSTANT_REPLAY</code>)\nLocated between the left Shift and Z keys. Labeled \\ on a …\nLocated between the / and right Shift keys. Labeled \\ (ro) …\nLocated between the = and Backspace keys. Labeled ¥ (yen) …")