searchState.loadedDescShard("cosmic", 14, "Start and end colors of the rail\nThe appearance of a slider rail\nThe background color of the rail\nA rectangular shape.\nAn horizontal bar and a handle that selects a single value …\nThe possible status of a <code>Slider</code>.\nThe appearance of a slider.\nA styling function for a <code>Slider</code>.\nThe <code>Background</code> of the handle.\nThe backgrounds of the rail of the slider.\nThe border of the rail.\nThe border <code>Color</code> of the handle.\nThe border width of the handle.\nThe appearance of breakpoints.\nThe color of the slider breakpoint.\nThe default style of a <code>Slider</code>.\nThe default class produced by the <code>Catalog</code>.\nThe appearance of the <code>Handle</code> of the slider.\nThe colors of the rail of the slider.\nThe shape of the handle.\nThe <code>Style</code> of a class with the given status.\nThe width of the stroke of a slider rail.\nThe border radius of the corners of the rectangle.\nThe height of the rectangle.\nThe radius of the circle.\nThe width of the rectangle.\nLet the widget determin the angle of the gradient\nthe linear gradient of the slider\nHorizontal spin button widget.\nVertical spin button widget.\nDefines the [<code>Appearance</code>] of a cards.\nAppearance of the cards.\nThe default [<code>Appearance</code>] of the cards.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe theme catalog of an <code>Svg</code>.\nThe item class of the <code>Catalog</code>.\nA handle of Svg data.\nThe <code>Svg</code> is being hovered.\nThe <code>Svg</code> is idle.\nThe possible status of an <code>Svg</code>.\nThe appearance of an <code>Svg</code>.\nA styling function for an <code>Svg</code>.\nA vector graphics image.\nThe <code>Color</code> filter of an <code>Svg</code>.\nThe default class produced by the <code>Catalog</code>.\nThe <code>Style</code> of a class with the given status.\nA collection of tabs for developing a tabbed interface.\nA collection of tabs for developing a tabbed interface.\nA bunch of text.\nAvailable presets for text typography\n<code>Text</code> widget with the Body typography preset.\n<code>Text</code> widget with the Caption typography preset.\n<code>Text</code> widget with the Caption Heading typography preset.\nReturns the argument unchanged.\n<code>Text</code> widget with the Heading typography preset.\nCalls <code>U::from(self)</code>.\n<code>Text</code> widget with the Monotext typography preset.\nCreates a new <code>Text</code> widget with the provided content.\n<code>Text</code> widget with the Title 1 typography preset.\n<code>Text</code> widget with the Title 2 typography preset.\n<code>Text</code> widget with the Title 3 typography preset.\n<code>Text</code> widget with the Title 4 typography preset.\nAn interaction with an <code>Editor</code>.\nThe <code>TextEditor</code> can be interacted with.\nDelete the previous character.\nDelete the previous character.\nA binding to an action in the <code>TextEditor</code>.\nThe theme catalog of a <code>TextEditor</code>.\nThe item class of the <code>Catalog</code>.\nClick the <code>Editor</code> at the given <code>Point</code>.\nThe content of a <code>TextEditor</code>.\nCopy the selection of the <code>TextEditor</code>.\nProduce the given message.\nCut the selection of the <code>TextEditor</code>.\nDelete the next character.\nDelete the next character.\nThe <code>TextEditor</code> cannot be interacted with.\nMove to the end of the text.\nMove to the start of the text.\nMove down.\nDrag the mouse on the <code>Editor</code> to the given <code>Point</code>.\nAn action that edits text.\nPerform an <code>Edit</code>.\nMove to the end of the line.\nBreak the current line.\nBreak the current line.\nThe <code>TextEditor</code> is focused.\nMove to the start of the line.\nThe <code>TextEditor</code> is being hovered.\nInsert the given character.\nInsert the given character.\nA key press.\nMove left.\nA cursor movement.\nApply a <code>Motion</code>.\nApply a <code>Motion</code>.\nMove to the start of the next window.\nMove to the start of the previous window.\nPaste the given text.\nPaste the clipboard contents in the <code>TextEditor</code>.\nMove right.\nScroll the <code>Editor</code> a certain amount of lines.\nSelect text with a given <code>Motion</code>.\nSelect text with a given <code>Motion</code>.\nSelect the entire buffer.\nSelect the entire buffer.\nSelect the line at the current cursor.\nSelect the line at the current cursor.\nSelect the word at the current cursor.\nSelect the word at the current cursor.\nA sequence of bindings to execute.\nThe state of a <code>TextEditor</code>.\nThe possible status of a <code>TextEditor</code>.\nThe appearance of a text input.\nA styling function for a <code>TextEditor</code>.\nA multi-line text input.\nUnfocus the <code>TextEditor</code>.\nMove up.\nMove to the left boundary of a word.\nMove to the right boundary of a word.\nThe <code>Background</code> of the text input.\nThe <code>Border</code> of the text input.\nThe default style of a <code>TextEditor</code>.\nThe default class produced by the <code>Catalog</code>.\nThe <code>Color</code> of the icon of the text input.\nThe key pressed.\nThe state of the keyboard modifiers.\nThe <code>Color</code> of the placeholder of the text input.\nThe <code>Color</code> of the selection of the text input.\nThe current <code>Status</code> of the <code>TextEditor</code>.\nThe <code>Style</code> of a class with the given status.\nThe text produced by the key press.\nThe <code>Color</code> of the value of the text input.\nThe amount of lines to scroll.\nThe appearance of a text input.\nThe state of a <code>TextInput</code>.\nThe supported style of the <code>StyleSheet</code>.\nA set of rules that dictate the style of a text input.\nA field that can be filled with text.\nA string which can be sent to the clipboard or …\nProduces the style of an active text input.\nSets the input to be always active. This makes it behave …\nThe <code>Background</code> of the text input.\nThe border <code>Color</code> of the text input.\nThe border offset\nThe border radius of the text input.\nThe border width of the text input.\nTrack the cursor of a text input.\nReturns the <code>Cursor</code> of the <code>TextInput</code>.\nProduces the style of a disabled text input.\nSets the mode of this <code>TextInput</code> to be a drag and drop icon.\nDraws the <code>TextInput</code> with the given <code>Renderer</code>, overriding its\nDraws the <code>TextInput</code> with the given <code>Renderer</code>, overriding its\nA text label whiich can transform into a text input on …\nProduces the style of an errored text input.\nSets the error message of the <code>TextInput</code>.\nProduces a <code>Task</code> that focuses the <code>TextInput</code> with the given …\nFocuses the <code>TextInput</code>.\nProduces the style of a focused text input.\nCreates a new <code>State</code>, representing a focused <code>TextInput</code>.\nSets the <code>Font</code> of the <code>TextInput</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nSets the helper text of the <code>TextInput</code>.\nProduces the style of an hovered text input.\nProduces the style of an hovered text input.\nThe icon <code>Color</code> of the text input.\nSets the <code>Id</code> of the <code>TextInput</code>.\nCreates a new inline <code>TextInput</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns whether the <code>TextInput</code> is currently focused or not.\nSets the text of the <code>TextInput</code>.\nThe label <code>Color</code> of the text input.\nComputes the layout of a <code>TextInput</code>.\nSets the start [<code>Icon</code>] of the <code>TextInput</code>.\nSets the [<code>LineHeight</code>] of the <code>TextInput</code>.\nComputes the current <code>mouse::Interaction</code> of the <code>TextInput</code>.\nProduces a <code>Task</code> that moves the cursor of the <code>TextInput</code> …\nMoves the <code>Cursor</code> of the <code>TextInput</code> to an arbitrary location.\nProduces a <code>Task</code> that moves the cursor of the <code>TextInput</code> …\nMoves the <code>Cursor</code> of the <code>TextInput</code> to the end of the input …\nProduces a <code>Task</code> that moves the cursor of the <code>TextInput</code> …\nMoves the <code>Cursor</code> of the <code>TextInput</code> to the front of the …\nCreates a new <code>TextInput</code>.\nCreates a new <code>State</code>, representing an unfocused <code>TextInput</code>.\nSets the message that should be produced when some text is …\nSets the message that should be produced when some text is …\nSets the message that should be produced when the <code>TextInput</code>…\nMaybe sets the message that should be produced when the …\nSets the <code>Padding</code> of the <code>TextInput</code>.\nConverts the <code>TextInput</code> into a secure password input.\nThe placeholder text <code>Color</code>.\nCreates a new search <code>TextInput</code>.\nCreates a new secure <code>TextInput</code>.\nProduces a <code>Task</code> that selects all the content of the …\nSelects all the content of the <code>TextInput</code>.\nSelects all text when the text input is focused\nThe selected fill <code>Color</code> of the text input.\nReturns the current value of the selected text in the …\nThe text <code>Color</code> of the text input.\nSets the text size of the <code>TextInput</code>.\nSets the style of the <code>TextInput</code>.\nSets the window id of the <code>TextInput</code> and the window id of …\nThe text <code>Color</code> of the text input.\nCreates a new <code>TextInput</code>.\nSets the end [<code>Icon</code>] of the <code>TextInput</code>.\nUnfocuses the <code>TextInput</code>.\nProcesses an <code>Event</code> and updates the <code>State</code> of a <code>TextInput</code> …\nSets the width of the <code>TextInput</code>.\nThe cursor of a text input.\nCursor without a selection\nCursor selecting a range of text\nThe state of a <code>Cursor</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the current selection of the <code>Cursor</code> for the given …\nReturns the <code>State</code> of the <code>Cursor</code>.\nThe end of the selection\nThe start of the selection\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe value of a <code>TextInput</code>.\nReturns the argument unchanged.\nInserts a new <code>char</code> at the given grapheme <code>index</code>.\nInserts a bunch of graphemes at the given grapheme <code>index</code>.\nCalls <code>U::from(self)</code>.\nReturns whether the <code>Value</code> is empty or not.\nReturns the total amount of graphemes in the <code>Value</code>.\nCreates a new <code>Value</code> from a string slice.\nReturns the position of the next end of a word from the …\nReturns the position of the previous start of a word from …\nRemoves the grapheme at the given <code>index</code>.\nRemoves the graphemes from <code>start</code> to <code>end</code>.\nReturns a new <code>Value</code> with all its graphemes replaced with …\nReturns a new <code>Value</code> containing the graphemes from <code>start</code> …\nReturns a new <code>Value</code> containing the graphemes until the …\nAction that can be triggered by the user.\nDuration for the <code>Toast</code>\nRepresent the data used to display a <code>Toast</code>\nSet the <code>Action</code> of this <code>Toast</code>\nSet the <code>Duration</code> of this <code>Toast</code>\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConstruct a new <code>Toast</code> with the provided message.\nAdd a new <code>Toast</code>\nRemove a <code>Toast</code>\nCreate a new Toaster widget.\nThe tooltip will appear on the bottom of the widget.\nThe tooltip will follow the cursor.\nThe tooltip will appear on the left of the widget.\nThe position of the tooltip. Defaults to following the …\nThe tooltip will appear on the right of the widget.\nThe tooltip will appear on the top of the widget.\nThe <code>Slider</code> can be interacted with.\nThe theme catalog of a <code>Slider</code>.\nA circular handle.\nThe item class of the <code>Catalog</code>.\nThe <code>Slider</code> is being dragged.\nLinear gradient for the background of the rail includes an …\nThe appearance of the handle of a slider.\nThe shape of the handle of a slider.\nThe <code>Slider</code> is being hovered.\nStart and end colors of the rail\nThe background color of the rail\nA rectangular shape.\nThe possible status of a <code>Slider</code>.\nThe appearance of a slider.\nA styling function for a <code>Slider</code>.\nAn vertical bar and a handle that selects a single value …\nThe <code>Background</code> of the handle.\nThe border <code>Color</code> of the handle.\nThe border width of the handle.\nThe appearance of breakpoints.\nThe default style of a <code>Slider</code>.\nThe default class produced by the <code>Catalog</code>.\nThe appearance of the <code>Handle</code> of the slider.\nThe colors of the rail of the slider.\nThe shape of the handle.\nThe <code>Style</code> of a class with the given status.\nThe border radius of the corners of the rectangle.\nThe height of the rectangle.\nThe radius of the circle.\nThe width of the rectangle.\nLet the widget determin the angle of the gradient\nthe linear gradient of the slider\nA custom button that has the desired default spacing and …\nThe message to emit on button press.")